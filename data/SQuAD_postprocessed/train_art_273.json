{"data": {"title": "Unicode", "paragraphs": [{"qas": [{"question": "What was Unicode published as?", "id": "5727b28f2ca10214002d942e", "answers": [{"text": "The Unicode Standard", "answer_start": 253}], "is_impossible": false}, {"question": "What was unicode developed in conjunction with?", "id": "5727b28f2ca10214002d942f", "answers": [{"text": "Universal Coded Character Set (UCS)", "answer_start": 191}], "is_impossible": false}, {"question": "What is the most recent version of Unicode?", "id": "5727b28f2ca10214002d9430", "answers": [{"text": "Unicode 8.0", "answer_start": 927}], "is_impossible": false}, {"question": "Who maintains the Unicode Standard? ", "id": "5727b28f2ca10214002d9431", "answers": [{"text": "Unicode Consortium", "answer_start": 974}], "is_impossible": false}, {"question": "Unicode contains how many thousands of characters in its repertoire? ", "id": "5727b28f2ca10214002d9432", "answers": [{"text": "120,000 characters", "answer_start": 340}], "is_impossible": false}, {"plausible_answers": [{"text": "The Unicode Standard", "answer_start": 253}], "question": "What is the Universal Coded Character set published as?", "id": "5acd0dff07355d001abf3290", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "120,000", "answer_start": 340}], "question": "How many characters does Arabic have?", "id": "5acd0dff07355d001abf3291", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "129", "answer_start": 368}], "question": "How many scripts does UCS cover?", "id": "5acd0dff07355d001abf3292", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UCS", "answer_start": 222}], "question": "What is the acronym for Unicode?", "id": "5acd0dff07355d001abf3293", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Arabic", "answer_start": 828}], "question": "What is an example of a left-to-right script?", "id": "5acd0dff07355d001abf3294", "answers": [], "is_impossible": true}], "context": "Unicode is a computing industry standard for the consistent encoding, representation, and handling of text expressed in most of the world's writing systems. Developed in conjunction with the Universal Coded Character Set (UCS) standard and published as The Unicode Standard, the latest version of Unicode contains a repertoire of more than 120,000 characters covering 129 modern and historic scripts, as well as multiple symbol sets. The standard consists of a set of code charts for visual reference, an encoding method and set of standard character encodings, a set of reference data files, and a number of related items, such as character properties, rules for normalization, decomposition, collation, rendering, and bidirectional display order (for the correct display of text containing both right-to-left scripts, such as Arabic and Hebrew, and left-to-right scripts). As of June 2015[update], the most recent version is Unicode 8.0. The standard is maintained by the Unicode Consortium.", "allenNER": {"words": "Unicode is a computing industry standard for the consistent encoding , representation , and handling of text expressed in most of the world 's writing systems . Developed in conjunction with the Universal Coded Character Set ( UCS ) standard and published as The Unicode Standard , the latest version of Unicode contains a repertoire of more than 120,000 characters covering 129 modern and historic scripts , as well as multiple symbol sets . The standard consists of a set of code charts for visual reference , an encoding method and set of standard character encodings , a set of reference data files , and a number of related items , such as character properties , rules for normalization , decomposition , collation , rendering , and bidirectional display order ( for the correct display of text containing both right - to - left scripts , such as Arabic and Hebrew , and left - to - right scripts ) . As of June 2015[update ] , the most recent version is Unicode 8.0 . The standard is maintained by the Unicode Consortium .", "tags": "U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC I-MISC I-MISC L-MISC O U-MISC O O O O O O B-MISC L-MISC O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O B-ORG L-ORG O"}}, {"qas": [{"question": "What are the most commonly used encodings of Unicode?", "id": "5727b3022ca10214002d9438", "answers": [{"text": "UTF-8, UTF-16 and the now-obsolete UCS-2", "answer_start": 98}], "is_impossible": false}, {"question": "What does UTF-8 use in terms of bytes? ", "id": "5727b3022ca10214002d9439", "answers": [{"text": "UTF-8 uses one byte for any ASCII character", "answer_start": 140}], "is_impossible": false}, {"question": "What type of code does UCS-2 use?", "id": "5727b3022ca10214002d943a", "answers": [{"text": "16-bit code unit", "answer_start": 314}], "is_impossible": false}, {"question": "What does UTF-16 expand? ", "id": "5727b3022ca10214002d943b", "answers": [{"text": "UCS-2", "answer_start": 450}], "is_impossible": false}, {"question": "How are two 16-bit units used? ", "id": "5727b3022ca10214002d943c", "answers": [{"text": "(4 \u00d7 8 bits", "answer_start": 552}], "is_impossible": false}, {"plausible_answers": [{"text": "Unicode", "answer_start": 0}], "question": "What are character encodings implemented by?", "id": "5acd0ee707355d001abf32b8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-8, UTF-16", "answer_start": 98}], "question": "Which two encodings are now obsolete?", "id": "5acd0ee707355d001abf32b9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-16", "answer_start": 435}], "question": "What did UCS-2 expand?", "id": "5acd0ee707355d001abf32ba", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "one", "answer_start": 151}], "question": "How many ASCII characters are used to make one UTF-8?", "id": "5acd0ee707355d001abf32bb", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-8", "answer_start": 140}], "question": "What system has a minimum of four bytes?", "id": "5acd0ee707355d001abf32bc", "answers": [], "is_impossible": true}], "context": "Unicode can be implemented by different character encodings. The most commonly used encodings are UTF-8, UTF-16 and the now-obsolete UCS-2. UTF-8 uses one byte for any ASCII character, all of which have the same code values in both UTF-8 and ASCII encoding, and up to four bytes for other characters. UCS-2 uses a 16-bit code unit (two 8-bit bytes) for each character but cannot encode every character in the current Unicode standard. UTF-16 extends UCS-2, using one 16-bit unit for the characters that were representable in UCS-2 and two 16-bit units (4 \u00d7 8 bits) to handle each of the additional characters.", "allenNER": {"words": "Unicode can be implemented by different character encodings . The most commonly used encodings are UTF-8 , UTF-16 and the now - obsolete UCS-2 . UTF-8 uses one byte for any ASCII character , all of which have the same code values in both UTF-8 and ASCII encoding , and up to four bytes for other characters . UCS-2 uses a 16-bit code unit ( two 8-bit bytes ) for each character but can not encode every character in the current Unicode standard . UTF-16 extends UCS-2 , using one 16-bit unit for the characters that were representable in UCS-2 and two 16-bit units ( 4 \u00d7 8 bits ) to handle each of the additional characters .", "tags": "U-MISC O O O O O O O O O O O O O O U-MISC O U-MISC O O O O O U-MISC O U-MISC O O O O O U-ORG O O O O O O O O O O O O U-MISC O U-MISC O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O U-MISC O U-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is the aim of Unicode?", "id": "5727b3b72ca10214002d9448", "answers": [{"text": "transcending the limitations of traditional character encodings", "answer_start": 32}], "is_impossible": false}, {"question": "Traditional character encodings don't allow what type of computer processing?", "id": "5727b3b72ca10214002d9449", "answers": [{"text": "multilingual computer processing", "answer_start": 422}], "is_impossible": false}, {"question": "What is multilingual computer processing?", "id": "5727b3b72ca10214002d944a", "answers": [{"text": "(computer processing of arbitrary scripts mixed with each other", "answer_start": 455}], "is_impossible": false}, {"question": "Bilingual computer processing uses what characters?", "id": "5727b3b72ca10214002d944b", "answers": [{"text": "usually using Latin characters", "answer_start": 360}], "is_impossible": false}, {"question": "What is the major limitation of traditional character encodings?", "id": "5727b3b72ca10214002d944c", "answers": [{"text": "wide usage in various countries of the world but remain largely incompatible with each other", "answer_start": 156}], "is_impossible": false}, {"plausible_answers": [{"text": "ISO 8859 standard", "answer_start": 126}], "question": "What was Unicode defined in?", "id": "5acd0faf07355d001abf32cc", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Latin", "answer_start": 374}], "question": "What characters does multilingual processors use?", "id": "5acd0faf07355d001abf32cd", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "traditional", "answer_start": 255}], "question": "What type of encodings do not allow bilingual computer processing?", "id": "5acd0faf07355d001abf32ce", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "wide usage in various countries of the world but remain largely incompatible with each other", "answer_start": 156}], "question": "What is the limitation of unicode globally?", "id": "5acd0faf07355d001abf32cf", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode", "answer_start": 0}], "question": "What are traditional character encodings attempting to surpass?", "id": "5acd0faf07355d001abf32d0", "answers": [], "is_impossible": true}], "context": "Unicode has the explicit aim of transcending the limitations of traditional character encodings, such as those defined by the ISO 8859 standard, which find wide usage in various countries of the world but remain largely incompatible with each other. Many traditional character encodings share a common problem in that they allow bilingual computer processing (usually using Latin characters and the local script), but not multilingual computer processing (computer processing of arbitrary scripts mixed with each other).", "allenNER": {"words": "Unicode has the explicit aim of transcending the limitations of traditional character encodings , such as those defined by the ISO 8859 standard , which find wide usage in various countries of the world but remain largely incompatible with each other . Many traditional character encodings share a common problem in that they allow bilingual computer processing ( usually using Latin characters and the local script ) , but not multilingual computer processing ( computer processing of arbitrary scripts mixed with each other ) .", "tags": "U-MISC O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What were the first 256 code points of Unicode made identical to? ", "id": "5727b735ff5b5019007d933e", "answers": [{"text": "ISO-8859-1", "answer_start": 64}], "is_impossible": false}, {"question": "Why were the first 256 code points made identical to ISO-8859-1?", "id": "5727b735ff5b5019007d933f", "answers": [{"text": "to make it trivial to convert existing western text", "answer_start": 81}], "is_impossible": false}, {"question": "What does the \"fullwidth forms\" section of code points encompass?", "id": "5727b735ff5b5019007d9340", "answers": [{"text": "a full Latin alphabet that is separate from the main Latin alphabet", "answer_start": 452}], "is_impossible": false}, {"question": "What are the CJK languages referenced?", "id": "5727b735ff5b5019007d9341", "answers": [{"text": "Chinese, Japanese, and Korean", "answer_start": 539}], "is_impossible": false}, {"plausible_answers": [{"text": "The first 256 code points", "answer_start": 0}], "question": "What did ISO-8859-1 copy?", "id": "5acd10bc07355d001abf32f4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "CJK", "answer_start": 570}], "question": "Latin is what kind of language?", "id": "5acd10bc07355d001abf32f5", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "fullwidth forms", "answer_start": 400}], "question": "What are Latin characters called when they are half width?", "id": "5acd10bc07355d001abf32f6", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "to preserve distinctions used by legacy encodings", "answer_start": 225}], "question": "Why do coders avoid duplicate characters?", "id": "5acd10bc07355d001abf32f7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "western", "answer_start": 120}], "question": "The 256 initial points make it difficult to translate what kind of text?", "id": "5acd10bc07355d001abf32f8", "answers": [], "is_impossible": true}], "context": "The first 256 code points were made identical to the content of ISO-8859-1 so as to make it trivial to convert existing western text. Many essentially identical characters were encoded multiple times at different code points to preserve distinctions used by legacy encodings and therefore, allow conversion from those encodings to Unicode (and back) without losing any information. For example, the \"fullwidth forms\" section of code points encompasses a full Latin alphabet that is separate from the main Latin alphabet section because in Chinese, Japanese, and Korean (CJK) fonts, these Latin characters are rendered at the same width as CJK ideographs, rather than at half the width. For other examples, see Duplicate characters in Unicode.", "allenNER": {"words": "The first 256 code points were made identical to the content of ISO-8859 - 1 so as to make it trivial to convert existing western text . Many essentially identical characters were encoded multiple times at different code points to preserve distinctions used by legacy encodings and therefore , allow conversion from those encodings to Unicode ( and back ) without losing any information . For example , the \" fullwidth forms \" section of code points encompasses a full Latin alphabet that is separate from the main Latin alphabet section because in Chinese , Japanese , and Korean ( CJK ) fonts , these Latin characters are rendered at the same width as CJK ideographs , rather than at half the width . For other examples , see Duplicate characters in Unicode .", "tags": "O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O U-MISC O O O O U-MISC O U-MISC O O U-MISC O U-MISC O O O O U-MISC O O O O O O O O U-MISC O O O O O O O O O O O O O O U-MISC O O U-MISC O"}}, {"qas": [{"question": "When was a surrogate character mechanism implemented in Unicode 2.0?", "id": "5727b7c62ca10214002d94ae", "answers": [{"text": "1996", "answer_start": 3}], "is_impossible": false}, {"question": "Why was a surrogate character mechanism implemented?", "id": "5727b7c62ca10214002d94af", "answers": [{"text": "so that Unicode was no longer restricted to 16 bits", "answer_start": 73}], "is_impossible": false}, {"question": "What are some characters not originally intended for Unicode? ", "id": "5727b7c62ca10214002d94b0", "answers": [{"text": "rarely used Kanji or Chinese characters", "answer_start": 443}], "is_impossible": false}, {"question": "Why are some foreign characters rarely used? ", "id": "5727b7c62ca10214002d94b1", "answers": [{"text": "many of which are part of personal and place names", "answer_start": 484}], "is_impossible": false}, {"question": "Why was the Unicode 2.0 codespace increased? ", "id": "5727b7c62ca10214002d94b2", "answers": [{"text": "allowed for the encoding of many historic scripts", "answer_start": 200}], "is_impossible": false}, {"plausible_answers": [{"text": "1996", "answer_start": 3}], "question": "When was Unicode restricted to 16 bits?", "id": "5acd118107355d001abf3326", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "personal and place names", "answer_start": 510}], "question": "What types of egyptian hieroglyphs are rarely used?", "id": "5acd118107355d001abf3327", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Kanji", "answer_start": 455}], "question": "What are the extra Unicode characters called?", "id": "5acd118107355d001abf3328", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "historic scripts (e.g., Egyptian Hieroglyphs) and thousands of rarely used or obsolete characters", "answer_start": 233}], "question": "What types of characters were removed with Unicode 2.0?", "id": "5acd118107355d001abf3329", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a surrogate character mechanism", "answer_start": 9}], "question": "What was removed in 1996?", "id": "5acd118107355d001abf332a", "answers": [], "is_impossible": true}], "context": "In 1996, a surrogate character mechanism was implemented in Unicode 2.0, so that Unicode was no longer restricted to 16 bits. This increased the Unicode codespace to over a million code points, which allowed for the encoding of many historic scripts (e.g., Egyptian Hieroglyphs) and thousands of rarely used or obsolete characters that had not been anticipated as needing encoding. Among the characters not originally intended for Unicode are rarely used Kanji or Chinese characters, many of which are part of personal and place names, making them rarely used, but much more essential than envisioned in the original architecture of Unicode.", "allenNER": {"words": "In 1996 , a surrogate character mechanism was implemented in Unicode 2.0 , so that Unicode was no longer restricted to 16 bits . This increased the Unicode codespace to over a million code points , which allowed for the encoding of many historic scripts ( e.g. , Egyptian Hieroglyphs ) and thousands of rarely used or obsolete characters that had not been anticipated as needing encoding . Among the characters not originally intended for Unicode are rarely used Kanji or Chinese characters , many of which are part of personal and place names , making them rarely used , but much more essential than envisioned in the original architecture of Unicode .", "tags": "O O O O O O O O O O B-MISC L-MISC O O O U-MISC O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O"}}, {"qas": [{"question": "What are the General Categories of Unicode?", "id": "5727dfedff5b5019007d9740", "answers": [{"text": "Letter, Mark, Number, Punctuation, Symbol, Separator and Other", "answer_start": 82}], "is_impossible": false}, {"question": "What type of use is the General Category not helpful for?", "id": "5727dfedff5b5019007d9741", "answers": [{"text": "not useful for every use, since legacy encodings have used multiple characteristics per single code point", "answer_start": 219}], "is_impossible": false}, {"question": "What is the General Category in Unicode?", "id": "5727dfedff5b5019007d9742", "answers": [{"text": "Other, Control", "answer_start": 460}], "is_impossible": false}, {"question": "How many General Category properties does each code point have?", "id": "5727dfedff5b5019007d9743", "answers": [{"text": "a single General Category property", "answer_start": 20}], "is_impossible": false}, {"question": "What exists within the main Unicode categories? ", "id": "5727dfedff5b5019007d9744", "answers": [{"text": "subdivisions", "answer_start": 181}], "is_impossible": false}, {"plausible_answers": [{"text": "Letter, Mark, Number, Punctuation, Symbol, Separator", "answer_start": 82}], "question": "What subcategories are found in the category Other?", "id": "5acd126d07355d001abf334c", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "General", "answer_start": 199}], "question": "Which category can always be used?", "id": "5acd126d07355d001abf334d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "legacy encodings have used multiple characteristics per single code point", "answer_start": 251}], "question": "Why is Symbol not useful for all instances?", "id": "5acd126d07355d001abf334e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Other, Control", "answer_start": 460}], "question": "What is the title of the Separator category in Unicode?", "id": "5acd126d07355d001abf334f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "General Category", "answer_start": 439}], "question": "\"Other, Symbol\" represents what unicode category?", "id": "5acd126d07355d001abf3350", "answers": [], "is_impossible": true}], "context": "Each code point has a single General Category property. The major categories are: Letter, Mark, Number, Punctuation, Symbol, Separator and Other. Within these categories, there are subdivisions. The General Category is not useful for every use, since legacy encodings have used multiple characteristics per single code point. E.g., U+000A <control-000A> Line feed (LF) in ASCII is both a control and a formatting separator; in Unicode the General Category is \"Other, Control\". Often, other properties must be used to specify the characteristics and behaviour of a code point. The possible General Categories are:", "allenNER": {"words": "Each code point has a single General Category property . The major categories are : Letter , Mark , Number , Punctuation , Symbol , Separator and Other . Within these categories , there are subdivisions . The General Category is not useful for every use , since legacy encodings have used multiple characteristics per single code point . E.g. , U+000A < control-000A > Line feed ( LF ) in ASCII is both a control and a formatting separator ; in Unicode the General Category is \" Other , Control \" . Often , other properties must be used to specify the characteristics and behaviour of a code point . The possible General Categories are :", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O U-MISC O B-MISC L-MISC O O B-MISC I-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What are code points in the range U+D800-U+DBFF known as? ", "id": "5727e25f3acd2414000deef7", "answers": [{"text": "high-surrogate code points", "answer_start": 72}], "is_impossible": false}, {"question": "What are code points in the range U+DC00-U+DFFF known as? ", "id": "5727e25f3acd2414000deef8", "answers": [{"text": "low-surrogate code points", "answer_start": 176}], "is_impossible": false}, {"question": "what is another name for a high-surrogate code point? ", "id": "5727e25f3acd2414000deef9", "answers": [{"text": "leading surrogate", "answer_start": 248}], "is_impossible": false}, {"question": "what is another name for a low-surrogate code point? ", "id": "5727e25f3acd2414000deefa", "answers": [{"text": "trailing surrogate", "answer_start": 323}], "is_impossible": false}, {"question": "What is known as a character's scalar value? ", "id": "5727e25f3acd2414000deefb", "answers": [{"text": "the range of code points that are available for use as characters", "answer_start": 506}], "is_impossible": false}, {"plausible_answers": [{"text": "a surrogate pair", "answer_start": 357}], "question": "What is a low-surrogate followed by a high-surrogate called?", "id": "5acd131507355d001abf3368", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "trailing surrogate", "answer_start": 323}], "question": "What is another name for a surrogate pair?", "id": "5acd131507355d001abf3369", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "1,048,576", "answer_start": 402}], "question": "How many points are represented inside of BMP?", "id": "5acd131507355d001abf336a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "High and low", "answer_start": 437}], "question": "Which kinds of code points are valid by themselves?", "id": "5acd131507355d001abf336b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "scalar value", "answer_start": 738}], "question": "What is the individual number of code points called?", "id": "5acd131507355d001abf336c", "answers": [], "is_impossible": true}], "context": "Code points in the range U+D800\u2013U+DBFF (1,024 code points) are known as high-surrogate code points, and code points in the range U+DC00\u2013U+DFFF (1,024 code points) are known as low-surrogate code points. A high-surrogate code point (also known as a leading surrogate) followed by a low-surrogate code point (also known as a trailing surrogate) together form a surrogate pair used in UTF-16 to represent 1,048,576 code points outside BMP. High and low surrogate code points are not valid by themselves. Thus the range of code points that are available for use as characters is U+0000\u2013U+D7FF and U+E000\u2013U+10FFFF (1,112,064 code points). The value of these code points (i.e., excluding surrogates) is sometimes referred to as the character's scalar value.", "allenNER": {"words": "Code points in the range U+D800\u2013U+DBFF ( 1,024 code points ) are known as high - surrogate code points , and code points in the range U+DC00\u2013U+DFFF ( 1,024 code points ) are known as low - surrogate code points . A high - surrogate code point ( also known as a leading surrogate ) followed by a low - surrogate code point ( also known as a trailing surrogate ) together form a surrogate pair used in UTF-16 to represent 1,048,576 code points outside BMP . High and low surrogate code points are not valid by themselves . Thus the range of code points that are available for use as characters is U+0000\u2013U+D7FF and U+E000\u2013U+10FFFF ( 1,112,064 code points ) . The value of these code points ( i.e. , excluding surrogates ) is sometimes referred to as the character 's scalar value .", "tags": "O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is an ogonek? ", "id": "5727e7e12ca10214002d992e", "answers": [{"text": "a dot above", "answer_start": 495}], "is_impossible": false}, {"question": "How does Unicode encode characters?", "id": "5727e7e12ca10214002d992f", "answers": [{"text": "associating an abstract character with a particular code point", "answer_start": 197}], "is_impossible": false}, {"question": "How are some abstract characters represented in Unicode?", "id": "5727e7e12ca10214002d9930", "answers": [{"text": "a sequence of two or more characters", "answer_start": 403}], "is_impossible": false}, {"plausible_answers": [{"text": "ogonek", "answer_start": 487}], "question": "What is another name for an acute accent?", "id": "5acd142f07355d001abf3390", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "an ogonek, a dot above, and an acute accent", "answer_start": 484}], "question": "What does Latin require?", "id": "5acd142f07355d001abf3391", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a particular code point", "answer_start": 236}], "question": "What are format characters associated with?", "id": "5acd142f07355d001abf3392", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the repertoire of abstract characters", "answer_start": 92}], "question": "What do sets of graphic characters directly correspond to?", "id": "5acd142f07355d001abf3393", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "abstract characters", "answer_start": 278}], "question": "What are all encoded as singular unicode characters?", "id": "5acd142f07355d001abf3394", "answers": [], "is_impossible": true}], "context": "The set of graphic and format characters defined by Unicode does not correspond directly to the repertoire of abstract characters that is representable under Unicode. Unicode encodes characters by associating an abstract character with a particular code point. However, not all abstract characters are encoded as a single Unicode character, and some abstract characters may be represented in Unicode by a sequence of two or more characters. For example, a Latin small letter \"i\" with an ogonek, a dot above, and an acute accent, which is required in Lithuanian, is represented by the character sequence U+012F, U+0307, U+0301. Unicode maintains a list of uniquely named character sequences for abstract characters that are not directly encoded in Unicode.", "allenNER": {"words": "The set of graphic and format characters defined by Unicode does not correspond directly to the repertoire of abstract characters that is representable under Unicode . Unicode encodes characters by associating an abstract character with a particular code point . However , not all abstract characters are encoded as a single Unicode character , and some abstract characters may be represented in Unicode by a sequence of two or more characters . For example , a Latin small letter \" i \" with an ogonek , a dot above , and an acute accent , which is required in Lithuanian , is represented by the character sequence U+012F , U+0307 , U+0301 . Unicode maintains a list of uniquely named character sequences for abstract characters that are not directly encoded in Unicode .", "tags": "O O O O O O O O O U-MISC O O O O O O O O O O O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O U-MISC O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O U-MISC O"}}, {"qas": [{"question": "What policy guaranteed that characters have a unique and immutable name?", "id": "5727e8362ca10214002d9934", "answers": [{"text": "Name Stability policy", "answer_start": 185}], "is_impossible": false}, {"question": "What happens when a name is defective or misleading?", "id": "5727e8362ca10214002d9935", "answers": [{"text": "a formal alias may be defined", "answer_start": 309}], "is_impossible": false}, {"question": "How long has this name immutability been guaranteed? ", "id": "5727e8362ca10214002d9936", "answers": [{"text": "since Unicode version 2.0", "answer_start": 152}], "is_impossible": false}, {"plausible_answers": [{"text": "Name Stability", "answer_start": 185}], "question": "What policy identified misleading characters?", "id": "5acd157607355d001abf33de", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the official character name", "answer_start": 408}], "question": "When an error is found, what is used in place of a formal alias?", "id": "5acd157607355d001abf33df", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode version 2.0", "answer_start": 158}], "question": "When was the formal alias yi created?", "id": "5acd157607355d001abf33e0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "U+A015 \ua015 YI SYLLABLE WU", "answer_start": 450}], "question": "What is an example of a symbol that does not use a formal alias?", "id": "5acd157607355d001abf33e1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "graphic, format, and private use", "answer_start": 4}], "question": "Which types of characters do not have unique names?", "id": "5acd157607355d001abf33e2", "answers": [], "is_impossible": true}], "context": "All graphic, format, and private use characters have a unique and immutable name by which they may be identified. This immutability has been guaranteed since Unicode version 2.0 by the Name Stability policy. In cases where the name is seriously defective and misleading, or has a serious typographical error, a formal alias may be defined, and applications are encouraged to use the formal alias in place of the official character name. For example, U+A015 \ua015 YI SYLLABLE WU has the formal alias yi syllable iteration mark, and U+FE18 \ufe18 PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKCET (sic) has the formal alias presentation form for vertical right white lenticular bracket.", "allenNER": {"words": "All graphic , format , and private use characters have a unique and immutable name by which they may be identified . This immutability has been guaranteed since Unicode version 2.0 by the Name Stability policy . In cases where the name is seriously defective and misleading , or has a serious typographical error , a formal alias may be defined , and applications are encouraged to use the formal alias in place of the official character name . For example , U+A015 \ua015 YI SYLLABLE WU has the formal alias yi syllable iteration mark , and U+FE18 \ufe18 PRESENTATION FORM FOR VERTICAL RIGHT WHITE LENTICULAR BRAKCET ( sic ) has the formal alias presentation form for vertical right white lenticular bracket .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O U-MISC O O B-ORG L-ORG O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Who was Unicode developed in conjunction with?", "id": "5727e8cc4b864d1900163fcc", "answers": [{"text": "International Organization for Standardization", "answer_start": 45}], "is_impossible": false}, {"question": "What does Unicode share a character repertoire with?", "id": "5727e8cc4b864d1900163fcd", "answers": [{"text": "the Universal Character Set", "answer_start": 148}], "is_impossible": false}, {"question": "What includes topics like bitwise encoding, collation, and rendering?", "id": "5727e8cc4b864d1900163fce", "answers": [{"text": "The Unicode Standard", "answer_start": 253}], "is_impossible": false}, {"question": "What do the two standards differ in? ", "id": "5727e8cc4b864d1900163fcf", "answers": [{"text": "slightly different terminology", "answer_start": 551}], "is_impossible": false}, {"plausible_answers": [{"text": "International Organization for Standardization", "answer_start": 45}], "question": "Who created the character repertoire for IOS/IEC 10646?", "id": "5acd15fa07355d001abf3404", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ISO/IEC 10646", "answer_start": 133}], "question": "What is another name for Unicode?", "id": "5acd15fa07355d001abf3405", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode", "answer_start": 0}], "question": "What is developed alongside the UCS?", "id": "5acd15fa07355d001abf3406", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "implementers", "answer_start": 309}], "question": "Unicode has more information regarding what?", "id": "5acd15fa07355d001abf3407", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode and ISO/IEC 10646", "answer_start": 177}], "question": "What have different character repertoires?", "id": "5acd15fa07355d001abf3408", "answers": [], "is_impossible": true}], "context": "Unicode is developed in conjunction with the International Organization for Standardization and shares the character repertoire with ISO/IEC 10646: the Universal Character Set. Unicode and ISO/IEC 10646 function equivalently as character encodings, but The Unicode Standard contains much more information for implementers, covering\u2014in depth\u2014topics such as bitwise encoding, collation and rendering. The Unicode Standard enumerates a multitude of character properties, including those needed for supporting bidirectional text. The two standards do use slightly different terminology.", "allenNER": {"words": "Unicode is developed in conjunction with the International Organization for Standardization and shares the character repertoire with ISO / IEC 10646 : the Universal Character Set . Unicode and ISO / IEC 10646 function equivalently as character encodings , but The Unicode Standard contains much more information for implementers , covering \u2014 in depth \u2014 topics such as bitwise encoding , collation and rendering . The Unicode Standard enumerates a multitude of character properties , including those needed for supporting bidirectional text . The two standards do use slightly different terminology .", "tags": "U-ORG O O O O O O B-ORG I-ORG I-ORG L-ORG O O O O O O U-ORG O B-MISC L-MISC O O B-MISC I-MISC L-MISC O U-MISC O U-ORG O B-MISC L-MISC O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "When was the Unicode Standard first published? ", "id": "5727e93b4b864d1900163fd4", "answers": [{"text": "1991", "answer_start": 76}], "is_impossible": false}, {"question": "When was the latest version, Unicode 8.0, released?", "id": "5727e93b4b864d1900163fd5", "answers": [{"text": "June 2015", "answer_start": 210}], "is_impossible": false}, {"question": "What was the last major version of Unicode to be published in book form? ", "id": "5727e93b4b864d1900163fd6", "answers": [{"text": "Unicode 5.0", "answer_start": 347}], "is_impossible": false}, {"question": "What year was it announced that only the core specification for Unicode would be printed in physical form?", "id": "5727e93b4b864d1900163fd7", "answers": [{"text": "2012", "answer_start": 479}], "is_impossible": false}, {"question": "What does the print on demand, core version not include? ", "id": "5727e93b4b864d1900163fd8", "answers": [{"text": "any code charts or standard annexes", "answer_start": 750}], "is_impossible": false}, {"plausible_answers": [{"text": "1991", "answer_start": 76}], "question": "When was the Consortium founded?", "id": "5acd1b1d07355d001abf3542", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "June", "answer_start": 210}], "question": "What month did the Consortium first publish Unicode?", "id": "5acd1b1d07355d001abf3543", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "2012", "answer_start": 479}], "question": "When was it announced that Unicode would no longer be available in book form?", "id": "5acd1b1d07355d001abf3544", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "692", "answer_start": 597}], "question": "How many pages was the original Unicode standard?", "id": "5acd1b1d07355d001abf3545", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "code charts or standard annexes", "answer_start": 754}], "question": "What extra sections are not included on the Unicode website?", "id": "5acd1b1d07355d001abf3546", "answers": [], "is_impossible": true}], "context": "The Consortium first published The Unicode Standard (ISBN 0-321-18578-1) in 1991 and continues to develop standards based on that original work. The latest version of the standard, Unicode 8.0, was released in June 2015 and is available from the consortium's website. The last of the major versions (versions x.0) to be published in book form was Unicode 5.0 (ISBN 0-321-48091-0), but since Unicode 6.0 the full text of the standard is no longer being published in book form. In 2012, however, it was announced that only the core specification for Unicode version 6.1 would be made available as a 692-page print-on-demand paperback. Unlike the previous major version printings of the Standard, the print-on-demand core specification does not include any code charts or standard annexes, but the entire standard, including the core specification, will still remain freely available on the Unicode website.", "allenNER": {"words": "The Consortium first published The Unicode Standard ( ISBN 0 - 321 - 18578 - 1 ) in 1991 and continues to develop standards based on that original work . The latest version of the standard , Unicode 8.0 , was released in June 2015 and is available from the consortium 's website . The last of the major versions ( versions x.0 ) to be published in book form was Unicode 5.0 ( ISBN 0 - 321 - 48091 - 0 ) , but since Unicode 6.0 the full text of the standard is no longer being published in book form . In 2012 , however , it was announced that only the core specification for Unicode version 6.1 would be made available as a 692-page print - on - demand paperback . Unlike the previous major version printings of the Standard , the print - on - demand core specification does not include any code charts or standard annexes , but the entire standard , including the core specification , will still remain freely available on the Unicode website .", "tags": "O U-ORG O O B-MISC I-MISC L-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O U-MISC O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O"}}, {"qas": [{"question": "Michael Everson, Rick McGowan, and Ken Whistler make up what group?", "id": "5727faefff5b5019007d99d0", "answers": [{"text": "Unicode Roadmap Committee", "answer_start": 4}], "is_impossible": false}, {"question": "What does the Unicode Roadmap Commmittee do? ", "id": "5727faefff5b5019007d99d1", "answers": [{"text": "maintain the list of scripts that are candidates or potential candidates for encoding", "answer_start": 80}], "is_impossible": false}, {"question": "What proposal has been made for the Mayan script? ", "id": "5727faefff5b5019007d99d2", "answers": [{"text": "no proposal has yet been made", "answer_start": 488}], "is_impossible": false}, {"question": "Where does the Unicode Roadmap Committee post information on these scripts?", "id": "5727faefff5b5019007d99d3", "answers": [{"text": "Unicode Consortium Web site", "answer_start": 244}], "is_impossible": false}, {"plausible_answers": [{"text": "Michael Everson, Rick McGowan, and Ken Whistler", "answer_start": 31}], "question": "Who are the potential candidates for encoding?", "id": "5acd1d2407355d001abf3588", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "The Unicode Roadmap Committee", "answer_start": 0}], "question": "Who made the proposal for the Mayan script?", "id": "5acd1d2407355d001abf3589", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "character repertoire", "answer_start": 547}], "question": "What needs to be agreed upon before a script for Jurchen is proposed?", "id": "5acd1d2407355d001abf358a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Jurchen, N\u00fc Shu, and Tangut", "answer_start": 314}], "question": "Which scripts are user committees no longer proposing?", "id": "5acd1d2407355d001abf358b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "user", "answer_start": 595}], "question": "What committies have to approve proposals?", "id": "5acd1d2407355d001abf358c", "answers": [], "is_impossible": true}], "context": "The Unicode Roadmap Committee (Michael Everson, Rick McGowan, and Ken Whistler) maintain the list of scripts that are candidates or potential candidates for encoding and their tentative code block assignments on the Unicode Roadmap page of the Unicode Consortium Web site. For some scripts on the Roadmap, such as Jurchen, N\u00fc Shu, and Tangut, encoding proposals have been made and they are working their way through the approval process. For others scripts, such as Mayan and Rongorongo, no proposal has yet been made, and they await agreement on character repertoire and other details from the user communities involved.", "allenNER": {"words": "The Unicode Roadmap Committee ( Michael Everson , Rick McGowan , and Ken Whistler ) maintain the list of scripts that are candidates or potential candidates for encoding and their tentative code block assignments on the Unicode Roadmap page of the Unicode Consortium Web site . For some scripts on the Roadmap , such as Jurchen , N\u00fc Shu , and Tangut , encoding proposals have been made and they are working their way through the approval process . For others scripts , such as Mayan and Rongorongo , no proposal has yet been made , and they await agreement on character repertoire and other details from the user communities involved .", "tags": "O B-ORG I-ORG L-ORG O B-PER L-PER O B-PER L-PER O O B-PER L-PER O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O B-ORG L-ORG O O O O O O O O U-MISC O O O U-ORG O B-ORG L-ORG O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-PER O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "How many mapping methods does Unicode define?", "id": "5728027a4b864d1900164208", "answers": [{"text": "two", "answer_start": 16}], "is_impossible": false}, {"question": "What are the two mapping methods that Unicode defines?", "id": "5728027a4b864d1900164209", "answers": [{"text": "Unicode Transformation Format (UTF) encodings, and the Universal Coded Character Set (UCS) encodings", "answer_start": 41}], "is_impossible": false}, {"question": "What do numbers in the names of the encodings indicate? ", "id": "5728027a4b864d190016420a", "answers": [{"text": "the number of bits per code value (for UTF encodings) or the number of bytes per code value", "answer_start": 336}], "is_impossible": false}, {"question": "What are the most commonly used encodings? ", "id": "5728027a4b864d190016420b", "answers": [{"text": "UTF-8 and UTF-16", "answer_start": 449}], "is_impossible": false}, {"question": "What does UCS stand for?", "id": "5728027a4b864d190016420c", "answers": [{"text": "Universal Coded Character Set", "answer_start": 96}], "is_impossible": false}, {"plausible_answers": [{"text": "two", "answer_start": 16}], "question": "How many mapping modes does USC have?", "id": "5acd1db907355d001abf35a6", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the range of Unicode code points", "answer_start": 183}], "question": "What maps an encoding?", "id": "5acd1db907355d001abf35a7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UCS-2", "answer_start": 513}], "question": "What is the subset of UTF-8?", "id": "5acd1db907355d001abf35a8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-16", "answer_start": 544}], "question": "What is functionally equivalent to USC-2?", "id": "5acd1db907355d001abf35a9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the range of Unicode code points", "answer_start": 183}], "question": "What do the sequences of values indicate?", "id": "5acd1db907355d001abf35aa", "answers": [], "is_impossible": true}], "context": "Unicode defines two mapping methods: the Unicode Transformation Format (UTF) encodings, and the Universal Coded Character Set (UCS) encodings. An encoding maps (possibly a subset of) the range of Unicode code points to sequences of values in some fixed-size range, termed code values. The numbers in the names of the encodings indicate the number of bits per code value (for UTF encodings) or the number of bytes per code value (for UCS encodings). UTF-8 and UTF-16 are probably the most commonly used encodings. UCS-2 is an obsolete subset of UTF-16; UCS-4 and UTF-32 are functionally equivalent.", "allenNER": {"words": "Unicode defines two mapping methods : the Unicode Transformation Format ( UTF ) encodings , and the Universal Coded Character Set ( UCS ) encodings . An encoding maps ( possibly a subset of ) the range of Unicode code points to sequences of values in some fixed - size range , termed code values . The numbers in the names of the encodings indicate the number of bits per code value ( for UTF encodings ) or the number of bytes per code value ( for UCS encodings ) . UTF-8 and UTF-16 are probably the most commonly used encodings . UCS-2 is an obsolete subset of UTF-16 ; UCS-4 and UTF-32 are functionally equivalent .", "tags": "U-MISC O O O O O O B-MISC I-MISC L-MISC O U-MISC O O O O O B-MISC I-MISC I-MISC L-MISC O U-MISC O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O U-MISC O U-MISC O O O O O O O O U-MISC O O O O O U-MISC O U-MISC O U-MISC O O O O"}}, {"qas": [{"question": "What does BOM stand for? ", "id": "572802e54b864d190016421c", "answers": [{"text": "Unicode Byte Order Mark", "answer_start": 43}], "is_impossible": false}, {"question": "What specifies the BOM?", "id": "572802e54b864d190016421d", "answers": [{"text": "UCS-2 and UTF-16", "answer_start": 4}], "is_impossible": false}, {"question": "what is the code point of the BOM?", "id": "572802e54b864d190016421e", "answers": [{"text": "U+FEFF", "answer_start": 212}], "is_impossible": false}, {"question": "What is U+UFFE the result of? ", "id": "572802e54b864d190016421f", "answers": [{"text": "byte-swapping U+FEFF", "answer_start": 341}], "is_impossible": false}, {"plausible_answers": [{"text": "U+FEFF", "answer_start": 212}], "question": "What is the code point for BOM?", "id": "5acd209007355d001abf35ea", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the Unicode encoding used", "answer_start": 292}], "question": "What changes the important property in BOM?", "id": "5acd209007355d001abf35eb", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a legal character", "answer_start": 382}], "question": "U+FFFE is equated to what?", "id": "5acd209007355d001abf35ec", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the Unicode Byte Order Mark", "answer_start": 39}], "question": "What are UCS-2 and UTF-16 specified by?", "id": "5acd209007355d001abf35ed", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "BOM", "answer_start": 68}], "question": "What is the abbreviation for UCS-2 and UTF-16?", "id": "5acd209007355d001abf35ee", "answers": [], "is_impossible": true}], "context": "The UCS-2 and UTF-16 encodings specify the Unicode Byte Order Mark (BOM) for use at the beginnings of text files, which may be used for byte ordering detection (or byte endianness detection). The BOM, code point U+FEFF has the important property of unambiguity on byte reorder, regardless of the Unicode encoding used; U+FFFE (the result of byte-swapping U+FEFF) does not equate to a legal character, and U+FEFF in other places, other than the beginning of text, conveys the zero-width non-break space (a character with no appearance and no effect other than preventing the formation of ligatures).", "allenNER": {"words": "The UCS-2 and UTF-16 encodings specify the Unicode Byte Order Mark ( BOM ) for use at the beginnings of text files , which may be used for byte ordering detection ( or byte endianness detection ) . The BOM , code point U+FEFF has the important property of unambiguity on byte reorder , regardless of the Unicode encoding used ; U+FFFE ( the result of byte - swapping U+FEFF ) does not equate to a legal character , and U+FEFF in other places , other than the beginning of text , conveys the zero - width non - break space ( a character with no appearance and no effect other than preventing the formation of ligatures ) .", "tags": "O U-MISC O U-MISC O O O B-MISC L-MISC O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is the UTF-8 standard? ", "id": "572805f5ff5b5019007d9b1a", "answers": [{"text": "RFC 3629", "answer_start": 351}], "is_impossible": false}, {"question": "Byte order marks are forbidden in protocols using what standard? ", "id": "572805f5ff5b5019007d9b1b", "answers": [{"text": "UTF-8", "answer_start": 446}], "is_impossible": false}, {"question": "Why is it possible to distinguish UTF-8 from other protocols?", "id": "572805f5ff5b5019007d9b1c", "answers": [{"text": "the large restriction on possible patterns", "answer_start": 522}], "is_impossible": false}, {"plausible_answers": [{"text": "where the character set is unmarked", "answer_start": 162}], "question": "BOM can not replace what kind of UTF-8 text?", "id": "5acd211a07355d001abf35fe", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "BOM", "answer_start": 111}], "question": "What is used to distinguish local 8-bit code pages?", "id": "5acd211a07355d001abf35ff", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "RFC 3629", "answer_start": 351}], "question": "What is the name of the BOM standard?", "id": "5acd211a07355d001abf3600", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "lone", "answer_start": 608}], "question": "What type of bytes are required in a high bit set?", "id": "5acd211a07355d001abf3601", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "possible patterns in UTF-8", "answer_start": 547}], "question": "What type of patterns are rarely resticted?", "id": "5acd211a07355d001abf3602", "answers": [], "is_impossible": true}], "context": "The same character converted to UTF-8 becomes the byte sequence EF BB BF. The Unicode Standard allows that the BOM \"can serve as signature for UTF-8 encoded text where the character set is unmarked\". Some software developers have adopted it for other encodings, including UTF-8, in an attempt to distinguish UTF-8 from local 8-bit code pages. However RFC 3629, the UTF-8 standard, recommends that byte order marks be forbidden in protocols using UTF-8, but discusses the cases where this may not be possible. In addition, the large restriction on possible patterns in UTF-8 (for instance there cannot be any lone bytes with the high bit set) means that it should be possible to distinguish UTF-8 from other character encodings without relying on the BOM.", "allenNER": {"words": "The same character converted to UTF-8 becomes the byte sequence EF BB BF . The Unicode Standard allows that the BOM \" can serve as signature for UTF-8 encoded text where the character set is unmarked \" . Some software developers have adopted it for other encodings , including UTF-8 , in an attempt to distinguish UTF-8 from local 8-bit code pages . However RFC 3629 , the UTF-8 standard , recommends that byte order marks be forbidden in protocols using UTF-8 , but discusses the cases where this may not be possible . In addition , the large restriction on possible patterns in UTF-8 ( for instance there can not be any lone bytes with the high bit set ) means that it should be possible to distinguish UTF-8 from other character encodings without relying on the BOM .", "tags": "O O O O O U-MISC O O O O B-MISC I-MISC L-MISC O O B-MISC L-MISC O O O U-MISC O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O U-MISC O O O O O O O B-MISC L-MISC O O U-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O U-MISC O"}}, {"qas": [{"question": "How is UTF-32 widely used? ", "id": "57280742ff5b5019007d9b3c", "answers": [{"text": "internal representation of text in programs", "answer_start": 365}], "is_impossible": false}, {"question": "What programming language uses UTF-32 as internal representation of characters? ", "id": "57280742ff5b5019007d9b3d", "answers": [{"text": "Seed7", "answer_start": 623}], "is_impossible": false}, {"question": "what version of python can be used with UTF-32? ", "id": "57280742ff5b5019007d9b3e", "answers": [{"text": "2.2", "answer_start": 763}], "is_impossible": false}, {"plausible_answers": [{"text": "endianness", "answer_start": 128}], "question": "What does not vary across platforms?", "id": "5acd21f407355d001abf361c", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Seed7", "answer_start": 623}], "question": "What uses UCS-4 as an internal representation?", "id": "5acd21f407355d001abf361d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "2.2", "answer_start": 763}], "question": "What is the last version of Python that can use UTF-32?", "id": "5acd21f407355d001abf361e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "gcc compilers", "answer_start": 501}], "question": "What does Python use to generate the standard wide character encoding?", "id": "5acd21f407355d001abf361f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-32", "answer_start": 337}], "question": "What is used to represent transmitted text?", "id": "5acd21f407355d001abf3620", "answers": [], "is_impossible": true}], "context": "In UTF-32 and UCS-4, one 32-bit code value serves as a fairly direct representation of any character's code point (although the endianness, which varies across different platforms, affects how the code value manifests as an octet sequence). In the other encodings, each code point may be represented by a variable number of code values. UTF-32 is widely used as an internal representation of text in programs (as opposed to stored or transmitted text), since every Unix operating system that uses the gcc compilers to generate software uses it as the standard \"wide character\" encoding. Some programming languages, such as Seed7, use UTF-32 as internal representation for strings and characters. Recent versions of the Python programming language (beginning with 2.2) may also be configured to use UTF-32 as the representation for Unicode strings, effectively disseminating such encoding in high-level coded software.", "allenNER": {"words": "In UTF-32 and UCS-4 , one 32-bit code value serves as a fairly direct representation of any character 's code point ( although the endianness , which varies across different platforms , affects how the code value manifests as an octet sequence ) . In the other encodings , each code point may be represented by a variable number of code values . UTF-32 is widely used as an internal representation of text in programs ( as opposed to stored or transmitted text ) , since every Unix operating system that uses the gcc compilers to generate software uses it as the standard \" wide character \" encoding . Some programming languages , such as Seed7 , use UTF-32 as internal representation for strings and characters . Recent versions of the Python programming language ( beginning with 2.2 ) may also be configured to use UTF-32 as the representation for Unicode strings , effectively disseminating such encoding in high - level coded software .", "tags": "O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O U-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O U-MISC O O O O U-MISC O O O O O O O O O O O O O"}}, {"qas": [{"question": "What combinations does unicode contain in normal use?", "id": "572808464b864d1900164292", "answers": [{"text": "most letter/diacritic combinations", "answer_start": 324}], "is_impossible": false}, {"question": "How is the latin small letter e represented in Unicode?", "id": "572808464b864d1900164293", "answers": [{"text": "U+0065", "answer_start": 597}], "is_impossible": false}, {"question": "How is the accent added to the small latin e? ", "id": "572808464b864d1900164294", "answers": [{"text": "U+0301", "answer_start": 639}], "is_impossible": false}, {"question": "What precomposed character represents the small latin e with an accent? ", "id": "572808464b864d1900164295", "answers": [{"text": "U+00E9", "answer_start": 732}], "is_impossible": false}, {"plausible_answers": [{"text": "diacritical marks", "answer_start": 145}], "question": "What are inserted before a main character?", "id": "5acd22b507355d001abf3644", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the same character", "answer_start": 258}], "question": "What cannot have multiple instances of diacritics?", "id": "5acd22b507355d001abf3645", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "combining characters", "answer_start": 527}], "question": "What do applications have to implement?", "id": "5acd22b507355d001abf3646", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the mechanism of canonical equivalence", "answer_start": 888}], "question": "What prevents redundancy in the ways you can make one character?", "id": "5acd22b507355d001abf3647", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "U+0065", "answer_start": 597}], "question": "How is the capital letter e indicated in unicode?", "id": "5acd22b507355d001abf3648", "answers": [], "is_impossible": true}], "context": "Unicode includes a mechanism for modifying character shape that greatly extends the supported glyph repertoire. This covers the use of combining diacritical marks. They are inserted after the main character. Multiple combining diacritics may be stacked over the same character. Unicode also contains precomposed versions of most letter/diacritic combinations in normal use. These make conversion to and from legacy encodings simpler, and allow applications to use Unicode as an internal text format without having to implement combining characters. For example, \u00e9 can be represented in Unicode as U+0065 (LATIN SMALL LETTER E) followed by U+0301 (COMBINING ACUTE ACCENT), but it can also be represented as the precomposed character U+00E9 (LATIN SMALL LETTER E WITH ACUTE). Thus, in many cases, users have multiple ways of encoding the same character. To deal with this, Unicode provides the mechanism of canonical equivalence.", "allenNER": {"words": "Unicode includes a mechanism for modifying character shape that greatly extends the supported glyph repertoire . This covers the use of combining diacritical marks . They are inserted after the main character . Multiple combining diacritics may be stacked over the same character . Unicode also contains precomposed versions of most letter / diacritic combinations in normal use . These make conversion to and from legacy encodings simpler , and allow applications to use Unicode as an internal text format without having to implement combining characters . For example , \u00e9 can be represented in Unicode as U+0065 ( LATIN SMALL LETTER E ) followed by U+0301 ( COMBINING ACUTE ACCENT ) , but it can also be represented as the precomposed character U+00E9 ( LATIN SMALL LETTER E WITH ACUTE ) . Thus , in many cases , users have multiple ways of encoding the same character . To deal with this , Unicode provides the mechanism of canonical equivalence .", "tags": "U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O U-MISC O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O"}}, {"qas": [{"question": "The CJK ideographs comprise simpler elements called what in English?", "id": "572809a13acd2414000df2f7", "answers": [{"text": "radicals", "answer_start": 145}], "is_impossible": false}, {"question": "Why have ideographs been unable to be simplified like Hangul?", "id": "572809a13acd2414000df2f8", "answers": [{"text": "ideographs do not decompose as simply or as regularly", "answer_start": 611}], "is_impossible": false}, {"question": "What would be the benefit of Unicode decomposing  ideographs?", "id": "572809a13acd2414000df2f9", "answers": [{"text": "greatly reduced the number of required code points", "answer_start": 259}], "is_impossible": false}, {"plausible_answers": [{"text": "CJK", "answer_start": 4}], "question": "What ideographs do not have codes for their precomposed form yet?", "id": "5acd236507355d001abf3674", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "radicals", "answer_start": 145}], "question": "What are precomposed forms called in English?", "id": "5acd236507355d001abf3675", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "simpler elements", "answer_start": 114}], "question": "What are called radicals in Hangul?", "id": "5acd236507355d001abf3676", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "decomposed them", "answer_start": 203}], "question": "What did Unicode do to CJK ideographs?", "id": "5acd236507355d001abf3677", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ideographs", "answer_start": 611}], "question": "What decomposes regularly in Wubi?", "id": "5acd236507355d001abf3678", "answers": [], "is_impossible": true}], "context": "The CJK ideographs currently have codes only for their precomposed form. Still, most of those ideographs comprise simpler elements (often called radicals in English), so in principle, Unicode could have decomposed them, as it did with Hangul. This would have greatly reduced the number of required code points, while allowing the display of virtually every conceivable ideograph (which might do away with some of the problems caused by Han unification). A similar idea is used by some input methods, such as Cangjie and Wubi. However, attempts to do this for character encoding have stumbled over the fact that ideographs do not decompose as simply or as regularly as Hangul does.", "allenNER": {"words": "The CJK ideographs currently have codes only for their precomposed form . Still , most of those ideographs comprise simpler elements ( often called radicals in English ) , so in principle , Unicode could have decomposed them , as it did with Hangul . This would have greatly reduced the number of required code points , while allowing the display of virtually every conceivable ideograph ( which might do away with some of the problems caused by Han unification ) . A similar idea is used by some input methods , such as Cangjie and Wubi . However , attempts to do this for character encoding have stumbled over the fact that ideographs do not decompose as simply or as regularly as Hangul does .", "tags": "O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O U-MISC O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O"}}, {"qas": [{"question": "What does ACE stand for? ", "id": "572809e22ca10214002d9c44", "answers": [{"text": "Arabic Calligraphic Engine", "answer_start": 292}], "is_impossible": false}, {"question": "Who created ACE?", "id": "572809e22ca10214002d9c45", "answers": [{"text": "DecoType", "answer_start": 322}], "is_impossible": false}, {"question": "When was ACE created? ", "id": "572809e22ca10214002d9c46", "answers": [{"text": "1980s", "answer_start": 338}], "is_impossible": false}, {"question": "Who created OpenType?", "id": "572809e22ca10214002d9c47", "answers": [{"text": "Adobe and Microsoft", "answer_start": 490}], "is_impossible": false}, {"question": "Who created Graphite? ", "id": "572809e22ca10214002d9c48", "answers": [{"text": "SIL International", "answer_start": 525}], "is_impossible": false}, {"plausible_answers": [{"text": "1980s", "answer_start": 338}], "question": "When was OpenType created?", "id": "5acd23f607355d001abf3686", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Arabic Calligraphic Engine", "answer_start": 292}], "question": "What does AAT stand for?", "id": "5acd23f607355d001abf3687", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Apple", "answer_start": 556}], "question": "Who partnered with SIL International?", "id": "5acd23f607355d001abf3688", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Adobe and Microsoft", "answer_start": 490}], "question": "Which two companies produced DecoType?", "id": "5acd23f607355d001abf3689", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Arabic and Devanagari", "answer_start": 24}], "question": "What are two examples of scripts without orthographic rules?", "id": "5acd23f607355d001abf368a", "answers": [], "is_impossible": true}], "context": "Many scripts, including Arabic and Devanagari, have special orthographic rules that require certain combinations of letterforms to be combined into special ligature forms. The rules governing ligature formation can be quite complex, requiring special script-shaping technologies such as ACE (Arabic Calligraphic Engine by DecoType in the 1980s and used to generate all the Arabic examples in the printed editions of the Unicode Standard), which became the proof of concept for OpenType (by Adobe and Microsoft), Graphite (by SIL International), or AAT (by Apple).", "allenNER": {"words": "Many scripts , including Arabic and Devanagari , have special orthographic rules that require certain combinations of letterforms to be combined into special ligature forms . The rules governing ligature formation can be quite complex , requiring special script - shaping technologies such as ACE ( Arabic Calligraphic Engine by DecoType in the 1980s and used to generate all the Arabic examples in the printed editions of the Unicode Standard ) , which became the proof of concept for OpenType ( by Adobe and Microsoft ) , Graphite ( by SIL International ) , or AAT ( by Apple ) .", "tags": "O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O B-MISC I-MISC L-MISC O U-MISC O O O O O O O O O U-MISC O O O O O O O B-MISC L-MISC O O O O O O O O O U-ORG O O U-ORG O U-ORG O O U-ORG O O B-ORG L-ORG O O O U-ORG O O U-ORG O O"}}, {"qas": [{"question": "where are instructions embedded to tell fonts how to output sequences? ", "id": "57280b6b4b864d19001642ec", "answers": [{"text": "in fonts", "answer_start": 31}], "is_impossible": false}, {"question": "Can real stacking be accomplished? ", "id": "57280b6b4b864d19001642ed", "answers": [{"text": "Real stacking is impossible", "answer_start": 598}], "is_impossible": false}, {"question": "what is a solution to the placement of combining marks? ", "id": "57280b6b4b864d19001642ee", "answers": [{"text": "assigning the marks a width of zero and placing the glyph itself to the left or right of the left sidebearing", "answer_start": 194}], "is_impossible": false}, {"plausible_answers": [{"text": "Real", "answer_start": 598}], "question": "What type of stacking is required?", "id": "5acd24b707355d001abf36aa", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "monospaced", "answer_start": 817}], "question": "Approximated stacking is not possible with what kinds of fonts?", "id": "5acd24b707355d001abf36ab", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "fonts", "answer_start": 34}], "question": "What does the operating system tell what to do?", "id": "5acd24b707355d001abf36ac", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "zero", "answer_start": 225}], "question": "What numerical value is assigned to the glyph?", "id": "5acd24b707355d001abf36ad", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the base glyph", "answer_start": 523}], "question": "What is a mark adjust its position relative to?", "id": "5acd24b707355d001abf36ae", "answers": [], "is_impossible": true}], "context": "Instructions are also embedded in fonts to tell the operating system how to properly output different character sequences. A simple solution to the placement of combining marks or diacritics is assigning the marks a width of zero and placing the glyph itself to the left or right of the left sidebearing (depending on the direction of the script they are intended to be used with). A mark handled this way will appear over whatever character precedes it, but will not adjust its position relative to the width or height of the base glyph; it may be visually awkward and it may overlap some glyphs. Real stacking is impossible, but can be approximated in limited cases (for example, Thai top-combining vowels and tone marks can just be at different heights to start with). Generally this approach is only effective in monospaced fonts, but may be used as a fallback rendering method when more complex methods fail.", "allenNER": {"words": "Instructions are also embedded in fonts to tell the operating system how to properly output different character sequences . A simple solution to the placement of combining marks or diacritics is assigning the marks a width of zero and placing the glyph itself to the left or right of the left sidebearing ( depending on the direction of the script they are intended to be used with ) . A mark handled this way will appear over whatever character precedes it , but will not adjust its position relative to the width or height of the base glyph ; it may be visually awkward and it may overlap some glyphs . Real stacking is impossible , but can be approximated in limited cases ( for example , Thai top - combining vowels and tone marks can just be at different heights to start with ) . Generally this approach is only effective in monospaced fonts , but may be used as a fallback rendering method when more complex methods fail .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What subset of Unicode is used by Windows? ", "id": "57280bee2ca10214002d9c96", "answers": [{"text": "WGL-4 with 652 characters", "answer_start": 93}], "is_impossible": false}, {"question": "What are MES-1, MES-2, AND MES-3A AND MES-3B part of? ", "id": "57280bee2ca10214002d9c97", "answers": [{"text": "Multilingual European Subsets", "answer_start": 281}], "is_impossible": false}, {"question": "What subset includes every character in MES-1 and WGL-4? ", "id": "57280bee2ca10214002d9c98", "answers": [{"text": "MES-2", "answer_start": 474}], "is_impossible": false}, {"question": "How long has Microsoft Windows supported WGL-4? ", "id": "57280bee2ca10214002d9c99", "answers": [{"text": "since Windows NT 4.0", "answer_start": 63}], "is_impossible": false}, {"question": "MES-1 uses what scripts only? ", "id": "57280bee2ca10214002d9c9a", "answers": [{"text": "Latin scripts only", "answer_start": 319}], "is_impossible": false}, {"plausible_answers": [{"text": "Microsoft Windows", "answer_start": 45}], "question": "What system uses MES-3A?", "id": "5acd276d07355d001abf3706", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "335", "answer_start": 339}], "question": "How many Latin characters are supported in WGL-4?", "id": "5acd276d07355d001abf3707", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "1062", "answer_start": 389}], "question": "How many characters are in MES-3B?", "id": "5acd276d07355d001abf3708", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "MES-1 and WGL-4", "answer_start": 508}], "question": "MES-3A combines which two other sets?", "id": "5acd276d07355d001abf3709", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "MES-1", "answer_start": 312}], "question": "What subset only uses the Greek script?", "id": "5acd276d07355d001abf370a", "answers": [], "is_impossible": true}], "context": "Several subsets of Unicode are standardized: Microsoft Windows since Windows NT 4.0 supports WGL-4 with 652 characters, which is considered to support all contemporary European languages using the Latin, Greek, or Cyrillic script. Other standardized subsets of Unicode include the Multilingual European Subsets: MES-1 (Latin scripts only, 335 characters), MES-2 (Latin, Greek and Cyrillic 1062 characters) and MES-3A & MES-3B (two larger subsets, not shown here). Note that MES-2 includes every character in MES-1 and WGL-4.", "allenNER": {"words": "Several subsets of Unicode are standardized : Microsoft Windows since Windows NT 4.0 supports WGL-4 with 652 characters , which is considered to support all contemporary European languages using the Latin , Greek , or Cyrillic script . Other standardized subsets of Unicode include the Multilingual European Subsets : MES-1 ( Latin scripts only , 335 characters ) , MES-2 ( Latin , Greek and Cyrillic 1062 characters ) and MES-3A & MES-3B ( two larger subsets , not shown here ) . Note that MES-2 includes every character in MES-1 and WGL-4 .", "tags": "O O O U-MISC O O O B-MISC L-MISC O B-MISC I-MISC L-MISC O U-MISC O O O O O O O O O O O U-MISC O O O U-MISC O U-MISC O O U-MISC O O O O O O U-MISC O O B-MISC I-MISC L-MISC O U-MISC O U-MISC O O O O O O O U-MISC O U-MISC O U-MISC O U-MISC O O O O U-MISC O U-MISC O O O O O O O O O O O O U-MISC O O O O U-MISC O U-MISC O"}}, {"qas": [{"question": "What does rendering software display when it can't process a Unicode character? ", "id": "57280ea3ff5b5019007d9bf6", "answers": [{"text": "open rectangle, or the Unicode \"replacement character\"", "answer_start": 98}], "is_impossible": false}, {"question": "What is the code for the Unicode replacement character? ", "id": "57280ea3ff5b5019007d9bf7", "answers": [{"text": "U+FFFD", "answer_start": 154}], "is_impossible": false}, {"question": "What is the name of Apple's font? ", "id": "57280ea3ff5b5019007d9bf8", "answers": [{"text": "Last Resort", "answer_start": 317}], "is_impossible": false}, {"question": "What does SIL's Unicode Fallback font display when it can't display a character properly? ", "id": "57280ea3ff5b5019007d9bf9", "answers": [{"text": "a box showing the hexadecimal scalar value of the character", "answer_start": 476}], "is_impossible": false}, {"question": "What company uses the Unicode Fallback font? ", "id": "57280ea3ff5b5019007d9bfa", "answers": [{"text": "SIL International", "answer_start": 421}], "is_impossible": false}, {"plausible_answers": [{"text": "U+FFFD", "answer_start": 154}], "question": "What is the Unicode for an open rectangle?", "id": "5acd29f507355d001abf3772", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Apple", "answer_start": 309}], "question": "What company uses U+FFFD?", "id": "5acd29f507355d001abf3773", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "\ufffd", "answer_start": 162}], "question": "What is the glyph that Apple's Last Resort font displays?", "id": "5acd29f507355d001abf3774", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode Fallback", "answer_start": 441}], "question": "What software by SIL cannot process unicode characters?", "id": "5acd29f507355d001abf3775", "answers": [], "is_impossible": true}], "context": "Rendering software which cannot process a Unicode character appropriately often displays it as an open rectangle, or the Unicode \"replacement character\" (U+FFFD, \ufffd), to indicate the position of the unrecognized character. Some systems have made attempts to provide more information about such characters. The Apple's Last Resort font will display a substitute glyph indicating the Unicode range of the character, and the SIL International's Unicode Fallback font will display a box showing the hexadecimal scalar value of the character.", "allenNER": {"words": "Rendering software which can not process a Unicode character appropriately often displays it as an open rectangle , or the Unicode \" replacement character \" ( U+FFFD , \ufffd ) , to indicate the position of the unrecognized character . Some systems have made attempts to provide more information about such characters . The Apple 's Last Resort font will display a substitute glyph indicating the Unicode range of the character , and the SIL International 's Unicode Fallback font will display a box showing the hexadecimal scalar value of the character .", "tags": "O O O O O O O U-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O U-MISC O O O O O O O B-ORG L-ORG O B-MISC L-MISC O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is the dominant scheme for internal processing? ", "id": "57280fad3acd2414000df365", "answers": [{"text": "Unicode", "answer_start": 0}], "is_impossible": false}, {"question": "What is Unicode available through Windows on? ", "id": "57280fad3acd2414000df366", "answers": [{"text": "Microsoft Layer", "answer_start": 779}], "is_impossible": false}, {"question": "What was the two-byte precursor to UTF-16? ", "id": "57280fad3acd2414000df367", "answers": [{"text": "UCS-2", "answer_start": 264}], "is_impossible": false}, {"question": "What is used almost exclusively for building new information processing systems? ", "id": "57280fad3acd2414000df368", "answers": [{"text": "Unicode", "answer_start": 151}], "is_impossible": false}, {"plausible_answers": [{"text": "building new information processing systems", "answer_start": 190}], "question": "What are legacy encodings used exclusively for?", "id": "5acd2c8407355d001abf37ce", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-16", "answer_start": 309}], "question": "What was the precursor to the UCS-2?", "id": "5acd2c8407355d001abf37cf", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Windows 2000, Windows XP, Windows Vista and Windows 7", "answer_start": 521}], "question": "What descended from Mac OS X?", "id": "5acd2c8407355d001abf37d0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "bytecode environments", "answer_start": 654}], "question": "What are Mac OS X and KDE called?", "id": "5acd2c8407355d001abf37d1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UCS-2", "answer_start": 264}], "question": "What is fixed-width one byte?", "id": "5acd2c8407355d001abf37d2", "answers": [], "is_impossible": true}], "context": "Unicode has become the dominant scheme for internal processing and storage of text. Although a great deal of text is still stored in legacy encodings, Unicode is used almost exclusively for building new information processing systems. Early adopters tended to use UCS-2 (the fixed-width two-byte precursor to UTF-16) and later moved to UTF-16 (the variable-width current standard), as this was the least disruptive way to add support for non-BMP characters. The best known such system is Windows NT (and its descendants, Windows 2000, Windows XP, Windows Vista and Windows 7), which uses UTF-16 as the sole internal character encoding. The Java and .NET bytecode environments, Mac OS X, and KDE also use it for internal representation. Unicode is available on Windows 95 through Microsoft Layer for Unicode, as well as on its descendants, Windows 98 and Windows ME.", "allenNER": {"words": "Unicode has become the dominant scheme for internal processing and storage of text . Although a great deal of text is still stored in legacy encodings , Unicode is used almost exclusively for building new information processing systems . Early adopters tended to use UCS-2 ( the fixed - width two - byte precursor to UTF-16 ) and later moved to UTF-16 ( the variable - width current standard ) , as this was the least disruptive way to add support for non - BMP characters . The best known such system is Windows NT ( and its descendants , Windows 2000 , Windows XP , Windows Vista and Windows 7 ) , which uses UTF-16 as the sole internal character encoding . The Java and .NET bytecode environments , Mac OS X , and KDE also use it for internal representation . Unicode is available on Windows 95 through Microsoft Layer for Unicode , as well as on its descendants , Windows 98 and Windows ME .", "tags}}, {"qas": [{"question": "What is recommended for email transmission of Unicode? ", "id": "572810c62ca10214002d9d00", "answers": [{"text": "the UTF-8 character set and the Base64 or the Quoted-printable transfer encoding", "answer_start": 323}], "is_impossible": false}, {"question": "Where are the details of the two mechanisms for email transmission specified? ", "id": "572810c62ca10214002d9d01", "answers": [{"text": "MIME standards", "answer_start": 557}], "is_impossible": false}, {"question": "How many different mechanisms does MIME define for encoding Unicode in email? ", "id": "572810c62ca10214002d9d02", "answers": [{"text": "two different mechanisms", "answer_start": 13}], "is_impossible": false}, {"plausible_answers": [{"text": "two", "answer_start": 13}], "question": "How many ways can ASCII characters be encoded in an email?", "id": "5acd2f3507355d001abf382e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Subject:", "answer_start": 153}], "question": "What is another way to refer to the text body?", "id": "5acd2f3507355d001abf382f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "MIME standards", "answer_start": 557}], "question": "What specifications are visible to the user?", "id": "5acd2f3507355d001abf3830", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "email transmission", "answer_start": 293}], "question": "When is Base64 not recommended?", "id": "5acd2f3507355d001abf3831", "answers": [], "is_impossible": true}], "context": "MIME defines two different mechanisms for encoding non-ASCII characters in email, depending on whether the characters are in email headers (such as the \"Subject:\"), or in the text body of the message; in both cases, the original character set is identified as well as a transfer encoding. For email transmission of Unicode the UTF-8 character set and the Base64 or the Quoted-printable transfer encoding are recommended, depending on whether much of the message consists of ASCII-characters. The details of the two different mechanisms are specified in the MIME standards and generally are hidden from users of email software.", "allenNER": {"words": "MIME defines two different mechanisms for encoding non - ASCII characters in email , depending on whether the characters are in email headers ( such as the \" Subject : \" ) , or in the text body of the message ; in both cases , the original character set is identified as well as a transfer encoding . For email transmission of Unicode the UTF-8 character set and the Base64 or the Quoted - printable transfer encoding are recommended , depending on whether much of the message consists of ASCII - characters . The details of the two different mechanisms are specified in the MIME standards and generally are hidden from users of email software .", "tags": "U-ORG O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-MISC O O O O U-MISC O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O"}}, {"qas": [{"question": "How many fonts support the majority of Unicode's character repertoire? ", "id": "572812d44b864d19001643c8", "answers": [{"text": "fewer than a dozen fonts", "answer_start": 44}], "is_impossible": false}, {"question": "What are the fonts that support Unicode referred to as? ", "id": "572812d44b864d19001643c9", "answers": [{"text": "\"pan-Unicode\" fonts", "answer_start": 92}], "is_impossible": false}, {"question": "Unicode-based fonts are normally focused on supporting what? ", "id": "572812d44b864d19001643ca", "answers": [{"text": "basic ASCII and particular scripts or sets of characters or symbols", "answer_start": 243}], "is_impossible": false}, {"plausible_answers": [{"text": "pan-Unicode", "answer_start": 93}], "question": "What are most of the fonts on the market called?", "id": "5acd309b07355d001abf3888", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "basic ASCII and particular scripts or sets of characters or symbols", "answer_start": 243}], "question": "Pan unicode fonts only support what?", "id": "5acd309b07355d001abf3889", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "applications and documents", "answer_start": 351}], "question": "What normally need more than one or two writing systems?", "id": "5acd309b07355d001abf388a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "font substitution", "answer_start": 663}], "question": "What is another name for computing environments?", "id": "5acd309b07355d001abf388b", "answers": [], "is_impossible": true}], "context": "Thousands of fonts exist on the market, but fewer than a dozen fonts\u2014sometimes described as \"pan-Unicode\" fonts\u2014attempt to support the majority of Unicode's character repertoire. Instead, Unicode-based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols. Several reasons justify this approach: applications and documents rarely need to render characters from more than one or two writing systems; fonts tend to demand resources in computing environments; and operating systems and applications show increasing intelligence in regard to obtaining glyph information from separate font files as needed, i.e., font substitution. Furthermore, designing a consistent set of rendering instructions for tens of thousands of glyphs constitutes a monumental task; such a venture passes the point of diminishing returns for most typefaces.", "allenNER": {"words": "Thousands of fonts exist on the market , but fewer than a dozen fonts \u2014 sometimes described as \" pan - Unicode \" fonts \u2014 attempt to support the majority of Unicode 's character repertoire . Instead , Unicode - based fonts typically focus on supporting only basic ASCII and particular scripts or sets of characters or symbols . Several reasons justify this approach : applications and documents rarely need to render characters from more than one or two writing systems ; fonts tend to demand resources in computing environments ; and operating systems and applications show increasing intelligence in regard to obtaining glyph information from separate font files as needed , i.e. , font substitution . Furthermore , designing a consistent set of rendering instructions for tens of thousands of glyphs constitutes a monumental task ; such a venture passes the point of diminishing returns for most typefaces .", "tags": "O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O U-ORG O O O O O O U-MISC O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is the code for separating lines? ", "id": "572813b04b864d19001643e2", "answers": [{"text": "U+2028", "answer_start": 44}], "is_impossible": false}, {"question": "What is the code for separating paragraphs? ", "id": "572813b04b864d19001643e3", "answers": [{"text": "U+2029", "answer_start": 70}], "is_impossible": false}, {"question": "How is newline normalization accomplished in Mac OS X? ", "id": "572813b04b864d19001643e4", "answers": [{"text": "Cocoa text system", "answer_start": 602}], "is_impossible": false}, {"question": "How does the newliine normallization format work? ", "id": "572813b04b864d19001643e5", "answers": [{"text": "every possible newline character is converted internally to a common newline", "answer_start": 697}], "is_impossible": false}, {"plausible_answers": [{"text": "U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR", "answer_start": 44}], "question": "What widely adopted solution did Unicode provide?", "id": "5acd431a07355d001abf3af0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Mac OS X", "answer_start": 623}], "question": "What uses HTML recommendations?", "id": "5acd431a07355d001abf3af1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "it is an internal operation just for rendering", "answer_start": 814}], "question": "Why does it matter which newline character is chosen?", "id": "5acd431a07355d001abf3af2", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "W3C XML", "answer_start": 646}], "question": "What is the name of the Cocoa text system?", "id": "5acd431a07355d001abf3af3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "every possible newline character", "answer_start": 697}], "question": "What are common newlines converted into?", "id": "5acd431a07355d001abf3af4", "answers": [], "is_impossible": true}], "context": "In terms of the newline, Unicode introduced U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR. This was an attempt to provide a Unicode solution to encoding paragraphs and lines semantically, potentially replacing all of the various platform solutions. In doing so, Unicode does provide a way around the historical platform dependent solutions. Nonetheless, few if any Unicode solutions have adopted these Unicode line and paragraph separators as the sole canonical line ending characters. However, a common approach to solving this issue is through newline normalization. This is achieved with the Cocoa text system in Mac OS X and also with W3C XML and HTML recommendations. In this approach every possible newline character is converted internally to a common newline (which one does not really matter since it is an internal operation just for rendering). In other words, the text system can correctly treat the character as a newline, regardless of the input's actual encoding.", "allenNER": {"words": "In terms of the newline , Unicode introduced U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR . This was an attempt to provide a Unicode solution to encoding paragraphs and lines semantically , potentially replacing all of the various platform solutions . In doing so , Unicode does provide a way around the historical platform dependent solutions . Nonetheless , few if any Unicode solutions have adopted these Unicode line and paragraph separators as the sole canonical line ending characters . However , a common approach to solving this issue is through newline normalization . This is achieved with the Cocoa text system in Mac OS X and also with W3C XML and HTML recommendations . In this approach every possible newline character is converted internally to a common newline ( which one does not really matter since it is an internal operation just for rendering ) . In other words , the text system can correctly treat the character as a newline , regardless of the input 's actual encoding .", "tags": "O O O O O O U-MISC O O B-MISC L-MISC O O U-MISC O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O U-MISC O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O B-MISC I-MISC L-MISC O O O B-MISC L-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Why has Unicode been criticized for not separately encoding forms of kanji?", "id": "572814a54b864d190016440e", "answers": [{"text": "complicates the processing of ancient Japanese and uncommon Japanese names", "answer_start": 120}], "is_impossible": false}, {"question": "What is TRON? ", "id": "572814a54b864d190016440f", "answers": [{"text": "alternative encodings that preserve the stylistic differences between Chinese, Japanese, and Korean characters", "answer_start": 580}], "is_impossible": false}, {"question": "What perception does the unification of glyphs cause? ", "id": "572814a54b864d1900164410", "answers": [{"text": "the languages themselves, not just the basic character representation, are being merged", "answer_start": 426}], "is_impossible": false}, {"plausible_answers": [{"text": "glyphs", "answer_start": 270}], "question": "What does Unicode encode instead of characters?", "id": "5acd478d07355d001abf3bf8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the visual representations of the basic character that often vary from one language to another", "answer_start": 278}], "question": "What are characters defined as?", "id": "5acd478d07355d001abf3bf9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "TRON", "answer_start": 766}], "question": "What alternative has become popular in Japan?", "id": "5acd478d07355d001abf3bfa", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Chinese, Japanese, and Korean", "answer_start": 650}], "question": "What languages do not suffer from the unification of glyphs?", "id": "5acd478d07355d001abf3bfb", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the languages themselves", "answer_start": 426}], "question": "What are being merged alongside just the glyphs?", "id": "5acd478d07355d001abf3bfc", "answers": [], "is_impossible": true}], "context": "Unicode has been criticized for failing to separately encode older and alternative forms of kanji which, critics argue, complicates the processing of ancient Japanese and uncommon Japanese names. This is often due to the fact that Unicode encodes characters rather than glyphs (the visual representations of the basic character that often vary from one language to another). Unification of glyphs leads to the perception that the languages themselves, not just the basic character representation, are being merged.[clarification needed] There have been several attempts to create alternative encodings that preserve the stylistic differences between Chinese, Japanese, and Korean characters in opposition to Unicode's policy of Han unification. An example of one is TRON (although it is not widely adopted in Japan, there are some users who need to handle historical Japanese text and favor it).", "allenNER": {"words": "Unicode has been criticized for failing to separately encode older and alternative forms of kanji which , critics argue , complicates the processing of ancient Japanese and uncommon Japanese names . This is often due to the fact that Unicode encodes characters rather than glyphs ( the visual representations of the basic character that often vary from one language to another ) . Unification of glyphs leads to the perception that the languages themselves , not just the basic character representation , are being merged.[clarification needed ] There have been several attempts to create alternative encodings that preserve the stylistic differences between Chinese , Japanese , and Korean characters in opposition to Unicode 's policy of Han unification . An example of one is TRON ( although it is not widely adopted in Japan , there are some users who need to handle historical Japanese text and favor it ) .", "tags": "U-MISC O O O O O O O O O O O O O U-MISC O O O O O O O O O O U-MISC O O U-MISC O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-MISC O O U-MISC O O O O U-MISC O O O U-MISC O O O O O O O U-ORG O O O O O O O O U-LOC O O O O O O O O O O U-MISC O O O O O O"}}, {"qas": [{"question": "what tables of OpenType allow permit the selection of alternative glyph representations?", "id": "572815a04b864d190016443a", "answers": [{"text": "Advanced Typographic", "answer_start": 240}], "is_impossible": false}, {"question": "Where is information provided to designate which character form to select? ", "id": "572815a04b864d190016443b", "answers": [{"text": "plain text", "answer_start": 460}], "is_impossible": false}, {"question": "How does modern font technology address the issue of depicting a Han character in alternate glyph representations? ", "id": "572815a04b864d190016443c", "answers": [{"text": "Unicode variation sequences", "answer_start": 194}], "is_impossible": false}, {"plausible_answers": [{"text": "Modern font technology", "answer_start": 0}], "question": "What has worsened the practical aspects of unification?", "id": "5acd4aa407355d001abf3c28", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Advanced Typographic tables", "answer_start": 240}], "question": "What prevents OpenType from having alternative glyphs?", "id": "5acd4aa407355d001abf3c29", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "plain text", "answer_start": 460}], "question": "What designates which alternate character to select?", "id": "5acd4aa407355d001abf3c2a", "answers": [], "is_impossible": true}], "context": "Modern font technology provides a means to address the practical issue of needing to depict a unified Han character in terms of a collection of alternative glyph representations, in the form of Unicode variation sequences. For example, the Advanced Typographic tables of OpenType permit one of a number of alternative glyph representations to be selected when performing the character to glyph mapping process. In this case, information can be provided within plain text to designate which alternate character form to select.", "allenNER": {"words": "Modern font technology provides a means to address the practical issue of needing to depict a unified Han character in terms of a collection of alternative glyph representations , in the form of Unicode variation sequences . For example , the Advanced Typographic tables of OpenType permit one of a number of alternative glyph representations to be selected when performing the character to glyph mapping process . In this case , information can be provided within plain text to designate which alternate character form to select .", "tags": "O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O U-MISC O O O O O O O B-MISC L-MISC O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Unicode was designed for a round trip format conversion to and from what? ", "id": "57281627ff5b5019007d9cd4", "answers": [{"text": "preexisting character encodings", "answer_start": 102}], "is_impossible": false}, {"question": "How many encoding forms are there for Korean Hangul?", "id": "57281627ff5b5019007d9cd5", "answers": [{"text": "three different encoding forms", "answer_start": 478}], "is_impossible": false}, {"question": "Since what version can already existing characters no longer be added to the standard? ", "id": "57281627ff5b5019007d9cd6", "answers": [{"text": "version 3.0", "answer_start": 534}], "is_impossible": false}, {"plausible_answers": [{"text": "preexisting character encodings", "answer_start": 102}], "question": "What is Unicode converted into?", "id": "5acd55da07355d001abf3d98", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "three", "answer_start": 478}], "question": "How many encoding forms does Unicode have?", "id": "5acd55da07355d001abf3d99", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "3.0", "answer_start": 542}], "question": "After what version did it become possible to add preexisting characters?", "id": "5acd55da07355d001abf3d9a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "precomposed characters that can be represented by a combining sequence of already existing characters", "answer_start": 551}], "question": "What type of characters can be added in versions post 3.0? ", "id": "5acd55da07355d001abf3d9b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "interoperability", "answer_start": 713}], "question": "What does adding characters help to preserve?", "id": "5acd55da07355d001abf3d9c", "answers": [], "is_impossible": true}], "context": "Unicode was designed to provide code-point-by-code-point round-trip format conversion to and from any preexisting character encodings, so that text files in older character sets can be na\u00efvely converted to Unicode, and then back and get back the same file. That has meant that inconsistent legacy architectures, such as combining diacritics and precomposed characters, both exist in Unicode, giving more than one method of representing some text. This is most pronounced in the three different encoding forms for Korean Hangul. Since version 3.0, any precomposed characters that can be represented by a combining sequence of already existing characters can no longer be added to the standard in order to preserve interoperability between software using different versions of Unicode.", "allenNER": {"words": "Unicode was designed to provide code - point - by - code - point round - trip format conversion to and from any preexisting character encodings , so that text files in older character sets can be na\u00efvely converted to Unicode , and then back and get back the same file . That has meant that inconsistent legacy architectures , such as combining diacritics and precomposed characters , both exist in Unicode , giving more than one method of representing some text . This is most pronounced in the three different encoding forms for Korean Hangul . Since version 3.0 , any precomposed characters that can be represented by a combining sequence of already existing characters can no longer be added to the standard in order to preserve interoperability between software using different versions of Unicode .", "tags": "U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O"}}, {"qas": [{"question": "What kind of mappings must be provided between characters in existing legacy character sets and those in Unicode?", "id": "572816943acd2414000df433", "answers": [{"text": "Injective mappings", "answer_start": 0}], "is_impossible": false}, {"question": "A lack of consistency between what earlier Japanese encodings and unicode led to mismatches?", "id": "572816943acd2414000df434", "answers": [{"text": "Shift-JIS or EUC-JP", "answer_start": 283}], "is_impossible": false}, {"question": "what is the fullwidth tilde character code in Microsoft Windows?", "id": "572816943acd2414000df435", "answers": [{"text": "U+FF5E", "answer_start": 487}], "is_impossible": false}, {"plausible_answers": [{"text": "Injective mappings", "answer_start": 0}], "question": "What helps to convert characters out of Unicode?", "id": "5acd56b907355d001abf3db6", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Microsoft Windows", "answer_start": 516}], "question": "WAVE DASH is only found in what version of OS?", "id": "5acd56b907355d001abf3db7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "U+FF5E", "answer_start": 487}], "question": "What is the Windows code for EUC-JP?", "id": "5acd56b907355d001abf3db8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Shift-JIS or EUC-JP", "answer_start": 283}], "question": "What are the names of the two forms of Unicode?", "id": "5acd56b907355d001abf3db9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "round-trip format conversion mismatches", "answer_start": 322}], "question": "What does a lack of consistency prevent?", "id": "5acd56b907355d001abf3dba", "answers": [], "is_impossible": true}], "context": "Injective mappings must be provided between characters in existing legacy character sets and characters in Unicode to facilitate conversion to Unicode and allow interoperability with legacy software. Lack of consistency in various mappings between earlier Japanese encodings such as Shift-JIS or EUC-JP and Unicode led to round-trip format conversion mismatches, particularly the mapping of the character JIS X 0208 '\uff5e' (1-33, WAVE DASH), heavily used in legacy database data, to either U+FF5E \uff5e FULLWIDTH TILDE (in Microsoft Windows) or U+301C \u301c WAVE DASH (other vendors).", "allenNER": {"words": "Injective mappings must be provided between characters in existing legacy character sets and characters in Unicode to facilitate conversion to Unicode and allow interoperability with legacy software . Lack of consistency in various mappings between earlier Japanese encodings such as Shift - JIS or EUC - JP and Unicode led to round - trip format conversion mismatches , particularly the mapping of the character JIS X 0208 ' \uff5e ' ( 1 - 33 , WAVE DASH ) , heavily used in legacy database data , to either U+FF5E \uff5e FULLWIDTH TILDE ( in Microsoft Windows ) or U+301C \u301c WAVE DASH ( other vendors ) .", "tags": "O O O O O O O O O O O O O O O U-MISC O O O O U-MISC O O O O O O O O O O O O O O O U-MISC O O O O O U-MISC O U-ORG O U-ORG O U-ORG O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O B-MISC L-MISC O O O O O O O O O O O"}}, {"qas": [{"question": "How many code points are tamil and Devanagari allocated? ", "id": "5728171b4b864d1900164452", "answers": [{"text": "128", "answer_start": 67}], "is_impossible": false}, {"question": "What is another word for ligatures? ", "id": "5728171b4b864d1900164453", "answers": [{"text": "conjuncts", "answer_start": 267}], "is_impossible": false}, {"question": "What is the ISCII standard? ", "id": "5728171b4b864d1900164454", "answers": [{"text": "128 code points", "answer_start": 67}], "is_impossible": false}, {"plausible_answers": [{"text": "128 code", "answer_start": 67}], "question": "How many points is Arabic given?", "id": "5acd579107355d001abf3dec", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "local scholars", "answer_start": 302}], "question": "Who argued Indic scripts should follow the practice of other writing systems?", "id": "5acd579107355d001abf3ded", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unicode is an encoding independent of font variations", "answer_start": 661}], "question": "Why are more ligatures in Unicode likely to happen?", "id": "5acd579107355d001abf3dee", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Chinese National Standard", "answer_start": 786}], "question": "Which organization successfully argued for the Tibetan script?", "id": "5acd579107355d001abf3def", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "visual order", "answer_start": 220}], "question": "What is the visual order transformed into?", "id": "5acd579107355d001abf3df0", "answers": [], "is_impossible": true}], "context": "Indic scripts such as Tamil and Devanagari are each allocated only 128 code points, matching the ISCII standard. The correct rendering of Unicode Indic text requires transforming the stored logical order characters into visual order and the forming of ligatures (aka conjuncts) out of components. Some local scholars argued in favor of assignments of Unicode code points to these ligatures, going against the practice for other writing systems, though Unicode contains some Arabic and other ligatures for backward compatibility purposes only. Encoding of any new ligatures in Unicode will not happen, in part because the set of ligatures is font-dependent, and Unicode is an encoding independent of font variations. The same kind of issue arose for Tibetan script[citation needed] (the Chinese National Standard organization failed to achieve a similar change).", "allenNER": {"words": "Indic scripts such as Tamil and Devanagari are each allocated only 128 code points , matching the ISCII standard . The correct rendering of Unicode Indic text requires transforming the stored logical order characters into visual order and the forming of ligatures ( aka conjuncts ) out of components . Some local scholars argued in favor of assignments of Unicode code points to these ligatures , going against the practice for other writing systems , though Unicode contains some Arabic and other ligatures for backward compatibility purposes only . Encoding of any new ligatures in Unicode will not happen , in part because the set of ligatures is font - dependent , and Unicode is an encoding independent of font variations . The same kind of issue arose for Tibetan script[citation needed ] ( the Chinese National Standard organization failed to achieve a similar change ) .", "tags": "O O O O U-MISC O U-MISC O O O O O O O O O O U-ORG O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O U-MISC O O U-MISC O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O U-MISC O O O O O B-ORG I-ORG L-ORG O O O O O O O O O"}}, {"qas": [{"question": "What standard did Unicode inherit involving a Thai language? ", "id": "572817d93acd2414000df455", "answers": [{"text": "Thai Industrial Standard 620", "answer_start": 317}], "is_impossible": false}, {"question": "Why has Thai alphabet support been criticized? ", "id": "572817d93acd2414000df456", "answers": [{"text": "its ordering of Thai characters", "answer_start": 46}], "is_impossible": false}, {"question": "How are the Thai characters ordered incorrectly? ", "id": "572817d93acd2414000df457", "answers": [{"text": "Thai characters. The vowels \u0e40, \u0e41, \u0e42, \u0e43, \u0e44 that are written to the left of the preceding consonant are in visual order instead of phonetic order", "answer_start": 62}], "is_impossible": false}, {"plausible_answers": [{"text": "phonetic order", "answer_start": 191}], "question": "How are Thai characters written similarly to other Unicode scripts?", "id": "5acd58ac07355d001abf3e14", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Thai Industrial Standard 620", "answer_start": 317}], "question": "What standard did Unicode create for the Thai language?", "id": "5acd58ac07355d001abf3e15", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Thai alphabet support", "answer_start": 0}], "question": "Who criticized the order of Thai characters?", "id": "5acd58ac07355d001abf3e16", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "keyboards", "answer_start": 434}], "question": "What kind of machine was the Thai Industrial Standard 620 not implemented on?", "id": "5acd58ac07355d001abf3e17", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "The vowels \u0e40, \u0e41, \u0e42, \u0e43, \u0e44", "answer_start": 79}], "question": "What are written to the right of the preceding consonant?", "id": "5acd58ac07355d001abf3e18", "answers": [], "is_impossible": true}], "context": "Thai alphabet support has been criticized for its ordering of Thai characters. The vowels \u0e40, \u0e41, \u0e42, \u0e43, \u0e44 that are written to the left of the preceding consonant are in visual order instead of phonetic order, unlike the Unicode representations of other Indic scripts. This complication is due to Unicode inheriting the Thai Industrial Standard 620, which worked in the same way, and was the way in which Thai had always been written on keyboards. This ordering problem complicates the Unicode collation process slightly, requiring table lookups to reorder Thai characters for collation. Even if Unicode had adopted encoding according to spoken order, it would still be problematic to collate words in dictionary order. E.g., the word \u0e41\u0e2a\u0e14\u0e07  [sa d\u025b\u02d0\u014b] \"perform\" starts with a consonant cluster \"\u0e2a\u0e14\" (with an inherent vowel for the consonant \"\u0e2a\"), the vowel \u0e41-, in spoken order would come after the \u0e14, but in a dictionary, the word is collated as it is written, with the vowel following the \u0e2a.", "allenNER": {"words": "Thai alphabet support has been criticized for its ordering of Thai characters . The vowels \u0e40 , \u0e41 , \u0e42 , \u0e43 , \u0e44 that are written to the left of the preceding consonant are in visual order instead of phonetic order , unlike the Unicode representations of other Indic scripts . This complication is due to Unicode inheriting the Thai Industrial Standard 620 , which worked in the same way , and was the way in which Thai had always been written on keyboards . This ordering problem complicates the Unicode collation process slightly , requiring table lookups to reorder Thai characters for collation . Even if Unicode had adopted encoding according to spoken order , it would still be problematic to collate words in dictionary order . E.g. , the word \u0e41\u0e2a\u0e14\u0e07 [ sa d\u025b\u02d0\u014b ] \" perform \" starts with a consonant cluster \" \u0e2a\u0e14 \" ( with an inherent vowel for the consonant \" \u0e2a \" ) , the vowel \u0e41- , in spoken order would come after the \u0e14 , but in a dictionary , the word is collated as it is written , with the vowel following the \u0e2a.", "tags": "U-MISC O O O O O O O O O U-MISC O O O O O O O O U-PER O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O U-MISC O O O U-MISC O O O O O O O U-MISC O O B-MISC I-MISC I-MISC L-MISC O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O U-MISC O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O U-MISC O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O U-MISC"}}, {"qas": [{"question": "How are characters with diacritical marks represented? ", "id": "572818e3ff5b5019007d9d30", "answers": [{"text": "either as a single precomposed character or as a decomposed sequence of a base letter plus one or more non-spacing marks", "answer_start": 63}], "is_impossible": false}, {"question": "What encoding does Charis SIL use? ", "id": "572818e3ff5b5019007d9d31", "answers": [{"text": "Graphite, OpenType, or AAT technologies", "answer_start": 905}], "is_impossible": false}, {"question": "What is the issue with underdots and their placement? ", "id": "572818e3ff5b5019007d9d32", "answers": [{"text": "often be placed incorrectly", "answer_start": 607}], "is_impossible": false}, {"question": "Characters with what marks can be displayed as a single character or a decomposed sequence? ", "id": "572818e3ff5b5019007d9d33", "answers": [{"text": "diacritical marks", "answer_start": 16}], "is_impossible": false}, {"question": "How should the characters with the macron and acute be displayed? ", "id": "572818e3ff5b5019007d9d34", "answers": [{"text": "identically", "answer_start": 340}], "is_impossible": false}, {"plausible_answers": [{"text": "one", "answer_start": 154}], "question": "What is the maximum number of non-spacing marks?", "id": "5acd59fb07355d001abf3e58", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "underdots", "answer_start": 551}], "question": "What romanization mark is rarely visually incorrect?", "id": "5acd59fb07355d001abf3e59", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Charis SIL", "answer_start": 884}], "question": "What is the name of the rendering technology OpenType uses?", "id": "5acd59fb07355d001abf3e5a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Characters with diacritical marks", "answer_start": 0}], "question": "What are rendered identically in practice?", "id": "5acd59fb07355d001abf3e5b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "romanization", "answer_start": 579}], "question": "Macrons are used only in what form of Idic?", "id": "5acd59fb07355d001abf3e5c", "answers": [], "is_impossible": true}], "context": "Characters with diacritical marks can generally be represented either as a single precomposed character or as a decomposed sequence of a base letter plus one or more non-spacing marks. For example, \u1e17 (precomposed e with macron and acute above) and e\u0304\u0301 (e followed by the combining macron above and combining acute above) should be rendered identically, both appearing as an e with a macron and acute accent, but in practice, their appearance may vary depending upon what rendering engine and fonts are being used to display the characters. Similarly, underdots, as needed in the romanization of Indic, will often be placed incorrectly[citation needed]. Unicode characters that map to precomposed glyphs can be used in many cases, thus avoiding the problem, but where no precomposed character has been encoded the problem can often be solved by using a specialist Unicode font such as Charis SIL that uses Graphite, OpenType, or AAT technologies for advanced rendering features.", "allenNER": {"words": "Characters with diacritical marks can generally be represented either as a single precomposed character or as a decomposed sequence of a base letter plus one or more non - spacing marks . For example , \u1e17 ( precomposed e with macron and acute above ) and e\u0304\u0301 ( e followed by the combining macron above and combining acute above ) should be rendered identically , both appearing as an e with a macron and acute accent , but in practice , their appearance may vary depending upon what rendering engine and fonts are being used to display the characters . Similarly , underdots , as needed in the romanization of Indic , will often be placed incorrectly[citation needed ] . Unicode characters that map to precomposed glyphs can be used in many cases , thus avoiding the problem , but where no precomposed character has been encoded the problem can often be solved by using a specialist Unicode font such as Charis SIL that uses Graphite , OpenType , or AAT technologies for advanced rendering features .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O B-ORG L-ORG O O U-MISC O U-MISC O O U-MISC O O O O O O"}}]}, "version": ["v2.0"]}