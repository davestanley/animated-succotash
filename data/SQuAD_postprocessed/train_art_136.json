{"data": {"title": "ASCII", "paragraphs": [{"qas": [{"question": "What is the ASCII based on?", "id": "570bce516b8089140040fa42", "answers": [{"text": "English alphabet", "answer_start": 24}], "is_impossible": false}, {"question": "How many specific characters are there in the ASCII code?", "id": "570bce516b8089140040fa43", "answers": [{"text": "128 specified characters", "answer_start": 56}], "is_impossible": false}, {"question": "How many are non-printing control characters?", "id": "570bce516b8089140040fa44", "answers": [{"text": "33 are non-printing control characters", "answer_start": 453}], "is_impossible": false}, {"question": "How many characters are printable characters? ", "id": "570bce516b8089140040fa45", "answers": [{"text": "95 printable characters", "answer_start": 561}], "is_impossible": false}, {"question": "What is the space also known as what?", "id": "570bce516b8089140040fa46", "answers": [{"text": "invisible graphic:223", "answer_start": 630}], "is_impossible": false}, {"plausible_answers": [{"text": "ASCII", "answer_start": 42}], "question": "What is based on the binary alphabet?", "id": "5a64ed447f3c80001a150bf1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "128 specified characters", "answer_start": 56}], "question": "How many specific characters are there in the ASCII Teletype machines?", "id": "5a64ed447f3c80001a150bf2", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Teletype machines", "answer_start": 304}], "question": "What did encoded numbers originate with?", "id": "5a64ed447f3c80001a150bf3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "95 printable characters", "answer_start": 561}], "question": "How many definitions are printable characters?", "id": "5a64ed447f3c80001a150bf4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "English", "answer_start": 24}], "question": "What alphabet is invisible graphic:223 based on?", "id": "5a64ed447f3c80001a150bf5", "answers": [], "is_impossible": true}], "context": "Originally based on the English alphabet, ASCII encodes 128 specified characters into seven-bit integers as shown by the ASCII chart on the right. The characters encoded are numbers 0 to 9, lowercase letters a to z, uppercase letters A to Z, basic punctuation symbols, control codes that originated with Teletype machines, and a space. For example, lowercase j would become binary 1101010 and decimal 106. ASCII includes definitions for 128 characters: 33 are non-printing control characters (many now obsolete) that affect how text and space are processed and 95 printable characters, including the space (which is considered an invisible graphic:223).", "allenNER": {"words": "Originally based on the English alphabet , ASCII encodes 128 specified characters into seven - bit integers as shown by the ASCII chart on the right . The characters encoded are numbers 0 to 9 , lowercase letters a to z , uppercase letters A to Z , basic punctuation symbols , control codes that originated with Teletype machines , and a space . For example , lowercase j would become binary 1101010 and decimal 106 . ASCII includes definitions for 128 characters : 33 are non - printing control characters ( many now obsolete ) that affect how text and space are processed and 95 printable characters , including the space ( which is considered an invisible graphic:223 ) .", "tags": "O O O O U-MISC O O U-ORG O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Why was the code patterned so that most codes were together?", "id": "570bd0da6b8089140040fa60", "answers": [{"text": "for ease of identification", "answer_start": 109}], "is_impossible": false}, {"question": "How many positions are in the first two columns?", "id": "570bd0da6b8089140040fa61", "answers": [{"text": "32 positions", "answer_start": 160}], "is_impossible": false}, {"question": "What did the committee decide was important?", "id": "570bd0da6b8089140040fa62", "answers": [{"text": "to support uppercase 64-character alphabets", "answer_start": 474}], "is_impossible": false}, {"question": "Where was the letter A places in position?", "id": "570bd0da6b8089140040fa63", "answers": [{"text": "41hex", "answer_start": 910}], "is_impossible": false}, {"plausible_answers": [{"text": "for ease of identification", "answer_start": 109}], "question": "Why were the lowercase letters patterned so that most codes were together?", "id": "5a64ffacc2b11c001a425b8d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "32 positions", "answer_start": 160}], "question": "How many positions are are in the first numeric codes?", "id": "5a64ffacc2b11c001a425b8e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "to support uppercase 64-character alphabets", "answer_start": 474}], "question": "What did the committee decide would help with special signs?", "id": "5a64ffacc2b11c001a425b8f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "41hex", "answer_start": 910}], "question": "Where were the letters DEC in position?", "id": "5a64ffacc2b11c001a425b90", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "To keep options available for lowercase letters and other graphics", "answer_start": 738}], "question": "Why were numeric codes converted to graphic codes?", "id": "5a64ffacc2b11c001a425b91", "answers": [], "is_impossible": true}], "context": "The code itself was patterned so that most control codes were together, and all graphic codes were together, for ease of identification. The first two columns (32 positions) were reserved for control characters.:220, 236\u2009\u00a7\u20098,9) The \"space\" character had to come before graphics to make sorting easier, so it became position 20hex;:237\u2009\u00a7\u200910 for the same reason, many special signs commonly used as separators were placed before digits. The committee decided it was important to support uppercase 64-character alphabets, and chose to pattern ASCII so it could be reduced easily to a usable 64-character set of graphic codes,:228, 237\u2009\u00a7\u200914 as was done in the DEC SIXBIT code. Lowercase letters were therefore not interleaved with uppercase. To keep options available for lowercase letters and other graphics, the special and numeric codes were arranged before the letters, and the letter A was placed in position 41hex to match the draft of the corresponding British standard.:238\u2009\u00a7\u200918 The digits 0\u20139 were arranged so they correspond to values in binary prefixed with 011, making conversion with binary-coded decimal straightforward.", "allenNER": {"words": "The code itself was patterned so that most control codes were together , and all graphic codes were together , for ease of identification . The first two columns ( 32 positions ) were reserved for control characters.:220 , 236 \u00a7 8,9 ) The \" space \" character had to come before graphics to make sorting easier , so it became position 20hex;:237 \u00a7 10 for the same reason , many special signs commonly used as separators were placed before digits . The committee decided it was important to support uppercase 64-character alphabets , and chose to pattern ASCII so it could be reduced easily to a usable 64-character set of graphic codes,:228 , 237 \u00a7 14 as was done in the DEC SIXBIT code . Lowercase letters were therefore not interleaved with uppercase . To keep options available for lowercase letters and other graphics , the special and numeric codes were arranged before the letters , and the letter A was placed in position 41hex to match the draft of the corresponding British standard.:238 \u00a7 18 The digits 0\u20139 were arranged so they correspond to values in binary prefixed with 011 , making conversion with binary - coded decimal straightforward .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O U-ORG U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "ASCII was incorporated into what other character set?", "id": "570bd1adec8fbc190045bb22", "answers": [{"text": "Unicode", "answer_start": 32}], "is_impossible": false}, {"question": "How many of the symbols are the same in the beginning of the ASCII and Unicode?", "id": "570bd1adec8fbc190045bb23", "answers": [{"text": "128 symbols", "answer_start": 67}], "is_impossible": false}, {"question": "What set is backward compatible with 7-bit ASCII?", "id": "570bd1adec8fbc190045bb24", "answers": [{"text": "UTF-8", "answer_start": 164}], "is_impossible": false}, {"plausible_answers": [{"text": "Unicode", "answer_start": 32}], "question": "ASCII was incorporated into what other extensions?", "id": "5a650e0dc2b11c001a425bbb", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "128 symbols", "answer_start": 67}], "question": "How many of the symbols are the same in the end of the ASCII and Unicode?", "id": "5a650e0dc2b11c001a425bbc", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-8", "answer_start": 164}], "question": "What set is backward with 128 symbols?", "id": "5a650e0dc2b11c001a425bbd", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII", "answer_start": 0}], "question": "What was incorporated into the Unicode extensions?", "id": "5a650e0dc2b11c001a425bbe", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "an ASCII file containing the same sequence of characters", "answer_start": 279}], "question": "What is a UTF-8 file containing ISO-8859-1 identical to? ", "id": "5a650e0dc2b11c001a425bbf", "answers": [], "is_impossible": true}], "context": "ASCII was incorporated into the Unicode character set as the first 128 symbols, so the 7-bit ASCII characters have the same numeric codes in both sets. This allows UTF-8 to be backward compatible with 7-bit ASCII, as a UTF-8 file containing only ASCII characters is identical to an ASCII file containing the same sequence of characters. Even more importantly, forward compatibility is ensured as software that recognizes only 7-bit ASCII characters as special and does not alter bytes with the highest bit set (as is often done to support 8-bit ASCII extensions such as ISO-8859-1) will preserve UTF-8 data unchanged.", "allenNER": {"words": "ASCII was incorporated into the Unicode character set as the first 128 symbols , so the 7-bit ASCII characters have the same numeric codes in both sets . This allows UTF-8 to be backward compatible with 7-bit ASCII , as a UTF-8 file containing only ASCII characters is identical to an ASCII file containing the same sequence of characters . Even more importantly , forward compatibility is ensured as software that recognizes only 7-bit ASCII characters as special and does not alter bytes with the highest bit set ( as is often done to support 8-bit ASCII extensions such as ISO-8859 - 1 ) will preserve UTF-8 data unchanged .", "tags": "U-ORG O O O O U-MISC O O O O O O O O O O O U-MISC O O O O O O O O O O O O U-MISC O O O O O O U-MISC O O O U-MISC O O O U-MISC O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O U-MISC O O O U-MISC O O O O O U-MISC O O O"}}, {"qas": [{"question": "What casued the automatic paper tape reader to stop?", "id": "570bd2ec6b8089140040fa68", "answers": [{"text": "a Control-S", "answer_start": 78}], "is_impossible": false}, {"question": "What caused the automatic paper tape reader to start again?", "id": "570bd2ec6b8089140040fa69", "answers": [{"text": "Control-Q", "answer_start": 177}], "is_impossible": false}, {"question": "What was the warning signal called that warned the sender that there was impending overflow?", "id": "570bd2ec6b8089140040fa6a", "answers": [{"text": "handshaking", "answer_start": 322}], "is_impossible": false}, {"question": "What two controls can be configured with 33 ASR?", "id": "570bd2ec6b8089140040fa6b", "answers": [{"text": "Control-R (DC2) and Control-T (DC4)", "answer_start": 647}], "is_impossible": false}, {"plausible_answers": [{"text": "a Control-S", "answer_start": 78}], "question": "What caused the paper tape reader to send a signal warning?", "id": "5a6513c9c2b11c001a425be1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Control-Q", "answer_start": 177}], "question": "What caused the automatic paper tape reader to output control technique?", "id": "5a6513c9c2b11c001a425be2", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "handshaking", "answer_start": 322}], "question": "What was the warning signal that warned TAPE that there was impending overflow?", "id": "5a6513c9c2b11c001a425be3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Control-R (DC2) and Control-T (DC4)", "answer_start": 647}], "question": "What two controls can be configured from a mobile phone?", "id": "5a6513c9c2b11c001a425be4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a second Control-S", "answer_start": 564}], "question": "What is impending overflow replaced by on some systems?", "id": "5a6513c9c2b11c001a425be5", "answers": [], "is_impossible": true}], "context": "When a Teletype 33 ASR equipped with the automatic paper tape reader received a Control-S (XOFF, an abbreviation for transmit off), it caused the tape reader to stop; receiving Control-Q (XON, \"transmit on\") caused the tape reader to resume. This technique became adopted by several early computer operating systems as a \"handshaking\" signal warning a sender to stop transmission because of impending overflow; it persists to this day in many systems as a manual output control technique. On some systems Control-S retains its meaning but Control-Q is replaced by a second Control-S to resume output. The 33 ASR also could be configured to employ Control-R (DC2) and Control-T (DC4) to start and stop the tape punch; on some units equipped with this function, the corresponding control character lettering on the keycap above the letter was TAPE and TAPE respectively.", "allenNER": {"words": "When a Teletype 33 ASR equipped with the automatic paper tape reader received a Control - S ( XOFF , an abbreviation for transmit off ) , it caused the tape reader to stop ; receiving Control - Q ( XON , \" transmit on \" ) caused the tape reader to resume . This technique became adopted by several early computer operating systems as a \" handshaking \" signal warning a sender to stop transmission because of impending overflow ; it persists to this day in many systems as a manual output control technique . On some systems Control - S retains its meaning but Control - Q is replaced by a second Control - S to resume output . The 33 ASR also could be configured to employ Control - R ( DC2 ) and Control - T ( DC4 ) to start and stop the tape punch ; on some units equipped with this function , the corresponding control character lettering on the keycap above the letter was TAPE and TAPE respectively .", "tags": "O O B-MISC I-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O"}}, {"qas": [{"question": "What are glass TTYs also known as?", "id": "570bd3ceec8fbc190045bb3c", "answers": [{"text": "CRTs or terminals", "answer_start": 231}], "is_impossible": false}, {"question": "What did Gary Kildall clone to create CP/M?", "id": "570bd3ceec8fbc190045bb3d", "answers": [{"text": "RT-11", "answer_start": 394}], "is_impossible": false}, {"question": "When was the introduction of PC DOS?", "id": "570bd3ceec8fbc190045bb3e", "answers": [{"text": "1981", "answer_start": 491}], "is_impossible": false}, {"question": "What programming did IBM use in the 1970s?", "id": "570bd3ceec8fbc190045bb3f", "answers": [{"text": "EBCDIC", "answer_start": 564}], "is_impossible": false}, {"question": "What was IBM's PC DOS marketed as by Microsoft?", "id": "570bd3ceec8fbc190045bb40", "answers": [{"text": "MS-DOS", "answer_start": 747}], "is_impossible": false}, {"plausible_answers": [{"text": "RT-11", "answer_start": 394}], "question": "What did Gary Klidall clone to create PC DOS?", "id": "5a651f58c2b11c001a425c3d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "1981", "answer_start": 491}], "question": "When was the introduction of IBM?", "id": "5a651f58c2b11c001a425c3e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "EBCDIC", "answer_start": 564}], "question": "What programming did DEC use in the 1970s?", "id": "5a651f58c2b11c001a425c3f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "MS-DOS", "answer_start": 859}], "question": "What was IBM's PC DOS marketed as by ASCII?", "id": "5a651f58c2b11c001a425c40", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "CRTs or terminals", "answer_start": 231}], "question": "What is another name for Teletype machines?", "id": "5a651f58c2b11c001a425c41", "answers": [], "is_impossible": true}], "context": "DEC operating systems (OS/8, RT-11, RSX-11, RSTS, TOPS-10, etc.) used both characters to mark the end of a line so that the console device (originally Teletype machines) would work. By the time so-called \"glass TTYs\" (later called CRTs or terminals) came along, the convention was so well established that backward compatibility necessitated continuing the convention. When Gary Kildall cloned RT-11 to create CP/M he followed established DEC convention. Until the introduction of PC DOS in 1981, IBM had no hand in this because their 1970s operating systems used EBCDIC instead of ASCII and they were oriented toward punch-card input and line printer output on which the concept of carriage return was meaningless. IBM's PC DOS (also marketed as MS-DOS by Microsoft) inherited the convention by virtue of being a clone of CP/M, and Windows inherited it from MS-DOS.", "allenNER": {"words": "DEC operating systems ( OS/8 , RT-11 , RSX-11 , RSTS , TOPS-10 , etc . ) used both characters to mark the end of a line so that the console device ( originally Teletype machines ) would work . By the time so - called \" glass TTYs \" ( later called CRTs or terminals ) came along , the convention was so well established that backward compatibility necessitated continuing the convention . When Gary Kildall cloned RT-11 to create CP / M he followed established DEC convention . Until the introduction of PC DOS in 1981 , IBM had no hand in this because their 1970s operating systems used EBCDIC instead of ASCII and they were oriented toward punch - card input and line printer output on which the concept of carriage return was meaningless . IBM 's PC DOS ( also marketed as MS - DOS by Microsoft ) inherited the convention by virtue of being a clone of CP / M , and Windows inherited it from MS - DOS .", "tags}}, {"qas": [{"question": "What was created to solve the problem for ANSI C?", "id": "570bd4a6ec8fbc190045bb4e", "answers": [{"text": "C trigraphs", "answer_start": 0}], "is_impossible": false}, {"question": "Why was their use limited?", "id": "570bd4a6ec8fbc190045bb4f", "answers": [{"text": "their late introduction and inconsistent implementation in compilers", "answer_start": 68}], "is_impossible": false}, {"question": "What did many programmers keep their computers on?", "id": "570bd4a6ec8fbc190045bb50", "answers": [{"text": "US-ASCII", "answer_start": 197}], "is_impossible": false}, {"question": "What what happening to the words that were sent from programmers?", "id": "570bd4a6ec8fbc190045bb51", "answers": [{"text": "contained \"{, }\" and similar variants in the middle of words", "answer_start": 280}], "is_impossible": false}, {"plausible_answers": [{"text": "C trigraphs", "answer_start": 0}], "question": "What was created to solve the problem for Usenet?", "id": "5a6527a2c2b11c001a425ca7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "US-ASCII", "answer_start": 197}], "question": "What did many programmers keep their sandwiches on?", "id": "5a6527a2c2b11c001a425ca8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "contained \"{, }\" and similar variants in the middle of words", "answer_start": 280}], "question": "What was happening to the C trigraphs that were sent from programmers?", "id": "5a6527a2c2b11c001a425ca9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "No I've got sandwiches.", "answer_start": 578}], "question": "What was \"{, }\" supposed to mean?", "id": "5a6527a2c2b11c001a425caa", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "variants in the middle of words", "answer_start": 309}], "question": "What did Germans get used to?", "id": "5a6527a2c2b11c001a425cab", "answers": [], "is_impossible": true}], "context": "C trigraphs were created to solve this problem for ANSI C, although their late introduction and inconsistent implementation in compilers limited their use. Many programmers kept their computers on US-ASCII, so plain-text in Swedish, German etc. (for example, in e-mail or Usenet) contained \"{, }\" and similar variants in the middle of words, something those programmers got used to. For example, a Swedish programmer mailing another programmer asking if they should go for lunch, could get \"N{ jag har sm|rg}sar.\" as the answer, which should be \"N\u00e4 jag har sm\u00f6rg\u00e5sar.\" meaning \"No I've got sandwiches.\"", "allenNER": {"words": "C trigraphs were created to solve this problem for ANSI C , although their late introduction and inconsistent implementation in compilers limited their use . Many programmers kept their computers on US - ASCII , so plain - text in Swedish , German etc . ( for example , in e - mail or Usenet ) contained \" { , } \" and similar variants in the middle of words , something those programmers got used to . For example , a Swedish programmer mailing another programmer asking if they should go for lunch , could get \" N { jag har sm|rg}sar . \" as the answer , which should be \" N\u00e4 jag har sm\u00f6rg\u00e5sar . \" meaning \" No I 've got sandwiches . \"", "tags": "O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O U-LOC O U-ORG O O O O O O U-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What was ASCII based on?", "id": "570bd80cec8fbc190045bb5e", "answers": [{"text": "teleprinter encoding systems", "answer_start": 58}], "is_impossible": false}, {"question": "ASCII specifies correspondence between what? ", "id": "570bd80cec8fbc190045bb5f", "answers": [{"text": "digital bit patterns and character symbols", "answer_start": 161}], "is_impossible": false}, {"question": "What does ASCII correspondence allow digital devices to do?", "id": "570bd80cec8fbc190045bb60", "answers": [{"text": "communicate with each other and to process, store, and communicate character-oriented information", "answer_start": 276}], "is_impossible": false}, {"question": "How many graphic symbols were used before ASCII?", "id": "570bd80cec8fbc190045bb61", "answers": [{"text": "11 to 25 special graphic symbols", "answer_start": 514}], "is_impossible": false}, {"question": "How many codes were required for ASCII?", "id": "570bd80cec8fbc190045bb62", "answers": [{"text": "more than 64 codes", "answer_start": 768}], "is_impossible": false}, {"plausible_answers": [{"text": "teleprinter encoding systems", "answer_start": 58}], "question": "What was the X3.2 based on?", "id": "5a64f841c2b11c001a425b5f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "digital bit patterns and character symbols", "answer_start": 161}], "question": "ASCII specifies alphabetic characters by what?", "id": "5a64f841c2b11c001a425b60", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "communicate with each other and to process, store, and communicate character-oriented information", "answer_start": 276}], "question": "What does ASCII graphic symbols allow digital devices to do?", "id": "5a64f841c2b11c001a425b61", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "11 to 25 special graphic symbols", "answer_start": 514}], "question": "How many graphic symbols were used before encoding systems were invented?", "id": "5a64f841c2b11c001a425b62", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "more than 64 codes", "answer_start": 768}], "question": "How many codes were required for the X3.2?", "id": "5a64f841c2b11c001a425b63", "answers": [], "is_impossible": true}], "context": "The X3.2 subcommittee designed ASCII based on the earlier teleprinter encoding systems. Like other character encodings, ASCII specifies a correspondence between digital bit patterns and character symbols (i.e. graphemes and control characters). This allows digital devices to communicate with each other and to process, store, and communicate character-oriented information such as written language. Before ASCII was developed, the encodings in use included 26 alphabetic characters, 10 numerical digits, and from 11 to 25 special graphic symbols. To include all these, and control characters compatible with the Comit\u00e9 Consultatif International T\u00e9l\u00e9phonique et T\u00e9l\u00e9graphique (CCITT) International Telegraph Alphabet No. 2 (ITA2) standard, Fieldata, and early EBCDIC, more than 64 codes were required for ASCII.", "allenNER": {"words": "The X3.2 subcommittee designed ASCII based on the earlier teleprinter encoding systems . Like other character encodings , ASCII specifies a correspondence between digital bit patterns and character symbols ( i.e. graphemes and control characters ) . This allows digital devices to communicate with each other and to process , store , and communicate character - oriented information such as written language . Before ASCII was developed , the encodings in use included 26 alphabetic characters , 10 numerical digits , and from 11 to 25 special graphic symbols . To include all these , and control characters compatible with the Comit\u00e9 Consultatif International T\u00e9l\u00e9phonique et T\u00e9l\u00e9graphique ( CCITT ) International Telegraph Alphabet No . 2 ( ITA2 ) standard , Fieldata , and early EBCDIC , more than 64 codes were required for ASCII .", "tags": "O U-MISC O O U-ORG O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC I-MISC I-MISC I-MISC I-MISC L-MISC O U-MISC O B-ORG L-ORG O O O O O U-MISC O O O U-MISC O O O U-MISC O O O O O O O O U-ORG O"}}, {"qas": [{"question": "When was ASCII first commercially used?", "id": "570bd90fec8fbc190045bb72", "answers": [{"text": "1963", "answer_start": 48}], "is_impossible": false}, {"question": "What was it used for?", "id": "570bd90fec8fbc190045bb73", "answers": [{"text": "a seven-bit teleprinter code for American Telephone & Telegraph's TWX (TeletypeWriter eXchange) network", "answer_start": 56}], "is_impossible": false}, {"question": "What did TWX use before ASCII?", "id": "570bd90fec8fbc190045bb74", "answers": [{"text": "five-bit ITA2", "answer_start": 193}], "is_impossible": false}, {"question": "Who is the father of ASCII?", "id": "570bd90fec8fbc190045bb75", "answers": [{"text": "Bob Bemer", "answer_start": 271}], "is_impossible": false}, {"question": "What was the code first called in Europe?", "id": "570bd90fec8fbc190045bb76", "answers": [{"text": "Bemer-Ross Code", "answer_start": 497}], "is_impossible": false}, {"plausible_answers": [{"text": "1963", "answer_start": 48}], "question": "When was ASCII first used by Berner-Ross?", "id": "5a65080ac2b11c001a425ba7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "five-bit ITA2", "answer_start": 193}], "question": "What did TWX use because to counter slow loading times of ASCII?", "id": "5a65080ac2b11c001a425ba8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Bob Bemer", "answer_start": 271}], "question": "Who competed against ASCII?", "id": "5a65080ac2b11c001a425ba9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Bemer-Ross Code", "answer_start": 497}], "question": "What was the TWX first called in Europe?", "id": "5a65080ac2b11c001a425baa", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Telex teleprinter system", "answer_start": 245}], "question": "Who competed against eight-bit teleprinter code?", "id": "5a65080ac2b11c001a425bab", "answers": [], "is_impossible": true}], "context": "ASCII itself was first used commercially during 1963 as a seven-bit teleprinter code for American Telephone & Telegraph's TWX (TeletypeWriter eXchange) network. TWX originally used the earlier five-bit ITA2, which was also used by the competing Telex teleprinter system. Bob Bemer introduced features such as the escape sequence. His British colleague Hugh McGregor Ross helped to popularize this work \u2013  according to Bemer, \"so much so that the code that was to become ASCII was first called the Bemer-Ross Code in Europe\". Because of his extensive work on ASCII, Bemer has been called \"the father of ASCII.\"", "allenNER": {"words": "ASCII itself was first used commercially during 1963 as a seven - bit teleprinter code for American Telephone & Telegraph 's TWX ( TeletypeWriter eXchange ) network . TWX originally used the earlier five - bit ITA2 , which was also used by the competing Telex teleprinter system . Bob Bemer introduced features such as the escape sequence . His British colleague Hugh McGregor Ross helped to popularize this work \u2013 according to Bemer , \" so much so that the code that was to become ASCII was first called the Bemer - Ross Code in Europe \" . Because of his extensive work on ASCII , Bemer has been called \" the father of ASCII . \"", "tags": "U-ORG O O O O O O O O O O O O O O O B-ORG I-ORG I-ORG L-ORG O U-ORG O B-ORG L-ORG O O O U-ORG O O O O O O O U-MISC O O O O O O O O U-MISC O O O B-PER L-PER O O O O O O O O O U-MISC O B-PER I-PER L-PER O O O O O O O O U-PER O O O O O O O O O O O O U-MISC O O O O U-MISC O B-MISC L-MISC O U-LOC O O O O O O O O U-ORG O U-PER O O O O O O O U-ORG O O"}}, {"qas": [{"question": "What does the \"line feed\" function do?", "id": "570bdaffec8fbc190045bb8c", "answers": [{"text": "causes a printer to advance its paper", "answer_start": 69}], "is_impossible": false}, {"question": "What character represents the \"line feed\" function?", "id": "570bdaffec8fbc190045bb8d", "answers": [{"text": "character 10", "answer_start": 13}], "is_impossible": false}, {"question": "What does character 8 represent? ", "id": "570bdaffec8fbc190045bb8e", "answers": [{"text": "backspace", "answer_start": 137}], "is_impossible": false}, {"question": "What does RFC 2822 refers to what kind of control characters?", "id": "570bdaffec8fbc190045bb8f", "answers": [{"text": "control characters that do not include carriage return, line feed or white space as non-whitespace control characters", "answer_start": 168}], "is_impossible": false}, {"plausible_answers": [{"text": "causes a printer to advance its paper", "answer_start": 69}], "question": "What do the \"line feed\" control characters do?", "id": "5a650f77c2b11c001a425bcd", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "character 10", "answer_start": 13}], "question": "What markup languages represent the \"line feed\" function?", "id": "5a650f77c2b11c001a425bce", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "backspace", "answer_start": 137}], "question": "What does document layout does 8 represent?", "id": "5a650f77c2b11c001a425bcf", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "control characters that do not include carriage return, line feed or white space as non-whitespace control characters", "answer_start": 168}], "question": "RFC 2822 translates what kind of languages?", "id": "5a650f77c2b11c001a425bd0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII", "answer_start": 373}], "question": "What does not define any mechanism for carriage return?", "id": "5a650f77c2b11c001a425bd1", "answers": [], "is_impossible": true}], "context": "For example, character 10 represents the \"line feed\" function (which causes a printer to advance its paper), and character 8 represents \"backspace\". RFC 2822 refers to control characters that do not include carriage return, line feed or white space as non-whitespace control characters. Except for the control characters that prescribe elementary line-oriented formatting, ASCII does not define any mechanism for describing the structure or appearance of text within a document. Other schemes, such as markup languages, address page and document layout and formatting.", "allenNER": {"words": "For example , character 10 represents the \" line feed \" function ( which causes a printer to advance its paper ) , and character 8 represents \" backspace \" . RFC 2822 refers to control characters that do not include carriage return , line feed or white space as non - whitespace control characters . Except for the control characters that prescribe elementary line - oriented formatting , ASCII does not define any mechanism for describing the structure or appearance of text within a document . Other schemes , such as markup languages , address page and document layout and formatting .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What did some software do to the ASCII characters?", "id": "570bdc256b8089140040fa9c", "answers": [{"text": "assigned special meanings", "answer_start": 14}], "is_impossible": false}, {"question": "What interpretation became common in Unix systmes?", "id": "570bdc256b8089140040fa9d", "answers": [{"text": "interpreted DEL as an input character as meaning \"remove previously-typed input character\"", "answer_start": 167}], "is_impossible": false}, {"question": "What do most other systmes use the DEL to mean?", "id": "570bdc256b8089140040fa9e", "answers": [{"text": "remove the character at the cursor", "answer_start": 385}], "is_impossible": false}, {"question": "What did other systmes us for \"remove previously-typed input character\"?", "id": "570bdc256b8089140040fa9f", "answers": [{"text": "BS", "answer_start": 343}], "is_impossible": false}, {"plausible_answers": [{"text": "assigned special meanings", "answer_start": 14}], "question": "What did some software do to the Digital Equipment Corporation?", "id": "5a651664c2b11c001a425c05", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "interpreted DEL as an input character as meaning \"remove previously-typed input character", "answer_start": 167}], "question": "What interpretation became common in BS systems?", "id": "5a651664c2b11c001a425c06", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "BS", "answer_start": 343}], "question": "What other systems use for the terminal?", "id": "5a651664c2b11c001a425c07", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "remove the character at the cursor", "answer_start": 385}], "question": "What did the first systems use DEL to mean?", "id": "5a651664c2b11c001a425c08", "answers": [], "is_impossible": true}], "context": "Some software assigned special meanings to ASCII characters sent to the software from the terminal. Operating systems from Digital Equipment Corporation, for example, interpreted DEL as an input character as meaning \"remove previously-typed input character\", and this interpretation also became common in Unix systems. Most other systems used BS for that meaning and used DEL to mean \"remove the character at the cursor\".[citation needed] That latter interpretation is the most common now.[citation needed]", "allenNER": {"words": "Some software assigned special meanings to ASCII characters sent to the software from the terminal . Operating systems from Digital Equipment Corporation , for example , interpreted DEL as an input character as meaning \" remove previously - typed input character \" , and this interpretation also became common in Unix systems . Most other systems used BS for that meaning and used DEL to mean \" remove the character at the cursor\".[citation needed ] That latter interpretation is the most common now.[citation needed ]", "tags": "O O O O O O U-ORG O O O O O O O O O O O O B-ORG I-ORG L-ORG O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O U-MISC O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What do computers attached to the ARPANET use for line endings?", "id": "570bddefec8fbc190045bba4", "answers": [{"text": "CR-LF", "answer_start": 110}], "is_impossible": false}, {"question": "What do computers using operating systems use for line endings?", "id": "570bddefec8fbc190045bba5", "answers": [{"text": "LF", "answer_start": 187}], "is_impossible": false}, {"question": "Why did Telnet define an ASCII as a Network Virtual Terminal?", "id": "570bddefec8fbc190045bba6", "answers": [{"text": "so that connections between hosts with different line-ending conventions and character sets could be supported", "answer_start": 452}], "is_impossible": false}, {"question": "How were the connections supported? ", "id": "570bddefec8fbc190045bba7", "answers": [{"text": "by transmitting a standard text format over the network", "answer_start": 563}], "is_impossible": false}, {"question": "Who else adopted this practice from Telnet?", "id": "570bddefec8fbc190045bba8", "answers": [{"text": "The File Transfer Protocol", "answer_start": 765}], "is_impossible": false}, {"plausible_answers": [{"text": "CR-LF", "answer_start": 110}], "question": "What do computers attached to TENEX use for line endings?", "id": "5a6522bdc2b11c001a425c6b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "LF", "answer_start": 187}], "question": "What do computers using standard text format use for line endings?", "id": "5a6522bdc2b11c001a425c6c", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "so that connections between hosts with different line-ending conventions and character sets could be supported", "answer_start": 452}], "question": "Why did Telnet define an ASCII as EBCDIC?", "id": "5a6522bdc2b11c001a425c6d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "by transmitting a standard text format over the network", "answer_start": 563}], "question": "How were the Network Virtual Terminals supported?", "id": "5a6522bdc2b11c001a425c6e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "The File Transfer Protocol", "answer_start": 765}], "question": "Who else adopted this practice from ASCII?", "id": "5a6522bdc2b11c001a425c6f", "answers": [], "is_impossible": true}], "context": "Computers attached to the ARPANET included machines running operating systems such as TOPS-10 and TENEX using CR-LF line endings, machines running operating systems such as Multics using LF line endings, and machines running operating systems such as OS/360 that represented lines as a character count followed by the characters of the line and that used EBCDIC rather than ASCII. The Telnet protocol defined an ASCII \"Network Virtual Terminal\" (NVT), so that connections between hosts with different line-ending conventions and character sets could be supported by transmitting a standard text format over the network. Telnet used ASCII along with CR-LF line endings, and software using other conventions would translate between the local conventions and the NVT. The File Transfer Protocol adopted the Telnet protocol, including use of the Network Virtual Terminal, for use when transmitting commands and transferring data in the default ASCII mode. This adds complexity to implementations of those protocols, and to other network protocols, such as those used for E-mail and the World Wide Web, on systems not using the NVT's CR-LF line-ending convention.", "allenNER": {"words": "Computers attached to the ARPANET included machines running operating systems such as TOPS-10 and TENEX using CR - LF line endings , machines running operating systems such as Multics using LF line endings , and machines running operating systems such as OS/360 that represented lines as a character count followed by the characters of the line and that used EBCDIC rather than ASCII . The Telnet protocol defined an ASCII \" Network Virtual Terminal \" ( NVT ) , so that connections between hosts with different line - ending conventions and character sets could be supported by transmitting a standard text format over the network . Telnet used ASCII along with CR - LF line endings , and software using other conventions would translate between the local conventions and the NVT . The File Transfer Protocol adopted the Telnet protocol , including use of the Network Virtual Terminal , for use when transmitting commands and transferring data in the default ASCII mode . This adds complexity to implementations of those protocols , and to other network protocols , such as those used for E - mail and the World Wide Web , on systems not using the NVT 's CR - LF line - ending convention .", "tags}}, {"qas": [{"question": "When was ISO/IEC 646 published?", "id": "570be770ec8fbc190045bbda", "answers": [{"text": "1972", "answer_start": 176}], "is_impossible": false}, {"question": "What was ASCII inteded to be?", "id": "570be770ec8fbc190045bbdb", "answers": [{"text": "one of several national variants of an international character code standard", "answer_start": 61}], "is_impossible": false}, {"question": "When was ISO's first acceptance of an international recommendation?", "id": "570be770ec8fbc190045bbdc", "answers": [{"text": "1967", "answer_start": 466}], "is_impossible": false}, {"question": "What was causing the confusion and incompatibility of the code points?", "id": "570be770ec8fbc190045bbdd", "answers": [{"text": "ASCII's choices for the national use characters to seem to be de facto standards for the world", "answer_start": 478}], "is_impossible": false}, {"plausible_answers": [{"text": "1967", "answer_start": 466}], "question": "When was ISO's last acceptance at an international recommendation?", "id": "5a652664c2b11c001a425c97", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII's choices for the national use characters to seem to be de facto standards for the world", "answer_start": 478}], "question": "What was causing the confusion and incompatibility of the shared characters?", "id": "5a652664c2b11c001a425c98", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ISO/IEC 646 (1972)", "answer_start": 163}], "question": "What were code points ultimately published as?", "id": "5a652664c2b11c001a425c99", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "once other countries did begin to make their own assignments", "answer_start": 612}], "question": "When did the publication's choices cause confusion and incompatibility?", "id": "5a652664c2b11c001a425c9a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ISO/IEC 646 (1972)", "answer_start": 163}], "question": "What shared no characters in common?", "id": "5a652664c2b11c001a425c9b", "answers": [], "is_impossible": true}], "context": "From early in its development, ASCII was intended to be just one of several national variants of an international character code standard, ultimately published as ISO/IEC 646 (1972), which would share most characters in common but assign other locally useful characters to several code points reserved for \"national use.\" However, the four years that elapsed between the publication of ASCII-1963 and ISO's first acceptance of an international recommendation during 1967 caused ASCII's choices for the national use characters to seem to be de facto standards for the world, causing confusion and incompatibility once other countries did begin to make their own assignments to these code points.", "allenNER": {"words": "From early in its development , ASCII was intended to be just one of several national variants of an international character code standard , ultimately published as ISO / IEC 646 ( 1972 ) , which would share most characters in common but assign other locally useful characters to several code points reserved for \" national use . \" However , the four years that elapsed between the publication of ASCII-1963 and ISO 's first acceptance of an international recommendation during 1967 caused ASCII 's choices for the national use characters to seem to be de facto standards for the world , causing confusion and incompatibility once other countries did begin to make their own assignments to these code points .", "tags": "O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O B-MISC I-MISC I-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O U-ORG O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What did most early home computers develop?", "id": "570beefe6b8089140040fac6", "answers": [{"text": "their own 8-bit character sets", "answer_start": 43}], "is_impossible": false}, {"question": "What did Kaypro CP/M computers use?", "id": "570beefe6b8089140040fac7", "answers": [{"text": "the \"upper\" 128 characters for the Greek alphabet", "answer_start": 230}], "is_impossible": false}, {"question": "What did IBM PC replace the control-characters with?", "id": "570beefe6b8089140040fac8", "answers": [{"text": "graphic symbols such as smiley faces", "answer_start": 358}], "is_impossible": false}, {"question": "What did Digital Equipment Corporation develop?", "id": "570beefe6b8089140040fac9", "answers": [{"text": "Multinational Character Set (DEC-MCS)", "answer_start": 624}], "is_impossible": false}, {"question": "What did Macintosh use instead of graphics? ", "id": "570beefe6b8089140040faca", "answers": [{"text": "typographic punctuation marks", "answer_start": 923}], "is_impossible": false}, {"plausible_answers": [{"text": "their own 8-bit character sets", "answer_start": 43}], "question": "What did most early graphic characters develop?", "id": "5a6528c5c2b11c001a425cb1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "graphic symbols such as smiley faces", "answer_start": 358}], "question": "What did IBM PC replace the code pages with?", "id": "5a6528c5c2b11c001a425cb2", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "typographic punctuation marks", "answer_start": 923}], "question": "What did Macintosh use instead of hardware?", "id": "5a6528c5c2b11c001a425cb3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the Multinational Character Set (DEC-MCS)", "answer_start": 620}], "question": "What did Digital Equipment Corporation develop for use in game glyphs?", "id": "5a6528c5c2b11c001a425cb4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "code page 437", "answer_start": 300}], "question": "What replaced the Greek alphabet with graphic symbols?", "id": "5a6528c5c2b11c001a425cb5", "answers": [], "is_impossible": true}], "context": "Most early home computer systems developed their own 8-bit character sets containing line-drawing and game glyphs, and often filled in some or all of the control characters from 0\u201331 with more graphics. Kaypro CP/M computers used the \"upper\" 128 characters for the Greek alphabet. The IBM PC defined code page 437, which replaced the control-characters with graphic symbols such as smiley faces, and mapped additional graphic characters to the upper 128 positions. Operating systems such as DOS supported these code pages, and manufacturers of IBM PCs supported them in hardware. Digital Equipment Corporation developed the Multinational Character Set (DEC-MCS) for use in the popular VT220 terminal as one of the first extensions designed more for international languages than for block graphics. The Macintosh defined Mac OS Roman and Postscript also defined a set, both of these contained both international letters and typographic punctuation marks instead of graphics, more like modern character sets.", "allenNER": {"words": "Most early home computer systems developed their own 8-bit character sets containing line - drawing and game glyphs , and often filled in some or all of the control characters from 0\u201331 with more graphics . Kaypro CP / M computers used the \" upper \" 128 characters for the Greek alphabet . The IBM PC defined code page 437 , which replaced the control - characters with graphic symbols such as smiley faces , and mapped additional graphic characters to the upper 128 positions . Operating systems such as DOS supported these code pages , and manufacturers of IBM PCs supported them in hardware . Digital Equipment Corporation developed the Multinational Character Set ( DEC - MCS ) for use in the popular VT220 terminal as one of the first extensions designed more for international languages than for block graphics . The Macintosh defined Mac OS Roman and Postscript also defined a set , both of these contained both international letters and typographic punctuation marks instead of graphics , more like modern character sets .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O U-MISC O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O B-MISC L-MISC O O O O O B-ORG I-ORG L-ORG O O B-MISC I-MISC L-MISC O U-ORG O U-ORG O O O O O O U-MISC O O O O O O O O O O O O O O O O O O U-MISC O B-MISC I-MISC L-MISC O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What does ASCII stand for?", "id": "570bf0126b8089140040fad0", "answers": [{"text": "American Standard Code for Information Interchange", "answer_start": 43}], "is_impossible": false}, {"question": "What is the definition of ASCII?", "id": "570bf0126b8089140040fad1", "answers": [{"text": "is a character-encoding scheme", "answer_start": 95}], "is_impossible": false}, {"question": "What does ASCII code represent?", "id": "570bf0126b8089140040fad2", "answers": [{"text": "text in computers, communications equipment, and other devices that use text", "answer_start": 186}], "is_impossible": false}, {"question": "ASCI was the most common character encoding on the world wide web until when?", "id": "570bf0126b8089140040fad3", "answers": [{"text": "December 2007", "answer_start": 444}], "is_impossible": false}, {"question": "Who surpassed ASCII?", "id": "570bf0126b8089140040fad4", "answers": [{"text": "UTF-8", "answer_start": 484}], "is_impossible": false}, {"plausible_answers": [{"text": "text in computers, communications equipment, and other devices that use text", "answer_start": 186}], "question": "What was ASCII designed to represent before going through major changes?", "id": "5a64ca387f3c80001a150bdd", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "December 2007", "answer_start": 444}], "question": "ASCII was the second most common character encoding on the world wide web until when?", "id": "5a64ca387f3c80001a150bde", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "UTF-8", "answer_start": 484}], "question": "Who made ASCII obselete?", "id": "5a64ca387f3c80001a150bdf", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII", "answer_start": 316}], "question": "What are most fully backward schemes based on?", "id": "5a64ca387f3c80001a150be0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "text in computers", "answer_start": 186}], "question": "What does most communications equipment represent?", "id": "5a64ca387f3c80001a150be1", "answers": [], "is_impossible": true}], "context": "ASCII (i/\u02c8\u00e6ski/ ASS-kee), abbreviated from American Standard Code for Information Interchange, is a character-encoding scheme (the IANA prefers the name US-ASCII). ASCII codes represent text in computers, communications equipment, and other devices that use text. Most modern character-encoding schemes are based on ASCII, though they support many additional characters. ASCII was the most common character encoding on the World Wide Web until December 2007, when it was surpassed by UTF-8, which is fully backward compatibe to ASCII.", "allenNER": {"words": "ASCII ( i/\u02c8\u00e6ski/ ASS - kee ) , abbreviated from American Standard Code for Information Interchange , is a character - encoding scheme ( the IANA prefers the name US - ASCII ) . ASCII codes represent text in computers , communications equipment , and other devices that use text . Most modern character - encoding schemes are based on ASCII , though they support many additional characters . ASCII was the most common character encoding on the World Wide Web until December 2007 , when it was surpassed by UTF-8 , which is fully backward compatibe to ASCII .", "tags": "U-ORG O B-ORG L-ORG O O O O O O B-MISC I-MISC L-MISC O B-ORG L-ORG O O O O O O O O O U-ORG O O O U-LOC O U-ORG O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O U-MISC O O O O O O O O B-MISC I-MISC L-MISC O O O O O O O O O U-MISC O O O O O O O U-ORG O"}}, {"qas": [{"question": "Why did the committee debate adding a shift function?", "id": "570bf0896b8089140040fada", "answers": [{"text": "would allow more than 64 codes to be represented by a six-bit code", "answer_start": 80}], "is_impossible": false}, {"question": "What is different in a shifted code?", "id": "570bf0896b8089140040fadb", "answers": [{"text": "some character codes determine choices between options for the following character codes", "answer_start": 167}], "is_impossible": false}, {"question": "Why did they decide against shifting code?", "id": "570bf0896b8089140040fadc", "answers": [{"text": "less reliable for data transmission as an error in transmitting the shift code typically makes a long part of the transmission unreadable", "answer_start": 292}], "is_impossible": false}, {"question": "What happened after they decided agasint shifting?", "id": "570bf0896b8089140040fadd", "answers": [{"text": "ASCII required at least a seven-bit code", "answer_start": 488}], "is_impossible": false}, {"plausible_answers": [{"text": "would allow more than 64 codes to be represented by a six-bit code", "answer_start": 80}], "question": "Why did the committee debate adding a character code function?", "id": "5a64fb54c2b11c001a425b69", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "some character codes determine choices between options for the following character codes", "answer_start": 167}], "question": "What is different in a compact code?", "id": "5a64fb54c2b11c001a425b6a", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "less reliable for data transmission as an error in transmitting the shift code typically makes a long part of the transmission unreadable", "answer_start": 292}], "question": "Why did they decide against deleting all the code?", "id": "5a64fb54c2b11c001a425b6b", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII required at least a seven-bit code", "answer_start": 488}], "question": "What happened after they decided to make all employees work the same schedule?", "id": "5a64fb54c2b11c001a425b6c", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "shifted code", "answer_start": 153}], "question": "What allows seven-bit code?", "id": "5a64fb54c2b11c001a425b6d", "answers": [], "is_impossible": true}], "context": "The committee debated the possibility of a shift function (like in ITA2), which would allow more than 64 codes to be represented by a six-bit code. In a shifted code, some character codes determine choices between options for the following character codes. It allows compact encoding, but is less reliable for data transmission as an error in transmitting the shift code typically makes a long part of the transmission unreadable. The standards committee decided against shifting, and so ASCII required at least a seven-bit code.:215, 236\u2009\u00a7\u20094", "allenNER": {"words": "The committee debated the possibility of a shift function ( like in ITA2 ) , which would allow more than 64 codes to be represented by a six - bit code . In a shifted code , some character codes determine choices between options for the following character codes . It allows compact encoding , but is less reliable for data transmission as an error in transmitting the shift code typically makes a long part of the transmission unreadable . The standards committee decided against shifting , and so ASCII required at least a seven - bit code.:215 , 236 \u00a7 4", "tags": "O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O"}}, {"qas": [{"question": "What was the \"escape\" character originally intended for?", "id": "570bf1486b8089140040fae2", "answers": [{"text": "to allow sending other control characters as literals instead of invoking their meaning", "answer_start": 174}], "is_impossible": false}, {"question": "What does modern ESC code do?", "id": "570bf1486b8089140040fae3", "answers": [{"text": "most often used as an out-of-band character used to terminate an operation", "answer_start": 789}], "is_impossible": false}, {"question": "What does ESC generally mean for graphical user interfaces and windowing systems?", "id": "570bf1486b8089140040fae4", "answers": [{"text": "an application to abort its current operation or to exit (terminate) altogether", "answer_start": 979}], "is_impossible": false}, {"plausible_answers": [{"text": "sending other control characters as literals instead of invoking their meaning", "answer_start": 183}], "question": "What was the \"escape\" character meant to stop?", "id": "5a651bc1c2b11c001a425c1f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "an application to abort its current operation or to exit (terminate) altogether", "answer_start": 979}], "question": "What does ESC generally mean for left-brackets?", "id": "5a651bc1c2b11c001a425c20", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "An ESC sent from the terminal", "answer_start": 756}], "question": "What is most often used as a command sequence?", "id": "5a651bc1c2b11c001a425c21", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "In graphical user interface (GUI) and windowing systems", "answer_start": 901}], "question": "Where does ESC generally cause an application to abort its given meanings?", "id": "5a651bc1c2b11c001a425c22", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a so-called \"ANSI escape code\"", "answer_start": 609}], "question": "What is an ESC sent to control characters usually in the form of?", "id": "5a651bc1c2b11c001a425c23", "answers": [], "is_impossible": true}], "context": "Many more of the control codes have been given meanings quite different from their original ones. The \"escape\" character (ESC, code 27), for example, was intended originally to allow sending other control characters as literals instead of invoking their meaning. This is the same meaning of \"escape\" encountered in URL encodings, C language strings, and other systems where certain characters have a reserved meaning. Over time this meaning has been co-opted and has eventually been changed. In modern use, an ESC sent to the terminal usually indicates the start of a command sequence, usually in the form of a so-called \"ANSI escape code\" (or, more properly, a \"Control Sequence Introducer\") beginning with ESC followed by a \"[\" (left-bracket) character. An ESC sent from the terminal is most often used as an out-of-band character used to terminate an operation, as in the TECO and vi text editors. In graphical user interface (GUI) and windowing systems, ESC generally causes an application to abort its current operation or to exit (terminate) altogether.", "allenNER": {"words": "Many more of the control codes have been given meanings quite different from their original ones . The \" escape \" character ( ESC , code 27 ) , for example , was intended originally to allow sending other control characters as literals instead of invoking their meaning . This is the same meaning of \" escape \" encountered in URL encodings , C language strings , and other systems where certain characters have a reserved meaning . Over time this meaning has been co - opted and has eventually been changed . In modern use , an ESC sent to the terminal usually indicates the start of a command sequence , usually in the form of a so - called \" ANSI escape code \" ( or , more properly , a \" Control Sequence Introducer \" ) beginning with ESC followed by a \" [ \" ( left - bracket ) character . An ESC sent from the terminal is most often used as an out - of - band character used to terminate an operation , as in the TECO and vi text editors . In graphical user interface ( GUI ) and windowing systems , ESC generally causes an application to abort its current operation or to exit ( terminate ) altogether .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O B-MISC I-MISC L-MISC O O O O U-MISC O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What did older operating systems use to mark the end of the text?", "id": "570bf2846b8089140040fae8", "answers": [{"text": "Control-Z (SUB)", "answer_start": 116}], "is_impossible": false}, {"question": "What does EOF stand for?", "id": "570bf2846b8089140040fae9", "answers": [{"text": "end-of-file", "answer_start": 205}], "is_impossible": false}, {"question": "What is still the conventional use of the ETX code?", "id": "570bf2846b8089140040faea", "answers": [{"text": "to interrupt and halt a program via an input data stream, usually from a keyboard", "answer_start": 634}], "is_impossible": false}, {"question": "What else is the end-of-text code known as?", "id": "570bf2846b8089140040faeb", "answers": [{"text": "Control-C", "answer_start": 364}], "is_impossible": false}, {"plausible_answers": [{"text": "Control-Z", "answer_start": 116}], "question": "What did older operating systems use to mark control code?", "id": "5a6524c6c2b11c001a425c83", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "to interrupt and halt a program via an input data stream, usually from a keyboard", "answer_start": 634}], "question": "What is still the conventional use of the EOF code?", "id": "5a6524c6c2b11c001a425c84", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Control-C", "answer_start": 364}], "question": "What else does the end-of text code use to track file length?", "id": "5a6524c6c2b11c001a425c85", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a keyboard", "answer_start": 705}], "question": "Where does a control code usually come from?", "id": "5a6524c6c2b11c001a425c86", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "it ending the alphabet", "answer_start": 483}], "question": "What is using Z as the end of text analogous to?", "id": "5a6524c6c2b11c001a425c87", "answers": [], "is_impossible": true}], "context": "Older operating systems such as TOPS-10, along with CP/M, tracked file length only in units of disk blocks and used Control-Z (SUB) to mark the end of the actual text in the file. For this reason, EOF, or end-of-file, was used colloquially and conventionally as a three-letter acronym for Control-Z instead of SUBstitute. The end-of-text code (ETX), also known as Control-C, was inappropriate for a variety of reasons, while using Z as the control code to end a file is analogous to it ending the alphabet and serves as a very convenient mnemonic aid. A historically common and still prevalent convention uses the ETX code convention to interrupt and halt a program via an input data stream, usually from a keyboard.", "allenNER": {"words": "Older operating systems such as TOPS-10 , along with CP / M , tracked file length only in units of disk blocks and used Control - Z ( SUB ) to mark the end of the actual text in the file . For this reason , EOF , or end - of - file , was used colloquially and conventionally as a three - letter acronym for Control - Z instead of SUBstitute . The end - of - text code ( ETX ) , also known as Control - C , was inappropriate for a variety of reasons , while using Z as the control code to end a file is analogous to it ending the alphabet and serves as a very convenient mnemonic aid . A historically common and still prevalent convention uses the ETX code convention to interrupt and halt a program via an input data stream , usually from a keyboard .", "tags": "O O O O O U-MISC O O O B-MISC I-MISC L-MISC O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What was ASCII developed from? ", "id": "570bf3abec8fbc190045bbe2", "answers": [{"text": "telegraphic codes", "answer_start": 21}], "is_impossible": false}, {"question": "What was the first commercial use of ASCII?", "id": "570bf3abec8fbc190045bbe3", "answers": [{"text": "a seven-bit teleprinter code promoted by Bell data services", "answer_start": 72}], "is_impossible": false}, {"question": "When did work on the ASCII standard begin? ", "id": "570bf3abec8fbc190045bbe4", "answers": [{"text": "October 6, 1960", "answer_start": 169}], "is_impossible": false}, {"question": "When was the first edition of the standard published?", "id": "570bf3abec8fbc190045bbe5", "answers": [{"text": "1963", "answer_start": 329}], "is_impossible": false}, {"question": "When was the first major revision of the code done?", "id": "570bf3abec8fbc190045bbe6", "answers": [{"text": "1967", "answer_start": 369}], "is_impossible": false}, {"plausible_answers": [{"text": "telegraphic codes", "answer_start": 21}], "question": "What did ASCII form a subcommittee from?", "id": "5a64ccfd7f3c80001a150be7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a seven-bit teleprinter code promoted by Bell data services", "answer_start": 72}], "question": "What was the first alphebetization use of ASCII?", "id": "5a64ccfd7f3c80001a150be8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "October 6, 1960", "answer_start": 169}], "question": "When did work on the ASCII preliminary Bell code begin?", "id": "5a64ccfd7f3c80001a150be9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "1963", "answer_start": 329}], "question": "When was the first edition of the Bell code published?", "id": "5a64ccfd7f3c80001a150bea", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "1967", "answer_start": 369}], "question": "When was the final revision of the code done?", "id": "5a64ccfd7f3c80001a150beb", "answers": [], "is_impossible": true}], "context": "ASCII developed from telegraphic codes. Its first commercial use was as a seven-bit teleprinter code promoted by Bell data services. Work on the ASCII standard began on October 6, 1960, with the first meeting of the American Standards Association's (ASA) X3.2 subcommittee. The first edition of the standard was published during 1963, underwent a major revision during 1967, and experienced its most recent update during 1986. Compared to earlier telegraph codes, the proposed Bell code and ASCII were both ordered for more convenient sorting (i.e., alphabetization) of lists, and added features for devices other than teleprinters.", "allenNER": {"words": "ASCII developed from telegraphic codes . Its first commercial use was as a seven - bit teleprinter code promoted by Bell data services . Work on the ASCII standard began on October 6 , 1960 , with the first meeting of the American Standards Association 's ( ASA ) X3.2 subcommittee . The first edition of the standard was published during 1963 , underwent a major revision during 1967 , and experienced its most recent update during 1986 . Compared to earlier telegraph codes , the proposed Bell code and ASCII were both ordered for more convenient sorting ( i.e. , alphabetization ) of lists , and added features for devices other than teleprinters .", "tags": "U-ORG O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O U-ORG O O O O O O O O O O O O O O B-ORG I-ORG L-ORG O O U-ORG O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Why did the committee consider a 8 bit code?", "id": "570bf49d6b8089140040faf0", "answers": [{"text": "eight bits (octets) would allow two four-bit patterns to efficiently encode two digits with binary-coded decimal", "answer_start": 50}], "is_impossible": false}, {"question": "Why did the committee decide on 7bit instead?", "id": "570bf49d6b8089140040faf1", "answers": [{"text": "minimize costs associated with data transmission", "answer_start": 304}], "is_impossible": false}, {"question": "What allowed for a parity bit for error chicking if needed?", "id": "570bf49d6b8089140040faf2", "answers": [{"text": "perforated tape at the time could record eight bits in one position", "answer_start": 360}], "is_impossible": false}, {"plausible_answers": [{"text": "eight bits (octets) would allow two four-bit patterns to efficiently encode two digits with binary-coded decimal", "answer_start": 50}], "question": "Why did the committee consider a 0 bit code?", "id": "5a64fd37c2b11c001a425b73", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "minimize costs associated with data transmission", "answer_start": 304}], "question": "Why did the company decide on 9bit instead?", "id": "5a64fd37c2b11c001a425b74", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "perforated tape at the time could record eight bits in one position", "answer_start": 360}], "question": "What allowed for a parity bit for data transmission if needed?", "id": "5a64fd37c2b11c001a425b75", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "0", "answer_start": 628}], "question": "What did seven-bit machines that did not use parity typically set the eight bit to?", "id": "5a64fd37c2b11c001a425b76", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "eight", "answer_start": 401}], "question": "How many bits in one position could be recorded by binary code?", "id": "5a64fd37c2b11c001a425b77", "answers": [], "is_impossible": true}], "context": "The committee considered an eight-bit code, since eight bits (octets) would allow two four-bit patterns to efficiently encode two digits with binary-coded decimal. However, it would require all data transmission to send eight bits when seven could suffice. The committee voted to use a seven-bit code to minimize costs associated with data transmission. Since perforated tape at the time could record eight bits in one position, it also allowed for a parity bit for error checking if desired.:217, 236\u2009\u00a7\u20095 Eight-bit machines (with octets as the native data type) that did not use parity checking typically set the eighth bit to 0.", "allenNER": {"words": "The committee considered an eight - bit code , since eight bits ( octets ) would allow two four - bit patterns to efficiently encode two digits with binary - coded decimal . However , it would require all data transmission to send eight bits when seven could suffice . The committee voted to use a seven - bit code to minimize costs associated with data transmission . Since perforated tape at the time could record eight bits in one position , it also allowed for a parity bit for error checking if desired.:217 , 236 \u00a7 5 Eight - bit machines ( with octets as the native data type ) that did not use parity checking typically set the eighth bit to 0 .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What was ASCII published as and when?", "id": "570bf60b6b8089140040faf6", "answers": [{"text": "ASA X3.4-1963", "answer_start": 86}], "is_impossible": false}, {"question": "How many code positions were left unassigned for furture standardization?", "id": "570bf60b6b8089140040faf7", "answers": [{"text": "28 code positions", "answer_start": 109}], "is_impossible": false}, {"question": "When was the change to ASCII made official?", "id": "570bf60b6b8089140040faf8", "answers": [{"text": "May 1963", "answer_start": 727}], "is_impossible": false}, {"question": "The lower case letters caused a differ in the patter, what did this cause?", "id": "570bf60b6b8089140040faf9", "answers": [{"text": "simplified case-insensitive character matching and the construction of keyboards and printers", "answer_start": 885}], "is_impossible": false}, {"plausible_answers": [{"text": "28 code positions", "answer_start": 109}], "question": "How many code positions were left lowercase for future standardization?", "id": "5a6505fac2b11c001a425b9d", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "May 1963", "answer_start": 398}], "question": "When was the change to ASCII rejected?", "id": "5a6505fac2b11c001a425b9e", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "simplified case-insensitive character matching and the construction of keyboards and printers", "answer_start": 885}], "question": "The lower case letters caused a differ in the pattern, how did this change the vote?", "id": "5a6505fac2b11c001a425b9f", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "the CCITT Working Party on the New Telegraph Alphabet", "answer_start": 407}], "question": "Who proposed to assign code positions without any meaning?", "id": "5a6505fac2b11c001a425ba0", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "The X3.2.4 task group", "answer_start": 655}], "question": "What task group voted its approval for the standardization of ASCII stock prices? ", "id": "5a6505fac2b11c001a425ba1", "answers": [], "is_impossible": true}], "context": "With the other special characters and control codes filled in, ASCII was published as ASA X3.4-1963, leaving 28 code positions without any assigned meaning, reserved for future standardization, and one unassigned control code.:66, 245 There was some debate at the time whether there should be more control characters rather than the lowercase alphabet.:435 The indecision did not last long: during May 1963 the CCITT Working Party on the New Telegraph Alphabet proposed to assign lowercase characters to columns 6 and 7, and International Organization for Standardization TC 97 SC 2 voted during October to incorporate the change into its draft standard. The X3.2.4 task group voted its approval for the change to ASCII at its May 1963 meeting. Locating the lowercase letters in columns 6 and 7 caused the characters to differ in bit pattern from the upper case by a single bit, which simplified case-insensitive character matching and the construction of keyboards and printers.", "allenNER": {"words": "With the other special characters and control codes filled in , ASCII was published as ASA X3.4 - 1963 , leaving 28 code positions without any assigned meaning , reserved for future standardization , and one unassigned control code.:66 , 245 There was some debate at the time whether there should be more control characters rather than the lowercase alphabet.:435 The indecision did not last long : during May 1963 the CCITT Working Party on the New Telegraph Alphabet proposed to assign lowercase characters to columns 6 and 7 , and International Organization for Standardization TC 97 SC 2 voted during October to incorporate the change into its draft standard . The X3.2.4 task group voted its approval for the change to ASCII at its May 1963 meeting . Locating the lowercase letters in columns 6 and 7 caused the characters to differ in bit pattern from the upper case by a single bit , which simplified case - insensitive character matching and the construction of keyboards and printers .", "tags": "O O O O O O O O O O O U-ORG O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-ORG I-ORG L-ORG O O B-ORG I-ORG L-ORG O O O O O O O O O O O O B-ORG I-ORG I-ORG L-ORG B-MISC L-MISC B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "What is a retified versionof ASCII?", "id": "570bf7f9ec8fbc190045bbec", "answers": [{"text": "ISO/IEC 646", "answer_start": 79}], "is_impossible": false}, {"question": "What type of extensions do these other character encodings have?", "id": "570bf7f9ec8fbc190045bbed", "answers": [{"text": "extensions for characters outside the English alphabet and symbols used outside the United States", "answer_start": 145}], "is_impossible": false}, {"question": "Why did most countries need a adapted version of ASCII?", "id": "570bf7f9ec8fbc190045bbee", "answers": [{"text": "ASCII suited the needs of only the USA and a few other countries", "answer_start": 371}], "is_impossible": false}, {"question": "Why are the other versions of ASCII not true ASCII?", "id": "570bf7f9ec8fbc190045bbef", "answers": [{"text": "true ASCII is defined strictly only by the ANSI standard", "answer_start": 662}], "is_impossible": false}, {"plausible_answers": [{"text": "ISO/IEC 646", "answer_start": 79}], "question": "What is an identical version of ASCII?", "id": "5a650b16c2b11c001a425bb1", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "extensions for characters outside the English alphabet and symbols used outside the United States", "answer_start": 145}], "question": "What type of extensions do these other standard bodies have?", "id": "5a650b16c2b11c001a425bb2", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "ASCII suited the needs of only the USA and a few other countries", "answer_start": 371}], "question": "Why did Brasil need an adapted version of ASCII?", "id": "5a650b16c2b11c001a425bb3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "true ASCII is defined strictly only by the ANSI standard", "answer_start": 662}], "question": "Why are the other versions of ASCII charging extra for extensions?", "id": "5a650b16c2b11c001a425bb4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Canada", "answer_start": 450}], "question": "What country had it own version that supported international standards?", "id": "5a650b16c2b11c001a425bb5", "answers": [], "is_impossible": true}], "context": "Other international standards bodies have ratified character encodings such as ISO/IEC 646 that are identical or nearly identical to ASCII, with extensions for characters outside the English alphabet and symbols used outside the United States, such as the symbol for the United Kingdom's pound sterling (\u00a3). Almost every country needed an adapted version of ASCII, since ASCII suited the needs of only the USA and a few other countries. For example, Canada had its own version that supported French characters. Other adapted encodings include ISCII (India), VISCII (Vietnam), and YUSCII (Yugoslavia). Although these encodings are sometimes referred to as ASCII, true ASCII is defined strictly only by the ANSI standard.", "allenNER": {"words": "Other international standards bodies have ratified character encodings such as ISO / IEC 646 that are identical or nearly identical to ASCII , with extensions for characters outside the English alphabet and symbols used outside the United States , such as the symbol for the United Kingdom 's pound sterling ( \u00a3 ) . Almost every country needed an adapted version of ASCII , since ASCII suited the needs of only the USA and a few other countries . For example , Canada had its own version that supported French characters . Other adapted encodings include ISCII ( India ) , VISCII ( Vietnam ) , and YUSCII ( Yugoslavia ) . Although these encodings are sometimes referred to as ASCII , true ASCII is defined strictly only by the ANSI standard .", "tags": "O O O O O O O O O O B-MISC I-MISC I-MISC L-MISC O O O O O O O U-MISC O O O O O O O U-MISC O O O O O O B-LOC L-LOC O O O O O O O B-LOC L-LOC O O O O O O O O O O O O O O O U-ORG O O U-MISC O O O O O O U-LOC O O O O O O O O O U-LOC O O O O O O U-MISC O O O O O O U-MISC O U-LOC O O U-MISC O U-LOC O O O U-LOC O U-LOC O O O O O O O O O O U-MISC O O U-MISC O O O O O O U-ORG O O"}}, {"qas": [{"question": "What was the most influential device that interpretated the characters?", "id": "570bfabb6b8089140040fafe", "answers": [{"text": "Teletype Model 33 ASR", "answer_start": 94}], "is_impossible": false}, {"question": "What was the Teletype Model 33 ASR?", "id": "570bfabb6b8089140040faff", "answers": [{"text": "a printing terminal with an available paper tape reader/punch option", "answer_start": 127}], "is_impossible": false}, {"question": "When was paper tape popular?", "id": "570bfabb6b8089140040fb00", "answers": [{"text": "until the 1980s", "answer_start": 264}], "is_impossible": false}, {"question": "Why was paper tape better than magnetic tape?", "id": "570bfabb6b8089140040fb01", "answers": [{"text": "less costly and in some ways less fragile", "answer_start": 281}], "is_impossible": false}, {"question": "What code eventually became neglected?", "id": "570bfabb6b8089140040fb02", "answers": [{"text": "code 15 (Control-O, Shift In)", "answer_start": 896}], "is_impossible": false}, {"plausible_answers": [{"text": "Teletype Model 33 ASR", "answer_start": 94}], "question": "What was the most influential devide that became de facto standard?", "id": "5a6510ccc2b11c001a425bd7", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "a printing terminal with an available paper tape reader/punch option", "answer_start": 127}], "question": "What competed with the Teletype Model 33 ASR?", "id": "5a6510ccc2b11c001a425bd8", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "until the 1980s", "answer_start": 264}], "question": "When was paper trade classified as earned income?", "id": "5a6510ccc2b11c001a425bd9", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "less costly and in some ways less fragile", "answer_start": 281}], "question": "Why was paper tape better than timesharing systems?", "id": "5a6510ccc2b11c001a425bda", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "code 15 (Control-O, Shift In)", "answer_start": 896}], "question": "What code eventually became popularized by ASCII-1963?", "id": "5a6510ccc2b11c001a425bdb", "answers": [], "is_impossible": true}], "context": "Probably the most influential single device on the interpretation of these characters was the Teletype Model 33 ASR, which was a printing terminal with an available paper tape reader/punch option. Paper tape was a very popular medium for long-term program storage until the 1980s, less costly and in some ways less fragile than magnetic tape. In particular, the Teletype Model 33 machine assignments for codes 17 (Control-Q, DC1, also known as XON), 19 (Control-S, DC3, also known as XOFF), and 127 (Delete) became de facto standards. The Model 33 was also notable for taking the description of Control-G (BEL, meaning audibly alert the operator) literally as the unit contained an actual bell which it rang when it received a BEL character. Because the keytop for the O key also showed a left-arrow symbol (from ASCII-1963, which had this character instead of underscore), a noncompliant use of code 15 (Control-O, Shift In) interpreted as \"delete previous character\" was also adopted by many early timesharing systems but eventually became neglected.", "allenNER": {"words": "Probably the most influential single device on the interpretation of these characters was the Teletype Model 33 ASR , which was a printing terminal with an available paper tape reader / punch option . Paper tape was a very popular medium for long - term program storage until the 1980s , less costly and in some ways less fragile than magnetic tape . In particular , the Teletype Model 33 machine assignments for codes 17 ( Control - Q , DC1 , also known as XON ) , 19 ( Control - S , DC3 , also known as XOFF ) , and 127 ( Delete ) became de facto standards . The Model 33 was also notable for taking the description of Control - G ( BEL , meaning audibly alert the operator ) literally as the unit contained an actual bell which it rang when it received a BEL character . Because the keytop for the O key also showed a left - arrow symbol ( from ASCII-1963 , which had this character instead of underscore ) , a noncompliant use of code 15 ( Control - O , Shift In ) interpreted as \" delete previous character \" was also adopted by many early timesharing systems but eventually became neglected .", "tags": "O O O O O O O O O O O O O O B-MISC I-MISC I-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O U-MISC O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Why were problems created when transferring files between systems?", "id": "570bfb6dec8fbc190045bbf4", "answers": [{"text": "The inherent ambiguity of many control characters, combined with their historical usage", "answer_start": 0}], "is_impossible": false}, {"question": "Teletype machines had to have two codes to termanate a line, what were they?", "id": "570bfb6dec8fbc190045bbf5", "answers": [{"text": "\"Carriage Return\" (which moves the printhead to the beginning of the line) and \"Line Feed\" (which advances the paper one line without moving the printhead)", "answer_start": 309}], "is_impossible": false}, {"question": "Where does the name \"Carriage Return\" come from?", "id": "570bfb6dec8fbc190045bbf6", "answers": [{"text": "on a manual typewriter the carriage holding the paper moved while the position where the typebars struck the ribbon remained stationary", "answer_start": 518}], "is_impossible": false}, {"question": "What side does the carriage have to be pushed to when starting a new line?", "id": "570bfb6dec8fbc190045bbf7", "answers": [{"text": "right", "answer_start": 710}], "is_impossible": false}, {"plausible_answers": [{"text": "The inherent ambiguity of many control characters, combined with their historical usage", "answer_start": 0}], "question": "Why were problems created when beginning a line?", "id": "5a651dd3c2b11c001a425c33", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "\"Carriage Return\" (which moves the printhead to the beginning of the line) and \"Line Feed\" (which advances the paper one line without moving the printhead)", "answer_start": 309}], "question": "Teletype machines had to have entire carriages to terminate a line, what were they? ", "id": "5a651dd3c2b11c001a425c34", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "right", "answer_start": 710}], "question": "What side does the carriage have to be pushed to without moving the printhead?", "id": "5a651dd3c2b11c001a425c35", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Carriage Return", "answer_start": 310}], "question": "What moves the printhead to the various operating systems?", "id": "5a651dd3c2b11c001a425c36", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Line Feed", "answer_start": 389}], "question": "Which advances the paper where the typebars strike the ribbon?", "id": "5a651dd3c2b11c001a425c37", "answers": [], "is_impossible": true}], "context": "The inherent ambiguity of many control characters, combined with their historical usage, created problems when transferring \"plain text\" files between systems. The best example of this is the newline problem on various operating systems. Teletype machines required that a line of text be terminated with both \"Carriage Return\" (which moves the printhead to the beginning of the line) and \"Line Feed\" (which advances the paper one line without moving the printhead). The name \"Carriage Return\" comes from the fact that on a manual typewriter the carriage holding the paper moved while the position where the typebars struck the ribbon remained stationary. The entire carriage had to be pushed (returned) to the right in order to position the left margin of the paper for the next line.", "allenNER": {"words": "The inherent ambiguity of many control characters , combined with their historical usage , created problems when transferring \" plain text \" files between systems . The best example of this is the newline problem on various operating systems . Teletype machines required that a line of text be terminated with both \" Carriage Return \" ( which moves the printhead to the beginning of the line ) and \" Line Feed \" ( which advances the paper one line without moving the printhead ) . The name \" Carriage Return \" comes from the fact that on a manual typewriter the carriage holding the paper moved while the position where the typebars struck the ribbon remained stationary . The entire carriage had to be pushed ( returned ) to the right in order to position the left margin of the paper for the next line .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O B-MISC L-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "When was the first typewritter with a shift key created?", "id": "570bfcd5ec8fbc190045bbfc", "answers": [{"text": "1878", "answer_start": 285}], "is_impossible": false}, {"question": "What were used instead of 0 and 1? ", "id": "570bfcd5ec8fbc190045bbfd", "answers": [{"text": "using O (capital letter o) and l (lowercase letter L) instead", "answer_start": 420}], "is_impossible": false}, {"question": "What layout did the Teletype Model 33 use?", "id": "570bfcd5ec8fbc190045bbfe", "answers": [{"text": "which used the left-shifted layout corresponding to ASCII", "answer_start": 1077}], "is_impossible": false}, {"question": "Do shift values for symbols on modern keyboards correspond closely to the ASCII table?", "id": "570bfcd5ec8fbc190045bbff", "answers": [{"text": "do not correspond as closely", "answer_start": 1444}], "is_impossible": false}, {"plausible_answers": [{"text": "1878", "answer_start": 285}], "question": "When was the first typewriter with a 0 key created?", "id": "5a6501b4c2b11c001a425b97", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "using O (capital letter o) and l (lowercase letter L) instead,", "answer_start": 420}], "question": "What were used instead of underscores?", "id": "5a6501b4c2b11c001a425b98", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "which used the left-shifted layout corresponding to ASCII", "answer_start": 1077}], "question": "What space character did the Teletype Model 33 use?", "id": "5a6501b4c2b11c001a425b99", "answers": [], "is_impossible": true}], "context": "Many of the non-alphanumeric characters were positioned to correspond to their shifted position on typewriters; an important subtlety is that these were based on mechanical typewriters, not electric typewriters. Mechanical typewriters followed the standard set by the Remington No. 2 (1878), the first typewriter with a shift key, and the shifted values of 23456789- were \"#$%_&'() \u2013  early typewriters omitted 0 and 1, using O (capital letter o) and l (lowercase letter L) instead, but 1! and 0) pairs became standard once 0 and 1 became common. Thus, in ASCII !\"#$% were placed in second column, rows 1\u20135, corresponding to the digits 1\u20135 in the adjacent column. The parentheses could not correspond to 9 and 0, however, because the place corresponding to 0 was taken by the space character. This was accommodated by removing _ (underscore) from 6 and shifting the remaining characters left, which corresponded to many European typewriters that placed the parentheses with 8 and 9. This discrepancy from typewriters led to bit-paired keyboards, notably the Teletype Model 33, which used the left-shifted layout corresponding to ASCII, not to traditional mechanical typewriters. Electric typewriters, notably the more recently introduced IBM Selectric (1961), used a somewhat different layout that has become standard on computers\u2014\u200b\u200bfollowing the IBM PC (1981), especially Model M (1984)\u2014\u200b\u200band thus shift values for symbols on modern keyboards do not correspond as closely to the ASCII table as earlier keyboards did. The /? pair also dates to the No. 2, and the ,< .> pairs were used on some keyboards (others, including the No. 2, did not shift , (comma) or . (full stop) so they could be used in uppercase without unshifting). However, ASCII split the ;: pair (dating to No. 2), and rearranged mathematical symbols (varied conventions, commonly -* =+) to :* ;+ -=.", "allenNER": {"words": "Many of the non - alphanumeric characters were positioned to correspond to their shifted position on typewriters ; an important subtlety is that these were based on mechanical typewriters , not electric typewriters . Mechanical typewriters followed the standard set by the Remington No . 2 ( 1878 ) , the first typewriter with a shift key , and the shifted values of 23456789- were \" # $ % _ & ' ( ) \u2013 early typewriters omitted 0 and 1 , using O ( capital letter o ) and l ( lowercase letter L ) instead , but 1 ! and 0 ) pairs became standard once 0 and 1 became common . Thus , in ASCII ! \" # $ % were placed in second column , rows 1\u20135 , corresponding to the digits 1\u20135 in the adjacent column . The parentheses could not correspond to 9 and 0 , however , because the place corresponding to 0 was taken by the space character . This was accommodated by removing _ ( underscore ) from 6 and shifting the remaining characters left , which corresponded to many European typewriters that placed the parentheses with 8 and 9 . This discrepancy from typewriters led to bit - paired keyboards , notably the Teletype Model 33 , which used the left - shifted layout corresponding to ASCII , not to traditional mechanical typewriters . Electric typewriters , notably the more recently introduced IBM Selectric ( 1961 ) , used a somewhat different layout that has become standard on computers\u2014\u200b\u200bfollowing the IBM PC ( 1981 ) , especially Model M ( 1984)\u2014\u200b\u200band thus shift values for symbols on modern keyboards do not correspond as closely to the ASCII table as earlier keyboards did . The / ? pair also dates to the No . 2 , and the , < . > pairs were used on some keyboards ( others , including the No . 2 , did not shift , ( comma ) or . ( full stop ) so they could be used in uppercase without unshifting ) . However , ASCII split the ; : pair ( dating to No . 2 ) , and rearranged mathematical symbols ( varied conventions , commonly - * = + ) to :* ; + -=.", "tags}}, {"qas": [{"question": "What is the official name of code 127?", "id": "570bfe83ec8fbc190045bc04", "answers": [{"text": "delete", "answer_start": 30}], "is_impossible": false}, {"question": "What was code 127 labeled as for the Teletype?", "id": "570bfe83ec8fbc190045bc05", "answers": [{"text": "rubout", "answer_start": 66}], "is_impossible": false}, {"question": "Why did Teletype have the code for \"rubout\"?", "id": "570bfe83ec8fbc190045bc06", "answers": [{"text": "to make it an ignored character", "answer_start": 268}], "is_impossible": false}, {"plausible_answers": [{"text": "delete", "answer_start": 30}], "question": "What is the official name of an existing mark?", "id": "5a651510c2b11c001a425bf3", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "rubout", "answer_start": 66}], "question": "What was NUL named as for the Teletype?", "id": "5a651510c2b11c001a425bf4", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "to make it an ignored character", "answer_start": 268}], "question": "Why did teletype have extra spaces for \"rubout\"?", "id": "5a651510c2b11c001a425bf5", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "put into the empty space", "answer_start": 637}], "question": "What happened to replacements of control codes?", "id": "5a651510c2b11c001a425bf6", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "punching the all-ones bit pattern on top of an existing mark would obliterate it", "answer_start": 384}], "question": "Why was standard code useful for paper tape?", "id": "5a651510c2b11c001a425bf7", "answers": [], "is_impossible": true}], "context": "Code 127 is officially named \"delete\" but the Teletype label was \"rubout\". Since the original standard did not give detailed interpretation for most control codes, interpretations of this code varied. The original Teletype meaning, and the intent of the standard, was to make it an ignored character, the same as NUL (all zeroes). This was useful specifically for paper tape, because punching the all-ones bit pattern on top of an existing mark would obliterate it. Tapes designed to be \"hand edited\" could even be produced with spaces of extra NULs (blank tape) so that a block of characters could be \"rubbed out\" and then replacements put into the empty space.", "allenNER": {"words": "Code 127 is officially named \" delete \" but the Teletype label was \" rubout \" . Since the original standard did not give detailed interpretation for most control codes , interpretations of this code varied . The original Teletype meaning , and the intent of the standard , was to make it an ignored character , the same as NUL ( all zeroes ) . This was useful specifically for paper tape , because punching the all - ones bit pattern on top of an existing mark would obliterate it . Tapes designed to be \" hand edited \" could even be produced with spaces of extra NULs ( blank tape ) so that a block of characters could be \" rubbed out \" and then replacements put into the empty space .", "tags": "B-MISC L-MISC O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O U-ORG O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O O O O O O O O O O O O O O O O O O O O O O"}}, {"qas": [{"question": "Why is adding two characters at the ned of a line problemsome? ", "id": "570c0099ec8fbc190045bc0a", "answers": [{"text": "introduces unnecessary complexity and questions as to how to interpret each character when encountered alone", "answer_start": 66}], "is_impossible": false}, {"question": "What id Multics use to simplify plain text data?", "id": "570c0099ec8fbc190045bc0b", "answers": [{"text": "line feed (LF) alone as a line terminator", "answer_start": 254}], "is_impossible": false}, {"question": "Who adopted this practice from Multics?", "id": "570c0099ec8fbc190045bc0c", "answers": [{"text": "Unix and Unix-like systems, and Amiga systems", "answer_start": 297}], "is_impossible": false}, {"question": "What used carriage return(CR) alone as a line terminator?", "id": "570c0099ec8fbc190045bc0d", "answers": [{"text": "Macintosh OS, Apple DOS, and ProDOS", "answer_start": 395}], "is_impossible": false}, {"question": "When did Apple replace their CR with line feed (LF)?", "id": "570c0099ec8fbc190045bc0e", "answers": [{"text": "since Apple replaced these operating systems with the Unix-based OS X operating system", "answer_start": 514}], "is_impossible": false}, {"plausible_answers": [{"text": "introduces unnecessary complexity and questions as to how to interpret each character when encountered alone", "answer_start": 66}], "question": "Why is adding the Unix-based operating system at the end of a line problemsome?", "id": "5a652128c2b11c001a425c51", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "line feed (LF) alone as a line terminator", "answer_start": 254}], "question": "What did characters use to simplify plain text data?", "id": "5a652128c2b11c001a425c52", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Unix and Unix-like systems, and Amiga systems", "answer_start": 297}], "question": "Who adopted this practice from Apple?", "id": "5a652128c2b11c001a425c53", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "Macintosh OS, Apple DOS, and ProDOS", "answer_start": 395}], "question": "What used carriage return(CR) alone as a data stream?", "id": "5a652128c2b11c001a425c54", "answers": [], "is_impossible": true}, {"plausible_answers": [{"text": "since Apple replaced these operating systems with the Unix-based OS X operating system", "answer_start": 514}], "question": "When did Amiga stystems replace their CR with line feed (LF)? ", "id": "5a652128c2b11c001a425c55", "answers": [], "is_impossible": true}], "context": "Unfortunately, requiring two characters to mark the end of a line introduces unnecessary complexity and questions as to how to interpret each character when encountered alone. To simplify matters plain text data streams, including files, on Multics used line feed (LF) alone as a line terminator. Unix and Unix-like systems, and Amiga systems, adopted this convention from Multics. The original Macintosh OS, Apple DOS, and ProDOS, on the other hand, used carriage return (CR) alone as a line terminator; however, since Apple replaced these operating systems with the Unix-based OS X operating system, they now use line feed (LF) as well.", "allenNER": {"words": "Unfortunately , requiring two characters to mark the end of a line introduces unnecessary complexity and questions as to how to interpret each character when encountered alone . To simplify matters plain text data streams , including files , on Multics used line feed ( LF ) alone as a line terminator . Unix and Unix - like systems , and Amiga systems , adopted this convention from Multics . The original Macintosh OS , Apple DOS , and ProDOS , on the other hand , used carriage return ( CR ) alone as a line terminator ; however , since Apple replaced these operating systems with the Unix - based OS X operating system , they now use line feed ( LF ) as well .", "tags": "O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O O U-MISC O O O O U-MISC O O O O O O O U-MISC O U-MISC O O O O O U-MISC O O O O O O U-MISC O O O B-MISC L-MISC O B-MISC L-MISC O O U-MISC O O O O O O O O O O U-MISC O O O O O O O O O O U-ORG O O O O O O U-MISC O O B-MISC L-MISC O O O O O O O O O U-MISC O O O O"}}]}, "version": ["v2.0"]}