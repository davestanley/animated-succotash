{"data": {"title": "Computer", "paragraphs": [{"qas": [{"question": "In computer terms, what does CPU stand for?", "id": "56fdc40c19033b140034cd4d", "answers": [{"text": "central processing unit", "answer_start": 84}], "is_impossible": false}, {"question": "What are the devices called that are from an external source?", "id": "56fdc40c19033b140034cd4e", "answers": [{"text": "Peripheral devices", "answer_start": 312}], "is_impossible": false}, {"question": "What are two things that a computer always has?", "id": "56fdc40c19033b140034cd4f", "answers": [{"text": "(CPU), and some form of memory", "answer_start": 108}], "is_impossible": false}], "context": "Conventionally, a computer consists of at least one processing element, typically a central processing unit (CPU), and some form of memory. The processing element carries out arithmetic and logic operations, and a sequencing and control unit can change the order of operations in response to stored information. Peripheral devices allow information to be retrieved from an external source, and the result of operations saved and retrieved.", "allenNER": {"words": "Conventionally , a computer consists of at least one processing element , typically a central processing unit ( CPU ) , and some form of memory . The processing element carries out arithmetic and logic operations , and a sequencing and control unit can change the order of operations in response to stored information . Peripheral devices allow information to be retrieved from an external source , and the result of operations saved and retrieved .", "tags": "0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What were analog computers originally used for?", "id": "56fdc48f19033b140034cd53", "answers": [{"text": "astronomical calculations", "answer_start": 111}], "is_impossible": false}, {"question": "During what war were computers first used for military applications?", "id": "56fdc48f19033b140034cd54", "answers": [{"text": "World War II,", "answer_start": 141}], "is_impossible": false}, {"question": "In computer terms, what does PC stand for?", "id": "56fdc48f19033b140034cd55", "answers": [{"text": "personal computers", "answer_start": 436}], "is_impossible": false}, {"question": "During what war were the first digital computers invented?", "id": "56fdc48f19033b140034cd56", "answers": [{"text": "World War II", "answer_start": 141}], "is_impossible": false}], "context": "Mechanical analog computers started appearing in the first century and were later used in the medieval era for astronomical calculations. In World War II, mechanical analog computers were used for specialized military applications such as calculating torpedo aiming. During this time the first electronic digital computers were developed. Originally they were the size of a large room, consuming as much power as several hundred modern personal computers (PCs).", "allenNER": {"words": "Mechanical analog computers started appearing in the first century and were later used in the medieval era for astronomical calculations . In World War II , mechanical analog computers were used for specialized military applications such as calculating torpedo aiming . During this time the first electronic digital computers were developed . Originally they were the size of a large room , consuming as much power as several hundred modern personal computers ( PCs ) .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Computers in today's age are based on what that make them much faster than earlier computers?", "id": "56fdc4f319033b140034cd5b", "answers": [{"text": "integrated circuits", "answer_start": 26}], "is_impossible": false}, {"question": "How much more powerful are modern computers versus early computers?", "id": "56fdc4f319033b140034cd5c", "answers": [{"text": "millions to billions of times", "answer_start": 50}], "is_impossible": false}], "context": "Modern computers based on integrated circuits are millions to billions of times more capable than the early machines, and occupy a fraction of the space. Computers are small enough to fit into mobile devices, and mobile computers can be powered by small batteries. Personal computers in their various forms are icons of the Information Age and are generally considered as \"computers\". However, the embedded computers found in many devices from MP3 players to fighter aircraft and from electronic toys to industrial robots are the most numerous.", "allenNER": {"words": "Modern computers based on integrated circuits are millions to billions of times more capable than the early machines , and occupy a fraction of the space . Computers are small enough to fit into mobile devices , and mobile computers can be powered by small batteries . Personal computers in their various forms are icons of the Information Age and are generally considered as \" computers \" . However , the embedded computers found in many devices from MP3 players to fighter aircraft and from electronic toys to industrial robots are the most numerous .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When was the first known use of the word \"computer\"?", "id": "56fdc5b519033b140034cd5f", "answers": [{"text": "1613", "answer_start": 50}], "is_impossible": false}, {"question": "In which book, was the term \"computer\" first used?", "id": "56fdc5b519033b140034cd60", "answers": [{"text": "The Yong Mans Gleanings", "answer_start": 72}], "is_impossible": false}, {"question": "Who was the author of the book, The Yong Mans Gleanings?", "id": "56fdc5b519033b140034cd61", "answers": [{"text": "Richard Braithwait", "answer_start": 114}], "is_impossible": false}, {"question": "From the end of what century, did the word \"computer\" take its well known meaning of today?", "id": "56fdc5b519033b140034cd62", "answers": [{"text": "19th century", "answer_start": 442}], "is_impossible": false}], "context": "The first known use of the word \"computer\" was in 1613 in a book called The Yong Mans Gleanings by English writer Richard Braithwait: \"I haue read the truest computer of Times, and the best Arithmetician that euer breathed, and he reduceth thy dayes into a short number.\" It referred to a person who carried out calculations, or computations. The word continued with the same meaning until the middle of the 20th century. From the end of the 19th century the word began to take on its more familiar meaning, a machine that carries out computations.", "allenNER": {"words": "The first known use of the word \" computer \" was in 1613 in a book called The Yong Mans Gleanings by English writer Richard Braithwait : \" I haue read the truest computer of Times , and the best Arithmetician that euer breathed , and he reduceth thy dayes into a short number . \" It referred to a person who carried out calculations , or computations . The word continued with the same meaning until the middle of the 20th century . From the end of the 19th century the word began to take on its more familiar meaning , a machine that carries out computations .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The earliest device to help count was what?", "id": "56fdc60e19033b140034cd67", "answers": [{"text": "a form of tally stick", "answer_start": 161}], "is_impossible": false}, {"question": "Calculi during the Fertile Crescent refers to what?", "id": "56fdc60e19033b140034cd68", "answers": [{"text": "(clay spheres, cones, etc.)", "answer_start": 259}], "is_impossible": false}], "context": "Devices have been used to aid computation for thousands of years, mostly using one-to-one correspondence with fingers. The earliest counting device was probably a form of tally stick. Later record keeping aids throughout the Fertile Crescent included calculi (clay spheres, cones, etc.) which represented counts of items, probably livestock or grains, sealed in hollow unbaked clay containers. The use of counting rods is one example.", "allenNER": {"words": "Devices have been used to aid computation for thousands of years , mostly using one - to - one correspondence with fingers . The earliest counting device was probably a form of tally stick . Later record keeping aids throughout the Fertile Crescent included calculi ( clay spheres , cones , etc . ) which represented counts of items , probably livestock or grains , sealed in hollow unbaked clay containers . The use of counting rods is one example .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0"}}, {"qas": [{"question": "What was the abacus first used for?", "id": "56fdc67a19033b140034cd6b", "answers": [{"text": "arithmetic tasks", "answer_start": 34}], "is_impossible": false}, {"question": "When was the Roman abacus first used?", "id": "56fdc67a19033b140034cd6c", "answers": [{"text": "2400 BC", "answer_start": 103}], "is_impossible": false}, {"question": "Where was the Roman abacus first used?", "id": "56fdc67a19033b140034cd6d", "answers": [{"text": "Babylonia", "answer_start": 81}], "is_impossible": false}, {"question": "In medieval Europe was was placed on a table to help count money?", "id": "56fdc67a19033b140034cd6e", "answers": [{"text": "a checkered cloth", "answer_start": 230}], "is_impossible": false}, {"question": "A checkered cloth on a table was used in medieval Europe to help count what?", "id": "56fdc67a19033b140034cd6f", "answers": [{"text": "sums of money", "answer_start": 360}], "is_impossible": false}], "context": "The abacus was initially used for arithmetic tasks. The Roman abacus was used in Babylonia as early as 2400 BC. Since then, many other forms of reckoning boards or tables have been invented. In a medieval European counting house, a checkered cloth would be placed on a table, and markers moved around on it according to certain rules, as an aid to calculating sums of money.", "allenNER": {"words": "The abacus was initially used for arithmetic tasks . The Roman abacus was used in Babylonia as early as 2400 BC . Since then , many other forms of reckoning boards or tables have been invented . In a medieval European counting house , a checkered cloth would be placed on a table , and markers moved around on it according to certain rules , as an aid to calculating sums of money .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What is thought to be the first mechanical analog computer?", "id": "56fdc6e7761e401900d28bdd", "answers": [{"text": "The Antikythera mechanism", "answer_start": 0}], "is_impossible": false}, {"question": "The Antikythera mechanism was thought to be the first computer according to whom?", "id": "56fdc6e7761e401900d28bde", "answers": [{"text": "Derek J. de Solla Price.", "answer_start": 100}], "is_impossible": false}, {"question": "When was the Antikythera mechanism discovered?", "id": "56fdc6e7761e401900d28bdf", "answers": [{"text": "1901", "answer_start": 199}], "is_impossible": false}, {"question": "Where was the Antikythera mechanism found in 1901?", "id": "56fdc6e7761e401900d28be0", "answers": [{"text": "Antikythera wreck off the Greek island of Antikythera", "answer_start": 211}], "is_impossible": false}, {"question": "Where is the Greek Island of Antikythera located between?", "id": "56fdc6e7761e401900d28be1", "answers": [{"text": "Kythera and Crete", "answer_start": 274}], "is_impossible": false}], "context": "The Antikythera mechanism is believed to be the earliest mechanical analog \"computer\", according to Derek J. de Solla Price. It was designed to calculate astronomical positions. It was discovered in 1901 in the Antikythera wreck off the Greek island of Antikythera, between Kythera and Crete, and has been dated to circa 100 BC. Devices of a level of complexity comparable to that of the Antikythera mechanism would not reappear until a thousand years later.", "allenNER": {"words": "The Antikythera mechanism is believed to be the earliest mechanical analog \" computer \" , according to Derek J. de Solla Price . It was designed to calculate astronomical positions . It was discovered in 1901 in the Antikythera wreck off the Greek island of Antikythera , between Kythera and Crete , and has been dated to circa 100 BC . Devices of a level of complexity comparable to that of the Antikythera mechanism would not reappear until a thousand years later .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0"}}, {"qas": [{"question": "Who invented the planisphere?", "id": "56fdc764761e401900d28be7", "answers": [{"text": "Ab\u016b Rayh\u0101n al-B\u012br\u016bn\u012b", "answer_start": 151}], "is_impossible": false}, {"question": "Who is thought to have invented the astrolabe in history?", "id": "56fdc764761e401900d28be8", "answers": [{"text": "Hipparchus", "answer_start": 316}], "is_impossible": false}, {"question": "The astrolabe was a combination of what two devices in history?", "id": "56fdc764761e401900d28be9", "answers": [{"text": "the planisphere and dioptra", "answer_start": 345}], "is_impossible": false}, {"question": "The first astrolabe with gear-wheels was invented when?", "id": "56fdc764761e401900d28bea", "answers": [{"text": "1235", "answer_start": 627}], "is_impossible": false}, {"question": "The first astrolabe with a mechanical calendar was invented where?", "id": "56fdc764761e401900d28beb", "answers": [{"text": "Persia", "answer_start": 617}], "is_impossible": false}], "context": "Many mechanical aids to calculation and measurement were constructed for astronomical and navigation use. The planisphere was a star chart invented by Ab\u016b Rayh\u0101n al-B\u012br\u016bn\u012b in the early 11th century. The astrolabe was invented in the Hellenistic world in either the 1st or 2nd centuries BC and is often attributed to Hipparchus. A combination of the planisphere and dioptra, the astrolabe was effectively an analog computer capable of working out several different kinds of problems in spherical astronomy. An astrolabe incorporating a mechanical calendar computer and gear-wheels was invented by Abi Bakr of Isfahan, Persia in 1235. Ab\u016b Rayh\u0101n al-B\u012br\u016bn\u012b invented the first mechanical geared lunisolar calendar astrolabe, an early fixed-wired knowledge processing machine with a gear train and gear-wheels, circa 1000 AD.", "allenNER": {"words": "Many mechanical aids to calculation and measurement were constructed for astronomical and navigation use . The planisphere was a star chart invented by Ab\u016b Rayh\u0101n al - B\u012br\u016bn\u012b in the early 11th century . The astrolabe was invented in the Hellenistic world in either the 1st or 2nd centuries BC and is often attributed to Hipparchus . A combination of the planisphere and dioptra , the astrolabe was effectively an analog computer capable of working out several different kinds of problems in spherical astronomy . An astrolabe incorporating a mechanical calendar computer and gear - wheels was invented by Abi Bakr of Isfahan , Persia in 1235 . Ab\u016b Rayh\u0101n al - B\u012br\u016bn\u012b invented the first mechanical geared lunisolar calendar astrolabe , an early fixed - wired knowledge processing machine with a gear train and gear - wheels , circa 1000 AD .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0"}}, {"qas": [{"question": "The sector, a calculating instrument, was invented during what century?", "id": "56fdc789761e401900d28bf1", "answers": [{"text": "16th century", "answer_start": 206}], "is_impossible": false}], "context": "The sector, a calculating instrument used for solving problems in proportion, trigonometry, multiplication and division, and for various functions, such as squares and cube roots, was developed in the late 16th century and found application in gunnery, surveying and navigation.", "allenNER": {"words": "The sector , a calculating instrument used for solving problems in proportion , trigonometry , multiplication and division , and for various functions , such as squares and cube roots , was developed in the late 16th century and found application in gunnery , surveying and navigation .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When was the slide rule first invented?", "id": "56fdc947761e401900d28bf3", "answers": [{"text": "1620\u20131630", "answer_start": 35}], "is_impossible": false}, {"question": "What is the slide rule used for?", "id": "56fdc947761e401900d28bf4", "answers": [{"text": "doing multiplication and division.", "answer_start": 151}], "is_impossible": false}, {"question": "What industry are slide rules still used today?", "id": "56fdc947761e401900d28bf5", "answers": [{"text": "Aviation", "answer_start": 438}], "is_impossible": false}], "context": "The slide rule was invented around 1620\u20131630, shortly after the publication of the concept of the logarithm. It is a hand-operated analog computer for doing multiplication and division. As slide rule development progressed, added scales provided reciprocals, squares and square roots, cubes and cube roots, as well as transcendental functions such as logarithms and exponentials, circular and hyperbolic trigonometry and other functions. Aviation is one of the few fields where slide rules are still in widespread use, particularly for solving time\u2013distance problems in light aircraft. To save space and for ease of reading, these are typically circular devices rather than the classic linear slide rule shape. A popular example is the E6B.", "allenNER": {"words": "The slide rule was invented around 1620\u20131630 , shortly after the publication of the concept of the logarithm . It is a hand - operated analog computer for doing multiplication and division . As slide rule development progressed , added scales provided reciprocals , squares and square roots , cubes and cube roots , as well as transcendental functions such as logarithms and exponentials , circular and hyperbolic trigonometry and other functions . Aviation is one of the few fields where slide rules are still in widespread use , particularly for solving time \u2013 distance problems in light aircraft . To save space and for ease of reading , these are typically circular devices rather than the classic linear slide rule shape . A popular example is the E6B.", "tags": "0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What was the profession of Pierre Jaquet-Droz?", "id": "56fdc9b8761e401900d28bf9", "answers": [{"text": "a Swiss watchmaker", "answer_start": 33}], "is_impossible": false}, {"question": "When did Pierre Jaquet-Droz build a mechanical doll that could hold a pen?", "id": "56fdc9b8761e401900d28bfa", "answers": [{"text": "In the 1770s", "answer_start": 0}], "is_impossible": false}, {"question": "Where is the doll Pierre Jaquet-Droz built today?", "id": "56fdc9b8761e401900d28bfb", "answers": [{"text": "Mus\u00e9e d'Art et d'Histoire", "answer_start": 380}], "is_impossible": false}, {"question": "Where is the Musee d-Art et d'Histoire located?", "id": "56fdc9b8761e401900d28bfc", "answers": [{"text": "Neuch\u00e2tel, Switzerland", "answer_start": 409}], "is_impossible": false}], "context": "In the 1770s Pierre Jaquet-Droz, a Swiss watchmaker, built a mechanical doll (automata) that could write holding a quill pen. By switching the number and order of its internal wheels different letters, and hence different messages, could be produced. In effect, it could be mechanically \"programmed\" to read instructions. Along with two other complex machines, the doll is at the Mus\u00e9e d'Art et d'Histoire of Neuch\u00e2tel, Switzerland, and still operates.", "allenNER": {"words": "In the 1770s Pierre Jaquet - Droz , a Swiss watchmaker , built a mechanical doll ( automata ) that could write holding a quill pen . By switching the number and order of its internal wheels different letters , and hence different messages , could be produced . In effect , it could be mechanically \" programmed \" to read instructions . Along with two other complex machines , the doll is at the Mus\u00e9e d'Art et d'Histoire of Neuch\u00e2tel , Switzerland , and still operates .", "tags": "0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When was the tide-predicting machine invented by Sir William Thomson invented?", "id": "56fdca0319033b140034cd75", "answers": [{"text": "1872", "answer_start": 63}], "is_impossible": false}, {"question": "Who invented the first tide-predicting machine in 1872?", "id": "56fdca0319033b140034cd76", "answers": [{"text": "Sir William Thomson", "answer_start": 40}], "is_impossible": false}, {"question": "What did Sir William Thomson's tide-predicting machine use to function?", "id": "56fdca0319033b140034cd77", "answers": [{"text": "system of pulleys and wires", "answer_start": 132}], "is_impossible": false}], "context": "The tide-predicting machine invented by Sir William Thomson in 1872 was of great utility to navigation in shallow waters. It used a system of pulleys and wires to automatically calculate predicted tide levels for a set period at a particular location.", "allenNER": {"words": "The tide - predicting machine invented by Sir William Thomson in 1872 was of great utility to navigation in shallow waters . It used a system of pulleys and wires to automatically calculate predicted tide levels for a set period at a particular location .", "tags": "0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What type of mechanisms did the differential analyzer use?", "id": "56fdcadf761e401900d28c01", "answers": [{"text": "wheel-and-disc", "answer_start": 118}], "is_impossible": false}, {"question": "In 1876 who lobbied for the construction of the differential analyzers?", "id": "56fdcadf761e401900d28c02", "answers": [{"text": "Lord Kelvin", "answer_start": 180}], "is_impossible": false}, {"question": "During what decade were mechanical differential analyzers developed?", "id": "56fdcadf761e401900d28c03", "answers": [{"text": "1920s", "answer_start": 557}], "is_impossible": false}, {"question": "In the 1920s, who was the person who developed mechanical differential analyzers?", "id": "56fdcadf761e401900d28c04", "answers": [{"text": "Vannevar Bush", "answer_start": 564}], "is_impossible": false}], "context": "The differential analyser, a mechanical analog computer designed to solve differential equations by integration, used wheel-and-disc mechanisms to perform the integration. In 1876 Lord Kelvin had already discussed the possible construction of such calculators, but he had been stymied by the limited output torque of the ball-and-disk integrators. In a differential analyzer, the output of one integrator drove the input of the next integrator, or a graphing output. The torque amplifier was the advance that allowed these machines to work. Starting in the 1920s, Vannevar Bush and others developed mechanical differential analyzers.", "allenNER": {"words": "The differential analyser , a mechanical analog computer designed to solve differential equations by integration , used wheel - and - disc mechanisms to perform the integration . In 1876 Lord Kelvin had already discussed the possible construction of such calculators , but he had been stymied by the limited output torque of the ball - and - disk integrators . In a differential analyzer , the output of one integrator drove the input of the next integrator , or a graphing output . The torque amplifier was the advance that allowed these machines to work . Starting in the 1920s , Vannevar Bush and others developed mechanical differential analyzers .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who invented the concept of a programmable computer?", "id": "56fdcbae19033b140034cd7b", "answers": [{"text": "Charles Babbage", "answer_start": 0}], "is_impossible": false}, {"question": "Who is considered the \"father of the computer\"?", "id": "56fdcbae19033b140034cd7c", "answers": [{"text": "Charles Babbage", "answer_start": 0}], "is_impossible": false}, {"question": "During what century was the first mechanical computer invented by Charles Babbage?", "id": "56fdcbae19033b140034cd7d", "answers": [{"text": "early 19th century", "answer_start": 222}], "is_impossible": false}, {"question": "What year did Charles Babbage find out that An Analytical Engine was possible?", "id": "56fdcbae19033b140034cd7e", "answers": [{"text": "1833", "answer_start": 345}], "is_impossible": false}], "context": "Charles Babbage, an English mechanical engineer and polymath, originated the concept of a programmable computer. Considered the \"father of the computer\", he conceptualized and invented the first mechanical computer in the early 19th century. After working on his revolutionary difference engine, designed to aid in navigational calculations, in 1833 he realized that a much more general design, an Analytical Engine, was possible. The input of programs and data was to be provided to the machine via punched cards, a method being used at the time to direct mechanical looms such as the Jacquard loom. For output, the machine would have a printer, a curve plotter and a bell. The machine would also be able to punch numbers onto cards to be read in later. The Engine incorporated an arithmetic logic unit, control flow in the form of conditional branching and loops, and integrated memory, making it the first design for a general-purpose computer that could be described in modern terms as Turing-complete.", "allenNER": {"words": "Charles Babbage , an English mechanical engineer and polymath , originated the concept of a programmable computer . Considered the \" father of the computer \" , he conceptualized and invented the first mechanical computer in the early 19th century . After working on his revolutionary difference engine , designed to aid in navigational calculations , in 1833 he realized that a much more general design , an Analytical Engine , was possible . The input of programs and data was to be provided to the machine via punched cards , a method being used at the time to direct mechanical looms such as the Jacquard loom . For output , the machine would have a printer , a curve plotter and a bell . The machine would also be able to punch numbers onto cards to be read in later . The Engine incorporated an arithmetic logic unit , control flow in the form of conditional branching and loops , and integrated memory , making it the first design for a general - purpose computer that could be described in modern terms as Turing - complete .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who was Charles Babbage's son?", "id": "56fdcc3b19033b140034cd83", "answers": [{"text": "Henry Babbage", "answer_start": 551}], "is_impossible": false}, {"question": "Who created a simple version of the analytical engine's computing unit?", "id": "56fdcc3b19033b140034cd84", "answers": [{"text": "Henry Babbage", "answer_start": 551}], "is_impossible": false}, {"question": "When was the mill created by Henry Babbage?", "id": "56fdcc3b19033b140034cd85", "answers": [{"text": "1888", "answer_start": 653}], "is_impossible": false}, {"question": "When was a demonstration by Henry Babbage of the mill given?", "id": "56fdcc3b19033b140034cd86", "answers": [{"text": "1906", "answer_start": 728}], "is_impossible": false}], "context": "The machine was about a century ahead of its time. All the parts for his machine had to be made by hand \u2014 this was a major problem for a device with thousands of parts. Eventually, the project was dissolved with the decision of the British Government to cease funding. Babbage's failure to complete the analytical engine can be chiefly attributed to difficulties not only of politics and financing, but also to his desire to develop an increasingly sophisticated computer and to move ahead faster than anyone else could follow. Nevertheless, his son, Henry Babbage, completed a simplified version of the analytical engine's computing unit (the mill) in 1888. He gave a successful demonstration of its use in computing tables in 1906.", "allenNER": {"words": "The machine was about a century ahead of its time . All the parts for his machine had to be made by hand \u2014 this was a major problem for a device with thousands of parts . Eventually , the project was dissolved with the decision of the British Government to cease funding . Babbage 's failure to complete the analytical engine can be chiefly attributed to difficulties not only of politics and financing , but also to his desire to develop an increasingly sophisticated computer and to move ahead faster than anyone else could follow . Nevertheless , his son , Henry Babbage , completed a simplified version of the analytical engine 's computing unit ( the mill ) in 1888 . He gave a successful demonstration of its use in computing tables in 1906 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"}}, {"qas": [{"question": "Who invented the first analog computer in the form of a tide-predicting machine?", "id": "56fdcccd761e401900d28c09", "answers": [{"text": "Sir William Thomson", "answer_start": 76}], "is_impossible": false}, {"question": "When was the first analog computer in the form of a tide-predicting machine created?", "id": "56fdcccd761e401900d28c0a", "answers": [{"text": "1872", "answer_start": 99}], "is_impossible": false}, {"question": "Who created the idea of the differential analyzer in 1876?", "id": "56fdcccd761e401900d28c0b", "answers": [{"text": "James Thomson", "answer_start": 280}], "is_impossible": false}, {"question": "James Thomson was the brother of what famous figure?", "id": "56fdcccd761e401900d28c0c", "answers": [{"text": "Lord Kelvin", "answer_start": 326}], "is_impossible": false}], "context": "The first modern analog computer was a tide-predicting machine, invented by Sir William Thomson in 1872. The differential analyser, a mechanical analog computer designed to solve differential equations by integration using wheel-and-disc mechanisms, was conceptualized in 1876 by James Thomson, the brother of the more famous Lord Kelvin.", "allenNER": {"words": "The first modern analog computer was a tide - predicting machine , invented by Sir William Thomson in 1872 . The differential analyser , a mechanical analog computer designed to solve differential equations by integration using wheel - and - disc mechanisms , was conceptualized in 1876 by James Thomson , the brother of the more famous Lord Kelvin .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Where was the differential analyzer built by H.L. Hazen?", "id": "56fdcd2e761e401900d28c11", "answers": [{"text": "MIT", "answer_start": 132}], "is_impossible": false}, {"question": "The differential analyzer by H.L. Hazen and Vannevar Bush was first being built in what year?", "id": "56fdcd2e761e401900d28c12", "answers": [{"text": "1927", "answer_start": 148}], "is_impossible": false}, {"question": "The torque amplifiers of the differential analyzer were created by whom?", "id": "56fdcd2e761e401900d28c13", "answers": [{"text": "H. W. Nieman", "answer_start": 250}], "is_impossible": false}], "context": "The art of mechanical analog computing reached its zenith with the differential analyzer, built by H. L. Hazen and Vannevar Bush at MIT starting in 1927. This built on the mechanical integrators of James Thomson and the torque amplifiers invented by H. W. Nieman. A dozen of these devices were built before their obsolescence became obvious.", "allenNER": {"words": "The art of mechanical analog computing reached its zenith with the differential analyzer , built by H. L. Hazen and Vannevar Bush at MIT starting in 1927 . This built on the mechanical integrators of James Thomson and the torque amplifiers invented by H. W. Nieman . A dozen of these devices were built before their obsolescence became obvious .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "By what decade were analog computing devices rendered obsolete?", "id": "56fdcd6019033b140034cd8b", "answers": [{"text": "50s", "answer_start": 9}], "is_impossible": false}, {"question": "Analog computers remain in use in what industries?", "id": "56fdcd6019033b140034cd8c", "answers": [{"text": "education (control systems) and aircraft (slide rule).", "answer_start": 189}], "is_impossible": false}], "context": "By the 1950s the success of digital electronic computers had spelled the end for most analog computing machines, but analog computers remain in use in some specialized applications such as education (control systems) and aircraft (slide rule).", "allenNER": {"words": "By the 1950s the success of digital electronic computers had spelled the end for most analog computing machines , but analog computers remain in use in some specialized applications such as education ( control systems ) and aircraft ( slide rule ) .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who wrote the paper \"On Computable Numbers\"?", "id": "56fdda6219033b140034cd8f", "answers": [{"text": "Alan Turing", "answer_start": 108}], "is_impossible": false}, {"question": "When did Alan Turing write the paper, \"On Computable Numbers\"?", "id": "56fdda6219033b140034cd90", "answers": [{"text": "1936", "answer_start": 157}], "is_impossible": false}, {"question": "Who did Turing revise the results on the limits of proof and computation in 1931?", "id": "56fdda6219033b140034cd91", "answers": [{"text": "Kurt G\u00f6del", "answer_start": 212}], "is_impossible": false}], "context": "The principle of the modern computer was first described by mathematician and pioneering computer scientist Alan Turing, who set out the idea in his seminal 1936 paper, On Computable Numbers. Turing reformulated Kurt G\u00f6del's 1931 results on the limits of proof and computation, replacing G\u00f6del's universal arithmetic-based formal language with the formal and simple hypothetical devices that became known as Turing machines. He proved that some such machine would be capable of performing any conceivable mathematical computation if it were representable as an algorithm. He went on to prove that there was no solution to the Entscheidungsproblem by first showing that the halting problem for Turing machines is undecidable: in general, it is not possible to decide algorithmically whether a given Turing machine will ever halt.", "allenNER": {"words": "The principle of the modern computer was first described by mathematician and pioneering computer scientist Alan Turing , who set out the idea in his seminal 1936 paper , On Computable Numbers . Turing reformulated Kurt G\u00f6del 's 1931 results on the limits of proof and computation , replacing G\u00f6del 's universal arithmetic - based formal language with the formal and simple hypothetical devices that became known as Turing machines . He proved that some such machine would be capable of performing any conceivable mathematical computation if it were representable as an algorithm . He went on to prove that there was no solution to the Entscheidungsproblem by first showing that the halting problem for Turing machines is undecidable : in general , it is not possible to decide algorithmically whether a given Turing machine will ever halt .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A Universal Machine is known as what today?", "id": "56fddf1719033b140034cd95", "answers": [{"text": "Universal Turing machine", "answer_start": 71}], "is_impossible": false}], "context": "He also introduced the notion of a 'Universal Machine' (now known as a Universal Turing machine), with the idea that such a machine could perform the tasks of any other machine, or in other words, it is provably capable of computing anything that is computable by executing a program stored on tape, allowing the machine to be programmable. Von Neumann acknowledged that the central concept of the modern computer was due to this paper. Turing machines are to this day a central object of study in theory of computation. Except for the limitations imposed by their finite memory stores, modern computers are said to be Turing-complete, which is to say, they have algorithm execution capability equivalent to a universal Turing machine.", "allenNER": {"words": "He also introduced the notion of a ' Universal Machine ' ( now known as a Universal Turing machine ) , with the idea that such a machine could perform the tasks of any other machine , or in other words , it is provably capable of computing anything that is computable by executing a program stored on tape , allowing the machine to be programmable . Von Neumann acknowledged that the central concept of the modern computer was due to this paper . Turing machines are to this day a central object of study in theory of computation . Except for the limitations imposed by their finite memory stores , modern computers are said to be Turing - complete , which is to say , they have algorithm execution capability equivalent to a universal Turing machine .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What part of the US military developed an electromechanical analog computer to use on a submarine?", "id": "56fddf75761e401900d28c17", "answers": [{"text": "the United States Navy", "answer_start": 8}], "is_impossible": false}, {"question": "When did the US Navy invent an electromechanical computer to use on a submarine?", "id": "56fddf75761e401900d28c18", "answers": [{"text": "1938", "answer_start": 3}], "is_impossible": false}, {"question": "What type of math did the Torpedo Data computer use to fire a torpedo at a moving target?", "id": "56fddf75761e401900d28c19", "answers": [{"text": "trigonometry", "answer_start": 169}], "is_impossible": false}], "context": "By 1938 the United States Navy had developed an electromechanical analog computer small enough to use aboard a submarine. This was the Torpedo Data Computer, which used trigonometry to solve the problem of firing a torpedo at a moving target. During World War II similar devices were developed in other countries as well.", "allenNER": {"words": "By 1938 the United States Navy had developed an electromechanical analog computer small enough to use aboard a submarine . This was the Torpedo Data Computer , which used trigonometry to solve the problem of firing a torpedo at a moving target . During World War II similar devices were developed in other countries as well .", "tags": "0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who created the relay computer, the Z2?", "id": "56fde0be761e401900d28c1d", "answers": [{"text": "Konrad Zuse", "answer_start": 294}], "is_impossible": false}, {"question": "When did Konrad Zuse invent the Z2?", "id": "56fde0be761e401900d28c1e", "answers": [{"text": "1939", "answer_start": 309}], "is_impossible": false}, {"question": "What is one of the first electromechanical relay computers?", "id": "56fde0be761e401900d28c1f", "answers": [{"text": "The Z2", "answer_start": 259}], "is_impossible": false}, {"question": "Konrad Zuse was an engineer with what nationality?", "id": "56fde0be761e401900d28c20", "answers": [{"text": "German", "answer_start": 278}], "is_impossible": false}], "context": "Early digital computers were electromechanical; electric switches drove mechanical relays to perform the calculation. These devices had a low operating speed and were eventually superseded by much faster all-electric computers, originally using vacuum tubes. The Z2, created by German engineer Konrad Zuse in 1939, was one of the earliest examples of an electromechanical relay computer.", "allenNER": {"words": "Early digital computers were electromechanical ; electric switches drove mechanical relays to perform the calculation . These devices had a low operating speed and were eventually superseded by much faster all - electric computers , originally using vacuum tubes . The Z2 , created by German engineer Konrad Zuse in 1939 , was one of the earliest examples of an electromechanical relay computer .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When did Konrad Zuse create the Z3 computer?", "id": "56fde15e761e401900d28c25", "answers": [{"text": "1941", "answer_start": 3}], "is_impossible": false}, {"question": "What was the first automatic, digital, programmable computer created by Konrad Zuse?", "id": "56fde15e761e401900d28c26", "answers": [{"text": "the Z3", "answer_start": 51}], "is_impossible": false}, {"question": "How many relays did the Z3 contain?", "id": "56fde15e761e401900d28c27", "answers": [{"text": "2000", "answer_start": 173}], "is_impossible": false}, {"question": "What did the Z3 operate for a clock frequency?", "id": "56fde15e761e401900d28c28", "answers": [{"text": "about 5\u201310 Hz", "answer_start": 258}], "is_impossible": false}, {"question": "How many words of memory could be stored with the Z3?", "id": "56fde15e761e401900d28c29", "answers": [{"text": "64", "answer_start": 345}], "is_impossible": false}], "context": "In 1941, Zuse followed his earlier machine up with the Z3, the world's first working electromechanical programmable, fully automatic digital computer. The Z3 was built with 2000 relays, implementing a 22 bit word length that operated at a clock frequency of about 5\u201310 Hz. Program code was supplied on punched film while data could be stored in 64 words of memory or supplied from the keyboard. It was quite similar to modern machines in some respects, pioneering numerous advances such as floating point numbers. Replacement of the hard-to-implement decimal system (used in Charles Babbage's earlier design) by the simpler binary system meant that Zuse's machines were easier to build and potentially more reliable, given the technologies available at that time. The Z3 was Turing complete.", "allenNER": {"words": "In 1941 , Zuse followed his earlier machine up with the Z3 , the world 's first working electromechanical programmable , fully automatic digital computer . The Z3 was built with 2000 relays , implementing a 22 bit word length that operated at a clock frequency of about 5\u201310 Hz . Program code was supplied on punched film while data could be stored in 64 words of memory or supplied from the keyboard . It was quite similar to modern machines in some respects , pioneering numerous advances such as floating point numbers . Replacement of the hard - to - implement decimal system ( used in Charles Babbage 's earlier design ) by the simpler binary system meant that Zuse 's machines were easier to build and potentially more reliable , given the technologies available at that time . The Z3 was Turing complete .", "tags": "0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Where did the engineer Tommy Flowers work at during the 1930s?", "id": "56fde2cb761e401900d28c2f", "answers": [{"text": "Post Office Research Station", "answer_start": 203}], "is_impossible": false}, {"question": "In what city did Tommy Flowers work in the 1930s?", "id": "56fde2cb761e401900d28c30", "answers": [{"text": "London", "answer_start": 235}], "is_impossible": false}, {"question": "The Atanasoff-Berry computer was invented in what year?", "id": "56fde2cb761e401900d28c31", "answers": [{"text": "1942", "answer_start": 684}], "is_impossible": false}, {"question": "How many vacuum tubes did the Atanasoff-Berry computer use?", "id": "56fde2cb761e401900d28c32", "answers": [{"text": "about 300", "answer_start": 786}], "is_impossible": false}, {"question": "At what school did John Vincent Atansoff and Clifford E. Berry work?", "id": "56fde2cb761e401900d28c33", "answers": [{"text": "Iowa State University", "answer_start": 603}], "is_impossible": false}], "context": "Purely electronic circuit elements soon replaced their mechanical and electromechanical equivalents, at the same time that digital calculation replaced analog. The engineer Tommy Flowers, working at the Post Office Research Station in London in the 1930s, began to explore the possible use of electronics for the telephone exchange. Experimental equipment that he built in 1934 went into operation 5 years later, converting a portion of the telephone exchange network into an electronic data processing system, using thousands of vacuum tubes. In the US, John Vincent Atanasoff and Clifford E. Berry of Iowa State University developed and tested the Atanasoff\u2013Berry Computer (ABC) in 1942, the first \"automatic electronic digital computer\". This design was also all-electronic and used about 300 vacuum tubes, with capacitors fixed in a mechanically rotating drum for memory.", "allenNER": {"words": "Purely electronic circuit elements soon replaced their mechanical and electromechanical equivalents , at the same time that digital calculation replaced analog . The engineer Tommy Flowers , working at the Post Office Research Station in London in the 1930s , began to explore the possible use of electronics for the telephone exchange . Experimental equipment that he built in 1934 went into operation 5 years later , converting a portion of the telephone exchange network into an electronic data processing system , using thousands of vacuum tubes . In the US , John Vincent Atanasoff and Clifford E. Berry of Iowa State University developed and tested the Atanasoff \u2013 Berry Computer ( ABC ) in 1942 , the first \" automatic electronic digital computer \" . This design was also all - electronic and used about 300 vacuum tubes , with capacitors fixed in a mechanically rotating drum for memory .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who built the first Colossus in 1943?", "id": "56fde387761e401900d28c39", "answers": [{"text": "Flowers", "answer_start": 390}], "is_impossible": false}, {"question": "When was the Colossus sent to Bletchley Park?", "id": "56fde387761e401900d28c3a", "answers": [{"text": "18 January 1944", "answer_start": 620}], "is_impossible": false}, {"question": "Who achieved success at cracking secret German military communications during World War II?", "id": "56fde387761e401900d28c3b", "answers": [{"text": ", the British", "answer_start": 19}], "is_impossible": false}, {"question": "Where did the British crack secret German military communications during World War II?", "id": "56fde387761e401900d28c3c", "answers": [{"text": "Bletchley Park", "answer_start": 36}], "is_impossible": false}], "context": "During World War II, the British at Bletchley Park achieved a number of successes at breaking encrypted German military communications. The German encryption machine, Enigma, was first attacked with the help of the electro-mechanical bombes. To crack the more sophisticated German Lorenz SZ 40/42 machine, used for high-level Army communications, Max Newman and his colleagues commissioned Flowers to build the Colossus. He spent eleven months from early February 1943 designing and building the first Colossus. After a functional test in December 1943, Colossus was shipped to Bletchley Park, where it was delivered on 18 January 1944 and attacked its first message on 5 February.", "allenNER": {"words": "During World War II , the British at Bletchley Park achieved a number of successes at breaking encrypted German military communications . The German encryption machine , Enigma , was first attacked with the help of the electro - mechanical bombes . To crack the more sophisticated German Lorenz SZ 40/42 machine , used for high - level Army communications , Max Newman and his colleagues commissioned Flowers to build the Colossus . He spent eleven months from early February 1943 designing and building the first Colossus . After a functional test in December 1943 , Colossus was shipped to Bletchley Park , where it was delivered on 18 January 1944 and attacked its first message on 5 February .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0"}}, {"qas": [{"question": "What was the first electronic digital programmable computer in the world?", "id": "56fde3d4761e401900d28c41", "answers": [{"text": "Colossus", "answer_start": 0}], "is_impossible": false}, {"question": "How many vacuum tubes did the Colossus Mark I contain?", "id": "56fde3d4761e401900d28c42", "answers": [{"text": "1500 thermionic valves (tubes)", "answer_start": 400}], "is_impossible": false}, {"question": "How many tubes did Colossus Mark II contain?", "id": "56fde3d4761e401900d28c43", "answers": [{"text": "2400", "answer_start": 449}], "is_impossible": false}], "context": "Colossus was the world's first electronic digital programmable computer. It used a large number of valves (vacuum tubes). It had paper-tape input and was capable of being configured to perform a variety of boolean logical operations on its data, but it was not Turing-complete. Nine Mk II Colossi were built (The Mk I was converted to a Mk II making ten machines in total). Colossus Mark I contained 1500 thermionic valves (tubes), but Mark II with 2400 valves, was both 5 times faster and simpler to operate than Mark 1, greatly speeding the decoding process.", "allenNER": {"words": "Colossus was the world 's first electronic digital programmable computer . It used a large number of valves ( vacuum tubes ) . It had paper - tape input and was capable of being configured to perform a variety of boolean logical operations on its data , but it was not Turing - complete . Nine Mk II Colossi were built ( The Mk I was converted to a Mk II making ten machines in total ) . Colossus Mark I contained 1500 thermionic valves ( tubes ) , but Mark II with 2400 valves , was both 5 times faster and simpler to operate than Mark 1 , greatly speeding the decoding process .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The US-buils ENIAC stands for what?", "id": "56fde41819033b140034cd97", "answers": [{"text": "Electronic Numerical Integrator and Computer)", "answer_start": 20}], "is_impossible": false}, {"question": "What was the first electronic programmable computer built in the United States?", "id": "56fde41819033b140034cd98", "answers": [{"text": "ENIAC", "answer_start": 13}], "is_impossible": false}], "context": "The US-built ENIAC (Electronic Numerical Integrator and Computer) was the first electronic programmable computer built in the US. Although the ENIAC was similar to the Colossus it was much faster and more flexible. It was unambiguously a Turing-complete device and could compute any problem that would fit into its memory. Like the Colossus, a \"program\" on the ENIAC was defined by the states of its patch cables and switches, a far cry from the stored program electronic machines that came later. Once a program was written, it had to be mechanically set into the machine with manual resetting of plugs and switches.", "allenNER": {"words": "The US - built ENIAC ( Electronic Numerical Integrator and Computer ) was the first electronic programmable computer built in the US . Although the ENIAC was similar to the Colossus it was much faster and more flexible . It was unambiguously a Turing - complete device and could compute any problem that would fit into its memory . Like the Colossus , a \" program \" on the ENIAC was defined by the states of its patch cables and switches , a far cry from the stored program electronic machines that came later . Once a program was written , it had to be mechanically set into the machine with manual resetting of plugs and switches .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "How many times could it add or subtract a second?", "id": "56fde79819033b140034cd9b", "answers": [{"text": "5000", "answer_start": 128}], "is_impossible": false}, {"question": "What was the limit of its high speed memory?", "id": "56fde79819033b140034cd9c", "answers": [{"text": "ENIAC", "answer_start": 414}], "is_impossible": false}, {"question": "ENIAC was constructed by whom?", "id": "56fde79819033b140034cd9d", "answers": [{"text": "John Mauchly and J. Presper Eckert", "answer_start": 344}], "is_impossible": false}, {"question": "Where did John Mauchly and J. Presper Eckert build the ENIAC?", "id": "56fde79819033b140034cd9e", "answers": [{"text": "University of Pennsylvania", "answer_start": 386}], "is_impossible": false}, {"question": "When was ENIAC fully operational?", "id": "56fde79819033b140034cd9f", "answers": [{"text": "1945", "answer_start": 500}], "is_impossible": false}], "context": "It combined the high speed of electronics with the ability to be programmed for many complex problems. It could add or subtract 5000 times a second, a thousand times faster than any other machine. It also had modules to multiply, divide, and square root. High speed memory was limited to 20 words (about 80 bytes). Built under the direction of John Mauchly and J. Presper Eckert at the University of Pennsylvania, ENIAC's development and construction lasted from 1943 to full operation at the end of 1945. The machine was huge, weighing 30 tons, using 200 kilowatts of electric power and contained over 18,000 vacuum tubes, 1,500 relays, and hundreds of thousands of resistors, capacitors, and inductors.", "allenNER": {"words": "It combined the high speed of electronics with the ability to be programmed for many complex problems . It could add or subtract 5000 times a second , a thousand times faster than any other machine . It also had modules to multiply , divide , and square root . High speed memory was limited to 20 words ( about 80 bytes ) . Built under the direction of John Mauchly and J. Presper Eckert at the University of Pennsylvania , ENIAC 's development and construction lasted from 1943 to full operation at the end of 1945 . The machine was huge , weighing 30 tons , using 200 kilowatts of electric power and contained over 18,000 vacuum tubes , 1,500 relays , and hundreds of thousands of resistors , capacitors , and inductors .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The basis for the stored-program computer was written by whom?", "id": "56fde82419033b140034cda5", "answers": [{"text": "Alan Turing", "answer_start": 406}], "is_impossible": false}, {"question": "When did Alan Turing write his paper about the basis for the stored-program computer?", "id": "56fde82419033b140034cda6", "answers": [{"text": "1936", "answer_start": 425}], "is_impossible": false}, {"question": "When did Alan Turing join the National Physical Laboratory?", "id": "56fde82419033b140034cda7", "answers": [{"text": "1945", "answer_start": 440}], "is_impossible": false}, {"question": "The first outline for the report on the EDVAC was released by John von Neumann when?", "id": "56fde82419033b140034cda8", "answers": [{"text": "1945.", "answer_start": 776}], "is_impossible": false}, {"question": "Where did John von Neumann circulate the first draft of a report on the EDVAC?", "id": "56fde82419033b140034cda9", "answers": [{"text": "University of Pennsylvania", "answer_start": 688}], "is_impossible": false}], "context": "Early computing machines had fixed programs. Changing its function required the re-wiring and re-structuring of the machine. With the proposal of the stored-program computer this changed. A stored-program computer includes by design an instruction set and can store in memory a set of instructions (a program) that details the computation. The theoretical basis for the stored-program computer was laid by Alan Turing in his 1936 paper. In 1945 Turing joined the National Physical Laboratory and began work on developing an electronic stored-program digital computer. His 1945 report \u2018Proposed Electronic Calculator\u2019 was the first specification for such a device. John von Neumann at the University of Pennsylvania, also circulated his First Draft of a Report on the EDVAC in 1945.", "allenNER": {"words": "Early computing machines had fixed programs . Changing its function required the re - wiring and re - structuring of the machine . With the proposal of the stored - program computer this changed . A stored - program computer includes by design an instruction set and can store in memory a set of instructions ( a program ) that details the computation . The theoretical basis for the stored - program computer was laid by Alan Turing in his 1936 paper . In 1945 Turing joined the National Physical Laboratory and began work on developing an electronic stored - program digital computer . His 1945 report \u2018 Proposed Electronic Calculator\u2019 was the first specification for such a device . John von Neumann at the University of Pennsylvania , also circulated his First Draft of a Report on the EDVAC in 1945 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"}}, {"qas": [{"question": "What was the nickname of the Manchester Small-Scale Experimental Machine?", "id": "56fde89119033b140034cdaf", "answers": [{"text": "Baby", "answer_start": 59}], "is_impossible": false}, {"question": "What was the first stored-program computer in the world?", "id": "56fde89119033b140034cdb0", "answers": [{"text": "The Manchester Small-Scale Experimental Machine", "answer_start": 0}], "is_impossible": false}, {"question": "Where was the Manchester Small-Scale Experimental Machine built?", "id": "56fde89119033b140034cdb1", "answers": [{"text": "Victoria University of Manchester", "answer_start": 132}], "is_impossible": false}, {"question": "Who built the Manchester Small-Scale Experimental Machine?", "id": "56fde89119033b140034cdb2", "answers": [{"text": "Frederic C. Williams, Tom Kilburn and Geoff Tootill", "answer_start": 169}], "is_impossible": false}, {"question": "When did the Manchester Small-Scale Experimental Machine run its first program?", "id": "56fde89119033b140034cdb3", "answers": [{"text": "21 June 1948", "answer_start": 251}], "is_impossible": false}], "context": "The Manchester Small-Scale Experimental Machine, nicknamed Baby, was the world's first stored-program computer. It was built at the Victoria University of Manchester by Frederic C. Williams, Tom Kilburn and Geoff Tootill, and ran its first program on 21 June 1948. It was designed as a testbed for the Williams tube the first random-access digital storage device. Although the computer was considered \"small and primitive\" by the standards of its time, it was the first working machine to contain all of the elements essential to a modern electronic computer. As soon as the SSEM had demonstrated the feasibility of its design, a project was initiated at the university to develop it into a more usable computer, the Manchester Mark 1.", "allenNER": {"words": "The Manchester Small - Scale Experimental Machine , nicknamed Baby , was the world 's first stored - program computer . It was built at the Victoria University of Manchester by Frederic C. Williams , Tom Kilburn and Geoff Tootill , and ran its first program on 21 June 1948 . It was designed as a testbed for the Williams tube the first random - access digital storage device . Although the computer was considered \" small and primitive \" by the standards of its time , it was the first working machine to contain all of the elements essential to a modern electronic computer . As soon as the SSEM had demonstrated the feasibility of its design , a project was initiated at the university to develop it into a more usable computer , the Manchester Mark 1 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"}}, {"qas": [{"question": "What was the prototype for the Ferranti Mark 1?", "id": "56fde8fe19033b140034cdb9", "answers": [{"text": "The Mark 1", "answer_start": 0}], "is_impossible": false}, {"question": "What was the first available computer for the public?", "id": "56fde8fe19033b140034cdba", "answers": [{"text": "Ferranti Mark 1", "answer_start": 56}], "is_impossible": false}, {"question": "When was the Ferranti Mark 1 built?", "id": "56fde8fe19033b140034cdbb", "answers": [{"text": "1951", "answer_start": 220}], "is_impossible": false}, {"question": "Where was the Ferranti Mark 1 sent to after it was developed?", "id": "56fde8fe19033b140034cdbc", "answers": [{"text": "University of Manchester", "answer_start": 183}], "is_impossible": false}, {"question": "When was the LEO 1 computer first operational?", "id": "56fde8fe19033b140034cdbd", "answers": [{"text": "April 1951", "answer_start": 547}], "is_impossible": false}], "context": "The Mark 1 in turn quickly became the prototype for the Ferranti Mark 1, the world's first commercially available general-purpose computer. Built by Ferranti, it was delivered to the University of Manchester in February 1951. At least seven of these later machines were delivered between 1953 and 1957, one of them to Shell labs in Amsterdam. In October 1947, the directors of British catering company J. Lyons & Company decided to take an active role in promoting the commercial development of computers. The LEO I computer became operational in April 1951  and ran the world's first regular routine office computer job.", "allenNER": {"words": "The Mark 1 in turn quickly became the prototype for the Ferranti Mark 1 , the world 's first commercially available general - purpose computer . Built by Ferranti , it was delivered to the University of Manchester in February 1951 . At least seven of these later machines were delivered between 1953 and 1957 , one of them to Shell labs in Amsterdam . In October 1947 , the directors of British catering company J. Lyons & Company decided to take an active role in promoting the commercial development of computers . The LEO I computer became operational in April 1951 and ran the world 's first regular routine office computer job .", "tags": "0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When was the bipolar transistor created?", "id": "56fde92d761e401900d28c47", "answers": [{"text": "1947.", "answer_start": 39}], "is_impossible": false}, {"question": "When did transistors start replacing vacuum tubes in computers?", "id": "56fde92d761e401900d28c48", "answers": [{"text": "1955", "answer_start": 50}], "is_impossible": false}], "context": "The bipolar transistor was invented in 1947. From 1955 onwards transistors replaced vacuum tubes in computer designs, giving rise to the \"second generation\" of computers. Compared to vacuum tubes, transistors have many advantages: they are smaller, and require less power than vacuum tubes, so give off less heat. Silicon junction transistors were much more reliable than vacuum tubes and had longer, indefinite, service life. Transistorized computers could contain tens of thousands of binary logic circuits in a relatively compact space.", "allenNER": {"words": "The bipolar transistor was invented in 1947 . From 1955 onwards transistors replaced vacuum tubes in computer designs , giving rise to the \" second generation \" of computers . Compared to vacuum tubes , transistors have many advantages : they are smaller , and require less power than vacuum tubes , so give off less heat . Silicon junction transistors were much more reliable than vacuum tubes and had longer , indefinite , service life . Transistorized computers could contain tens of thousands of binary logic circuits in a relatively compact space .", "tags": "0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "At the University of Manchester, who oversaw the building of a computer using transistors instead of valves?", "id": "56fdea0919033b140034cdc3", "answers": [{"text": "Tom Kilburn", "answer_start": 64}], "is_impossible": false}, {"question": "The first transistorised computer was operational in what year?", "id": "56fdea0919033b140034cdc4", "answers": [{"text": "1953", "answer_start": 245}], "is_impossible": false}, {"question": "What did the machine use to generate its clock waveforms?", "id": "56fdea0919033b140034cdc5", "answers": [{"text": "valves", "answer_start": 344}], "is_impossible": false}, {"question": "Who built the Harwell CADET?", "id": "56fdea0919033b140034cdc6", "answers": [{"text": "electronics division of the Atomic Energy Research Establishment at Harwell", "answer_start": 584}], "is_impossible": false}, {"question": "In what year was the Harwell CADET built?", "id": "56fdea0919033b140034cdc7", "answers": [{"text": "1955", "answer_start": 565}], "is_impossible": false}], "context": "At the University of Manchester, a team under the leadership of Tom Kilburn designed and built a machine using the newly developed transistors instead of valves. Their first transistorised computer and the first in the world, was operational by 1953, and a second version was completed there in April 1955. However, the machine did make use of valves to generate its 125 kHz clock waveforms and in the circuitry to read and write on its magnetic drum memory, so it was not the first completely transistorized computer. That distinction goes to the Harwell CADET of 1955, built by the electronics division of the Atomic Energy Research Establishment at Harwell.", "allenNER": {"words": "At the University of Manchester , a team under the leadership of Tom Kilburn designed and built a machine using the newly developed transistors instead of valves . Their first transistorised computer and the first in the world , was operational by 1953 , and a second version was completed there in April 1955 . However , the machine did make use of valves to generate its 125 kHz clock waveforms and in the circuitry to read and write on its magnetic drum memory , so it was not the first completely transistorized computer . That distinction goes to the Harwell CADET of 1955 , built by the electronics division of the Atomic Energy Research Establishment at Harwell .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The integrated circuit of a computer was the idea of whom?", "id": "56fdea41761e401900d28c4b", "answers": [{"text": "Geoffrey W.A. Dummer", "answer_start": 236}], "is_impossible": false}, {"question": "Where did Geoffrey W.A. Dummer work at?", "id": "56fdea41761e401900d28c4c", "answers": [{"text": "Royal Radar Establishment of the Ministry of Defence", "answer_start": 182}], "is_impossible": false}], "context": "The next great advance in computing power came with the advent of the integrated circuit. The idea of the integrated circuit was first conceived by a radar scientist working for the Royal Radar Establishment of the Ministry of Defence, Geoffrey W.A. Dummer. Dummer presented the first public description of an integrated circuit at the Symposium on Progress in Quality Electronic Components in Washington, D.C. on 7 May 1952.", "allenNER": {"words": "The next great advance in computing power came with the advent of the integrated circuit . The idea of the integrated circuit was first conceived by a radar scientist working for the Royal Radar Establishment of the Ministry of Defence , Geoffrey W.A. Dummer . Dummer presented the first public description of an integrated circuit at the Symposium on Progress in Quality Electronic Components in Washington , D.C. on 7 May 1952 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0"}}, {"qas": [{"question": "Where created the first practical integrated circuits?", "id": "56fdeafd19033b140034cdcd", "answers": [{"text": "Jack Kilby at Texas Instruments and Robert Noyce at Fairchild Semiconductor.", "answer_start": 41}], "is_impossible": false}, {"question": "Where did Jack Kilby work at when he created the first IC?", "id": "56fdeafd19033b140034cdce", "answers": [{"text": "Texas Instruments", "answer_start": 55}], "is_impossible": false}, {"question": "When was the first functional IC demonstrated?", "id": "56fdeafd19033b140034cdcf", "answers": [{"text": "12 September 1958.", "answer_start": 266}], "is_impossible": false}, {"question": "What was Kilby's IC made of?", "id": "56fdeafd19033b140034cdd0", "answers": [{"text": "germanium", "answer_start": 732}], "is_impossible": false}, {"question": "Noyce's IC was made up of what material?", "id": "56fdeafd19033b140034cdd1", "answers": [{"text": "silicon", "answer_start": 690}], "is_impossible": false}], "context": "The first practical ICs were invented by Jack Kilby at Texas Instruments and Robert Noyce at Fairchild Semiconductor. Kilby recorded his initial ideas concerning the integrated circuit in July 1958, successfully demonstrating the first working integrated example on 12 September 1958. In his patent application of 6 February 1959, Kilby described his new device as \"a body of semiconductor material ... wherein all the components of the electronic circuit are completely integrated\". Noyce also came up with his own idea of an integrated circuit half a year later than Kilby. His chip solved many practical problems that Kilby's had not. Produced at Fairchild Semiconductor, it was made of silicon, whereas Kilby's chip was made of germanium.", "allenNER": {"words": "The first practical ICs were invented by Jack Kilby at Texas Instruments and Robert Noyce at Fairchild Semiconductor . Kilby recorded his initial ideas concerning the integrated circuit in July 1958 , successfully demonstrating the first working integrated example on 12 September 1958 . In his patent application of 6 February 1959 , Kilby described his new device as \" a body of semiconductor material ... wherein all the components of the electronic circuit are completely integrated \" . Noyce also came up with his own idea of an integrated circuit half a year later than Kilby . His chip solved many practical problems that Kilby 's had not . Produced at Fairchild Semiconductor , it was made of silicon , whereas Kilby 's chip was made of germanium .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What was the name of the first single-chip microprocessor?", "id": "56fdeb6419033b140034cdd7", "answers": [{"text": "Intel 4004", "answer_start": 387}], "is_impossible": false}, {"question": "Who created the Intel 4004 microprocessor?", "id": "56fdeb6419033b140034cdd8", "answers": [{"text": "Ted Hoff, Federico Faggin, and Stanley Mazor", "answer_start": 424}], "is_impossible": false}, {"question": "Where did Ted Hoff, Federico Faggin, and Stanley Mazor work at?", "id": "56fdeb6419033b140034cdd9", "answers": [{"text": "Intel.", "answer_start": 472}], "is_impossible": false}], "context": "This new development heralded an explosion in the commercial and personal use of computers and led to the invention of the microprocessor. While the subject of exactly which device was the first microprocessor is contentious, partly due to lack of agreement on the exact definition of the term \"microprocessor\", it is largely undisputed that the first single-chip microprocessor was the Intel 4004, designed and realized by Ted Hoff, Federico Faggin, and Stanley Mazor at Intel.", "allenNER": {"words": "This new development heralded an explosion in the commercial and personal use of computers and led to the invention of the microprocessor . While the subject of exactly which device was the first microprocessor is contentious , partly due to lack of agreement on the exact definition of the term \" microprocessor \" , it is largely undisputed that the first single - chip microprocessor was the Intel 4004 , designed and realized by Ted Hoff , Federico Faggin , and Stanley Mazor at Intel .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Computing resources that are created in cell phones are called what?", "id": "56fdebbf761e401900d28c4f", "answers": [{"text": "smartphones", "answer_start": 342}], "is_impossible": false}, {"question": "How many tablets were sold in 2Q 2013?", "id": "56fdebbf761e401900d28c50", "answers": [{"text": "237 million devices", "answer_start": 522}], "is_impossible": false}], "context": "With the continued miniaturization of computing resources, and advancements in portable battery life, portable computers grew in popularity in the 2000s. The same developments that spurred the growth of laptop computers and other portable computers allowed manufacturers to integrate computing resources into cellular phones. These so-called smartphones and tablets run on a variety of operating systems and have become the dominant computing device on the market, with manufacturers reporting having shipped an estimated 237 million devices in 2Q 2013.", "allenNER": {"words": "With the continued miniaturization of computing resources , and advancements in portable battery life , portable computers grew in popularity in the 2000s . The same developments that spurred the growth of laptop computers and other portable computers allowed manufacturers to integrate computing resources into cellular phones . These so - called smartphones and tablets run on a variety of operating systems and have become the dominant computing device on the market , with manufacturers reporting having shipped an estimated 237 million devices in 2Q 2013 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0"}}, {"qas": [{"question": "Billions of instructions per second are called what in computer terms?", "id": "56fdec0119033b140034cddd", "answers": [{"text": "(gigaflops)", "answer_start": 257}], "is_impossible": false}], "context": "In practical terms, a computer program may be just a few instructions or extend to many millions of instructions, as do the programs for word processors and web browsers for example. A typical modern computer can execute billions of instructions per second (gigaflops) and rarely makes a mistake over many years of operation. Large computer programs consisting of several million instructions may take teams of programmers years to write, and due to the complexity of the task almost certainly contain errors.", "allenNER": {"words": "In practical terms , a computer program may be just a few instructions or extend to many millions of instructions , as do the programs for word processors and web browsers for example . A typical modern computer can execute billions of instructions per second ( gigaflops ) and rarely makes a mistake over many years of operation . Large computer programs consisting of several million instructions may take teams of programmers years to write , and due to the complexity of the task almost certainly contain errors .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "When a computer goes back and repeats instructions of a program over until an internal condition is met is called what?", "id": "56fdecd819033b140034cddf", "answers": [{"text": "the flow of control", "answer_start": 399}], "is_impossible": false}, {"question": "What allows a computer to perform repetitive tasks without human intervening?", "id": "56fdecd819033b140034cde0", "answers": [{"text": "the flow of control", "answer_start": 399}], "is_impossible": false}], "context": "Program execution might be likened to reading a book. While a person will normally read each word and line in sequence, they may at times jump back to an earlier place in the text or skip sections that are not of interest. Similarly, a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met. This is called the flow of control within the program and it is what allows the computer to perform tasks repeatedly without human intervention.", "allenNER": {"words": "Program execution might be likened to reading a book . While a person will normally read each word and line in sequence , they may at times jump back to an earlier place in the text or skip sections that are not of interest . Similarly , a computer may sometimes go back and repeat the instructions in some section of the program over and over again until some internal condition is met . This is called the flow of control within the program and it is what allows the computer to perform tasks repeatedly without human intervention .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Which computer is the Harvard architecture modeled after?", "id": "56fdedfb761e401900d28c53", "answers": [{"text": "Harvard Mark I computer", "answer_start": 1165}], "is_impossible": false}, {"question": "A computer that stores its program in memory and kept separate from the data is called what?", "id": "56fdedfb761e401900d28c54", "answers": [{"text": "the Harvard architecture", "answer_start": 1130}], "is_impossible": false}], "context": "In most computers, individual instructions are stored as machine code with each instruction being given a unique number (its operation code or opcode for short). The command to add two numbers together would have one opcode; the command to multiply them would have a different opcode, and so on. The simplest computers are able to perform any of a handful of different instructions; the more complex computers have several hundred to choose from, each with a unique numerical code. Since the computer's memory is able to store numbers, it can also store the instruction codes. This leads to the important fact that entire programs (which are just lists of these instructions) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data. The fundamental concept of storing programs in the computer's memory alongside the data they operate on is the crux of the von Neumann, or stored program[citation needed], architecture. In some cases, a computer might store some or all of its program in memory that is kept separate from the data it operates on. This is called the Harvard architecture after the Harvard Mark I computer. Modern von Neumann computers display some traits of the Harvard architecture in their designs, such as in CPU caches.", "allenNER": {"words": "In most computers , individual instructions are stored as machine code with each instruction being given a unique number ( its operation code or opcode for short ) . The command to add two numbers together would have one opcode ; the command to multiply them would have a different opcode , and so on . The simplest computers are able to perform any of a handful of different instructions ; the more complex computers have several hundred to choose from , each with a unique numerical code . Since the computer 's memory is able to store numbers , it can also store the instruction codes . This leads to the important fact that entire programs ( which are just lists of these instructions ) can be represented as lists of numbers and can themselves be manipulated inside the computer in the same way as numeric data . The fundamental concept of storing programs in the computer 's memory alongside the data they operate on is the crux of the von Neumann , or stored program[citation needed ] , architecture . In some cases , a computer might store some or all of its program in memory that is kept separate from the data it operates on . This is called the Harvard architecture after the Harvard Mark I computer . Modern von Neumann computers display some traits of the Harvard architecture in their designs , such as in CPU caches .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A computer's assembly language is known as what?", "id": "56fdee67761e401900d28c57", "answers": [{"text": "basic instruction can be given a short name that is indicative of its function", "answer_start": 278}], "is_impossible": false}, {"question": "Programs that convert assembly language into machine language are called what?", "id": "56fdee67761e401900d28c58", "answers": [{"text": "an assembler.", "answer_start": 662}], "is_impossible": false}, {"question": "Computer programs that are long lists of numbers are called what?", "id": "56fdee67761e401900d28c59", "answers": [{"text": "machine language", "answer_start": 74}], "is_impossible": false}], "context": "While it is possible to write computer programs as long lists of numbers (machine language) and while this technique was used with many early computers, it is extremely tedious and potentially error-prone to do so in practice, especially for complicated programs. Instead, each basic instruction can be given a short name that is indicative of its function and easy to remember \u2013 a mnemonic such as ADD, SUB, MULT or JUMP. These mnemonics are collectively known as a computer's assembly language. Converting programs written in assembly language into something the computer can actually understand (machine language) is usually done by a computer program called an assembler.", "allenNER": {"words": "While it is possible to write computer programs as long lists of numbers ( machine language ) and while this technique was used with many early computers , it is extremely tedious and potentially error - prone to do so in practice , especially for complicated programs . Instead , each basic instruction can be given a short name that is indicative of its function and easy to remember \u2013 a mnemonic such as ADD , SUB , MULT or JUMP . These mnemonics are collectively known as a computer 's assembly language . Converting programs written in assembly language into something the computer can actually understand ( machine language ) is usually done by a computer program called an assembler .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Programming languages are translated into machine code by what?", "id": "56fdeebd19033b140034cde3", "answers": [{"text": "a compiler or an assembler", "answer_start": 322}], "is_impossible": false}, {"question": "Programming languages are translated at run time by what?", "id": "56fdeebd19033b140034cde4", "answers": [{"text": "an interpreter", "answer_start": 405}], "is_impossible": false}], "context": "Programming languages provide various ways of specifying programs for computers to run. Unlike natural languages, programming languages are designed to permit no ambiguity and to be concise. They are purely written languages and are often difficult to read aloud. They are generally either translated into machine code by a compiler or an assembler before being run, or translated directly at run time by an interpreter. Sometimes programs are executed by a hybrid method of the two techniques.", "allenNER": {"words": "Programming languages provide various ways of specifying programs for computers to run . Unlike natural languages , programming languages are designed to permit no ambiguity and to be concise . They are purely written languages and are often difficult to read aloud . They are generally either translated into machine code by a compiler or an assembler before being run , or translated directly at run time by an interpreter . Sometimes programs are executed by a hybrid method of the two techniques .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0"}}, {"qas": [{"question": "An ARM architecture computer can be found in what?", "id": "56fdeee819033b140034cde7", "answers": [{"text": "a PDA or a hand-held videogame", "answer_start": 239}], "is_impossible": false}], "context": "Machine languages and the assembly languages that represent them (collectively termed low-level programming languages) tend to be unique to a particular type of computer. For instance, an ARM architecture computer (such as may be found in a PDA or a hand-held videogame) cannot understand the machine language of an Intel Pentium or the AMD Athlon 64 computer that might be in a PC.", "allenNER": {"words": "Machine languages and the assembly languages that represent them ( collectively termed low - level programming languages ) tend to be unique to a particular type of computer . For instance , an ARM architecture computer ( such as may be found in a PDA or a hand - held videogame ) can not understand the machine language of an Intel Pentium or the AMD Athlon 64 computer that might be in a PC .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Assembly language that is translated into machine language is done by what type of computer?", "id": "56fdefbe19033b140034cde9", "answers": [{"text": "a compiler", "answer_start": 525}], "is_impossible": false}], "context": "Though considerably easier than in machine language, writing long programs in assembly language is often difficult and is also error prone. Therefore, most practical programs are written in more abstract high-level programming languages that are able to express the needs of the programmer more conveniently (and thereby help reduce programmer error). High level languages are usually \"compiled\" into machine language (or sometimes into assembly language and then into machine language) using another computer program called a compiler. High level languages are less related to the workings of the target computer than assembly language, and more related to the language and structure of the problem(s) to be solved by the final program. It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer. This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and various video game consoles.", "allenNER": {"words": "Though considerably easier than in machine language , writing long programs in assembly language is often difficult and is also error prone . Therefore , most practical programs are written in more abstract high - level programming languages that are able to express the needs of the programmer more conveniently ( and thereby help reduce programmer error ) . High level languages are usually \" compiled \" into machine language ( or sometimes into assembly language and then into machine language ) using another computer program called a compiler . High level languages are less related to the workings of the target computer than assembly language , and more related to the language and structure of the problem(s ) to be solved by the final program . It is therefore often possible to use different compilers to translate the same high level language program into the machine language of many different types of computer . This is part of the means by which software like video games may be made available for different computer architectures such as personal computers and various video game consoles .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "An example of a 4GL is what?", "id": "56fdf01419033b140034cdeb", "answers": [{"text": "SQL", "answer_start": 193}], "is_impossible": false}, {"question": "What is the pro of 4GL over a 3G language?", "id": "56fdf01419033b140034cdec", "answers": [{"text": "provides ways to obtain information without requiring the direct help of a programmer", "answer_start": 88}], "is_impossible": false}], "context": "These 4G languages are less procedural than 3G languages. The benefit of 4GL is that it provides ways to obtain information without requiring the direct help of a programmer. Example of 4GL is SQL.", "allenNER": {"words": "These 4 G languages are less procedural than 3 G languages . The benefit of 4GL is that it provides ways to obtain information without requiring the direct help of a programmer . Example of 4GL is SQL .", "tags": "0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Another name for errors in programs are called what?", "id": "56fdf2d419033b140034cdef", "answers": [{"text": "\"bugs", "answer_start": 39}], "is_impossible": false}, {"question": "Bugs are usually the fault of whom or what?", "id": "56fdf2d419033b140034cdf0", "answers": [{"text": "programmer error or an oversight made in the program's design", "answer_start": 666}], "is_impossible": false}], "context": "Errors in computer programs are called \"bugs\". They may be benign and not affect the usefulness of the program, or have only subtle effects. But in some cases, they may cause the program or the entire system to \"hang\", becoming unresponsive to input such as mouse clicks or keystrokes, to completely fail, or to crash. Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing an exploit, code designed to take advantage of a bug and disrupt a computer's proper execution. Bugs are usually not the fault of the computer. Since computers merely execute the instructions they are given, bugs are nearly always the result of programmer error or an oversight made in the program's design.", "allenNER": {"words": "Errors in computer programs are called \" bugs \" . They may be benign and not affect the usefulness of the program , or have only subtle effects . But in some cases , they may cause the program or the entire system to \" hang \" , becoming unresponsive to input such as mouse clicks or keystrokes , to completely fail , or to crash . Otherwise benign bugs may sometimes be harnessed for malicious intent by an unscrupulous user writing an exploit , code designed to take advantage of a bug and disrupt a computer 's proper execution . Bugs are usually not the fault of the computer . Since computers merely execute the instructions they are given , bugs are nearly always the result of programmer error or an oversight made in the program 's design .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Who was the developer of the first compier?", "id": "56fdf33b19033b140034cdf3", "answers": [{"text": "Admiral Grace Hopper", "answer_start": 0}], "is_impossible": false}, {"question": "Who first coined the term \"bugs\"?", "id": "56fdf33b19033b140034cdf4", "answers": [{"text": "Admiral Grace Hopper", "answer_start": 0}], "is_impossible": false}, {"question": "What type of creature shorted a relay of Grace Hopper's computer?", "id": "56fdf33b19033b140034cdf5", "answers": [{"text": "moth", "answer_start": 166}], "is_impossible": false}, {"question": "What type of computer of Grace Hopper's was shorted by a moth?", "id": "56fdf33b19033b140034cdf6", "answers": [{"text": "Harvard Mark II", "answer_start": 205}], "is_impossible": false}, {"question": "When was Grace Hopper's Hardvard Mark II shorted by a moth?", "id": "56fdf33b19033b140034cdf7", "answers": [{"text": "September 1947", "answer_start": 233}], "is_impossible": false}], "context": "Admiral Grace Hopper, an American computer scientist and developer of the first compiler, is credited for having first used the term \"bugs\" in computing after a dead moth was found shorting a relay in the Harvard Mark II computer in September 1947.", "allenNER": {"words": "Admiral Grace Hopper , an American computer scientist and developer of the first compiler , is credited for having first used the term \" bugs \" in computing after a dead moth was found shorting a relay in the Harvard Mark II computer in September 1947 .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"}}, {"qas": [{"question": "The ALU of a computer stands for what?", "id": "56fdf3c119033b140034cdfd", "answers": [{"text": "arithmetic logic", "answer_start": 57}], "is_impossible": false}, {"question": "Input and output devices are known as what term?", "id": "56fdf3c119033b140034cdfe", "answers": [{"text": "I/O", "answer_start": 170}], "is_impossible": false}, {"question": "Besides the ALU, input and output devices, what are the other two main components of a computer?", "id": "56fdf3c119033b140034cdff", "answers": [{"text": "the control unit, the memory", "answer_start": 86}], "is_impossible": false}], "context": "A general purpose computer has four main components: the arithmetic logic unit (ALU), the control unit, the memory, and the input and output devices (collectively termed I/O). These parts are interconnected by buses, often made of groups of wires.", "allenNER": {"words": "A general purpose computer has four main components : the arithmetic logic unit ( ALU ) , the control unit , the memory , and the input and output devices ( collectively termed I / O ) . These parts are interconnected by buses , often made of groups of wires .", "tags": "0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A circuit in a computer part represents what?", "id": "56fdf4c6761e401900d28c5d", "answers": [{"text": "a bit (binary digit) of information", "answer_start": 171}], "is_impossible": false}, {"question": "In positive logic representation a \"1\" represents when a circuit is what?", "id": "56fdf4c6761e401900d28c5e", "answers": [{"text": "on", "answer_start": 235}], "is_impossible": false}, {"question": "In positive logic representation a \"0\" represents when a circuit is what?", "id": "56fdf4c6761e401900d28c5f", "answers": [{"text": "off", "answer_start": 268}], "is_impossible": false}], "context": "Inside each of these parts are thousands to trillions of small electrical circuits which can be turned off or on by means of an electronic switch. Each circuit represents a bit (binary digit) of information so that when the circuit is on it represents a \"1\", and when off it represents a \"0\" (in positive logic representation). The circuits are arranged in logic gates so that one or more of the circuits may control the state of one or more of the other circuits.", "allenNER": {"words": "Inside each of these parts are thousands to trillions of small electrical circuits which can be turned off or on by means of an electronic switch . Each circuit represents a bit ( binary digit ) of information so that when the circuit is on it represents a \" 1 \" , and when off it represents a \" 0 \" ( in positive logic representation ) . The circuits are arranged in logic gates so that one or more of the circuits may control the state of one or more of the other circuits .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What are other names for a control unit for a computer?", "id": "56fdf50019033b140034ce03", "answers": [{"text": "a control system or central controller)", "answer_start": 31}], "is_impossible": false}, {"question": "Reading and interpreting from a control unit is called doing what?", "id": "56fdf50019033b140034ce04", "answers": [{"text": "(decodes", "answer_start": 138}], "is_impossible": false}], "context": "The control unit (often called a control system or central controller) manages the computer's various components; it reads and interprets (decodes) the program instructions, transforming them into control signals that activate other parts of the computer. Control systems in advanced computers may change the order of execution of some instructions to improve performance.", "allenNER": {"words": "The control unit ( often called a control system or central controller ) manages the computer 's various components ; it reads and interprets ( decodes ) the program instructions , transforming them into control signals that activate other parts of the computer . Control systems in advanced computers may change the order of execution of some instructions to improve performance .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A special memory cell of a CPU is called what?", "id": "56fdf56519033b140034ce07", "answers": [{"text": "a register", "answer_start": 82}], "is_impossible": false}, {"question": "A register of a CPU keeps track of what?", "id": "56fdf56519033b140034ce08", "answers": [{"text": "which location in memory the next instruction is to be read from", "answer_start": 114}], "is_impossible": false}, {"question": "What is a component that all CPUs have?", "id": "56fdf56519033b140034ce09", "answers": [{"text": "the program counter", "answer_start": 38}], "is_impossible": false}], "context": "A key component common to all CPUs is the program counter, a special memory cell (a register) that keeps track of which location in memory the next instruction is to be read from.", "allenNER": {"words": "A key component common to all CPUs is the program counter , a special memory cell ( a register ) that keeps track of which location in memory the next instruction is to be read from .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "In what part can the program counter be changed by calculations?", "id": "56fdf63d19033b140034ce0d", "answers": [{"text": "the ALU", "answer_start": 120}], "is_impossible": false}, {"question": "Instructions that change the program counter are called what?", "id": "56fdf63d19033b140034ce0e", "answers": [{"text": "\"jumps\"", "answer_start": 324}], "is_impossible": false}, {"question": "Loops are defined as what?", "id": "56fdf63d19033b140034ce0f", "answers": [{"text": "instructions that are repeated by the computer)", "answer_start": 353}], "is_impossible": false}], "context": "Since the program counter is (conceptually) just another set of memory cells, it can be changed by calculations done in the ALU. Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program. Instructions that modify the program counter are often known as \"jumps\" and allow for loops (instructions that are repeated by the computer) and often conditional instruction execution (both examples of control flow).", "allenNER": {"words": "Since the program counter is ( conceptually ) just another set of memory cells , it can be changed by calculations done in the ALU . Adding 100 to the program counter would cause the next instruction to be read from a place 100 locations further down the program . Instructions that modify the program counter are often known as \" jumps \" and allow for loops ( instructions that are repeated by the computer ) and often conditional instruction execution ( both examples of control flow ) .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "In some CPU designs there is tinier computer called what?", "id": "56fdf66f761e401900d28c63", "answers": [{"text": "microsequencer", "answer_start": 225}], "is_impossible": false}, {"question": "A microsequencer can be found in what other computer component?", "id": "56fdf66f761e401900d28c64", "answers": [{"text": "CPU", "answer_start": 165}], "is_impossible": false}], "context": "The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program, and indeed, in some more complex CPU designs, there is another yet smaller computer called a microsequencer, which runs a microcode program that causes all of these events to happen.", "allenNER": {"words": "The sequence of operations that the control unit goes through to process an instruction is in itself like a short computer program , and indeed , in some more complex CPU designs , there is another yet smaller computer called a microsequencer , which runs a microcode program that causes all of these events to happen .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The CPU is an abbreviation for what?", "id": "56fdf6df761e401900d28c67", "answers": [{"text": "central processing unit", "answer_start": 65}], "is_impossible": false}, {"question": "What 3 parts make up the CPU?", "id": "56fdf6df761e401900d28c68", "answers": [{"text": "The control unit, ALU, and registers", "answer_start": 0}], "is_impossible": false}, {"question": "CPUs that are constructed on a single integrated circuit are called what?", "id": "56fdf6df761e401900d28c69", "answers": [{"text": "a microprocessor", "answer_start": 248}], "is_impossible": false}, {"question": "Since when have CPUs been constructed with a microprocessor?", "id": "56fdf6df761e401900d28c6a", "answers": [{"text": "mid-1970s", "answer_start": 163}], "is_impossible": false}], "context": "The control unit, ALU, and registers are collectively known as a central processing unit (CPU). Early CPUs were composed of many separate components but since the mid-1970s CPUs have typically been constructed on a single integrated circuit called a microprocessor.", "allenNER": {"words": "The control unit , ALU , and registers are collectively known as a central processing unit ( CPU ) . Early CPUs were composed of many separate components but since the mid-1970s CPUs have typically been constructed on a single integrated circuit called a microprocessor .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Some trigonometry functions are what?", "id": "56fdf722761e401900d28c6f", "answers": [{"text": "sine, cosine,", "answer_start": 182}], "is_impossible": false}, {"question": "The term for whole numbers is what?", "id": "56fdf722761e401900d28c70", "answers": [{"text": "(integers", "answer_start": 259}], "is_impossible": false}], "context": "The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction, or might include multiplication, division, trigonometry functions such as sine, cosine, etc., and square roots. Some can only operate on whole numbers (integers) whilst others use floating point to represent real numbers, albeit with limited precision. However, any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform. Therefore, any computer can be programmed to perform any arithmetic operation\u2014although it will take more time to do so if its ALU does not directly support the operation. An ALU may also compare numbers and return boolean truth values (true or false) depending on whether one is equal to, greater than or less than the other (\"is 64 greater than 65?\").", "allenNER": {"words": "The set of arithmetic operations that a particular ALU supports may be limited to addition and subtraction , or might include multiplication , division , trigonometry functions such as sine , cosine , etc . , and square roots . Some can only operate on whole numbers ( integers ) whilst others use floating point to represent real numbers , albeit with limited precision . However , any computer that is capable of performing just the simplest operations can be programmed to break down the more complex operations into simple steps that it can perform . Therefore , any computer can be programmed to perform any arithmetic operation \u2014 although it will take more time to do so if its ALU does not directly support the operation . An ALU may also compare numbers and return boolean truth values ( true or false ) depending on whether one is equal to , greater than or less than the other ( \" is 64 greater than 65 ? \" ) .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0"}}, {"qas": [{"question": "Boolean logic consists of what?", "id": "56fdf73719033b140034ce13", "answers": [{"text": "AND, OR, XOR, and NOT", "answer_start": 40}], "is_impossible": false}], "context": "Logic operations involve Boolean logic: AND, OR, XOR, and NOT. These can be useful for creating complicated conditional statements and processing boolean logic.", "allenNER": {"words": "Logic operations involve Boolean logic : AND , OR , XOR , and NOT . These can be useful for creating complicated conditional statements and processing boolean logic .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Computers that have multiple ALUs are called what?", "id": "56fdf762761e401900d28c73", "answers": [{"text": "Superscalar", "answer_start": 0}], "is_impossible": false}], "context": "Superscalar computers may contain multiple ALUs, allowing them to process several instructions simultaneously. Graphics processors and computers with SIMD and MIMD features often contain ALUs that can perform arithmetic on vectors and matrices.", "allenNER": {"words": "Superscalar computers may contain multiple ALUs , allowing them to process several instructions simultaneously . Graphics processors and computers with SIMD and MIMD features often contain ALUs that can perform arithmetic on vectors and matrices .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "How many numbers can a cell of a computer's memory hold?", "id": "56fdf80d761e401900d28c75", "answers": [{"text": "a single number", "answer_start": 144}], "is_impossible": false}, {"question": "What is the responsibility of giving significance to what the memory sees as nothing but numbers?", "id": "56fdf80d761e401900d28c76", "answers": [{"text": "the software's", "answer_start": 598}], "is_impossible": false}], "context": "A computer's memory can be viewed as a list of cells into which numbers can be placed or read. Each cell has a numbered \"address\" and can store a single number. The computer can be instructed to \"put the number 123 into the cell numbered 1357\" or to \"add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595.\" The information stored in memory may represent practically anything. Letters, numbers, even computer instructions can be placed into memory with equal ease. Since the CPU does not differentiate between different types of information, it is the software's responsibility to give significance to what the memory sees as nothing but a series of numbers.", "allenNER": {"words": "A computer 's memory can be viewed as a list of cells into which numbers can be placed or read . Each cell has a numbered \" address \" and can store a single number . The computer can be instructed to \" put the number 123 into the cell numbered 1357 \" or to \" add the number that is in cell 1357 to the number that is in cell 2468 and put the answer into cell 1595 . \" The information stored in memory may represent practically anything . Letters , numbers , even computer instructions can be placed into memory with equal ease . Since the CPU does not differentiate between different types of information , it is the software 's responsibility to give significance to what the memory sees as nothing but a series of numbers .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A group of 8 bits is called what?", "id": "56fdf85a761e401900d28c79", "answers": [{"text": "a byte", "answer_start": 115}], "is_impossible": false}, {"question": "How many numbers can a byte represent?", "id": "56fdf85a761e401900d28c7a", "answers": [{"text": "256 different numbers", "answer_start": 155}], "is_impossible": false}, {"question": "What is the range of the numbers that a byte can represent?", "id": "56fdf85a761e401900d28c7b", "answers": [{"text": "0 to 255 or \u2212128 to +127", "answer_start": 201}], "is_impossible": false}], "context": "In almost all modern computers, each memory cell is set up to store binary numbers in groups of eight bits (called a byte). Each byte is able to represent 256 different numbers (28 = 256); either from 0 to 255 or \u2212128 to +127. To store larger numbers, several consecutive bytes may be used (typically, two, four or eight). When negative numbers are required, they are usually stored in two's complement notation. Other arrangements are possible, but are usually not seen outside of specialized applications or historical contexts. A computer can store any kind of information in memory if it can be represented numerically. Modern computers have billions or even trillions of bytes of memory.", "allenNER": {"words": "In almost all modern computers , each memory cell is set up to store binary numbers in groups of eight bits ( called a byte ) . Each byte is able to represent 256 different numbers ( 28 = 256 ) ; either from 0 to 255 or \u2212128 to + 127 . To store larger numbers , several consecutive bytes may be used ( typically , two , four or eight ) . When negative numbers are required , they are usually stored in two 's complement notation . Other arrangements are possible , but are usually not seen outside of specialized applications or historical contexts . A computer can store any kind of information in memory if it can be represented numerically . Modern computers have billions or even trillions of bytes of memory .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What part of the computer has memory cells called registers?", "id": "56fdf89e761e401900d28c7f", "answers": [{"text": "The CPU", "answer_start": 0}], "is_impossible": false}, {"question": "What is the typical range of registers for a CPU?", "id": "56fdf89e761e401900d28c80", "answers": [{"text": "two and one hundred registers", "answer_start": 169}], "is_impossible": false}], "context": "The CPU contains a special set of memory cells called registers that can be read and written to much more rapidly than the main memory area. There are typically between two and one hundred registers depending on the type of CPU. Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed. As data is constantly being worked on, reducing the need to access main memory (which is often slow compared to the ALU and control units) greatly increases the computer's speed.", "allenNER": {"words": "The CPU contains a special set of memory cells called registers that can be read and written to much more rapidly than the main memory area . There are typically between two and one hundred registers depending on the type of CPU . Registers are used for the most frequently needed data items to avoid having to access main memory every time data is needed . As data is constantly being worked on , reducing the need to access main memory ( which is often slow compared to the ALU and control units ) greatly increases the computer 's speed .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What type of memory can a CPU only read from?", "id": "56fdf9de19033b140034ce15", "answers": [{"text": "ROM", "answer_start": 64}], "is_impossible": false}, {"question": "What type of memory can a CPU read and write from?", "id": "56fdf9de19033b140034ce16", "answers": [{"text": "RAM", "answer_start": 0}], "is_impossible": false}, {"question": "What type of memory is always kept and kept the same?", "id": "56fdf9de19033b140034ce17", "answers": [{"text": "ROM", "answer_start": 335}], "is_impossible": false}, {"question": "A progam inside the ROM of a PC is called what?", "id": "56fdf9de19033b140034ce18", "answers": [{"text": "the BIOS", "answer_start": 425}], "is_impossible": false}, {"question": "Software stored in ROM is called what usually?", "id": "56fdf9de19033b140034ce19", "answers": [{"text": "firmware,", "answer_start": 726}], "is_impossible": false}], "context": "RAM can be read and written to anytime the CPU commands it, but ROM is preloaded with data and software that never changes, therefore the CPU can only read from it. ROM is typically used to store the computer's initial start-up instructions. In general, the contents of RAM are erased when the power to the computer is turned off, but ROM retains its data indefinitely. In a PC, the ROM contains a specialized program called the BIOS that orchestrates loading the computer's operating system from the hard disk drive into RAM whenever the computer is turned on or reset. In embedded computers, which frequently do not have disk drives, all of the required software may be stored in ROM. Software stored in ROM is often called firmware, because it is notionally more like hardware than software. Flash memory blurs the distinction between ROM and RAM, as it retains its data when turned off but is also rewritable. It is typically much slower than conventional ROM and RAM however, so its use is restricted to applications where high speed is unnecessary.", "allenNER": {"words": "RAM can be read and written to anytime the CPU commands it , but ROM is preloaded with data and software that never changes , therefore the CPU can only read from it . ROM is typically used to store the computer 's initial start - up instructions . In general , the contents of RAM are erased when the power to the computer is turned off , but ROM retains its data indefinitely . In a PC , the ROM contains a specialized program called the BIOS that orchestrates loading the computer 's operating system from the hard disk drive into RAM whenever the computer is turned on or reset . In embedded computers , which frequently do not have disk drives , all of the required software may be stored in ROM . Software stored in ROM is often called firmware , because it is notionally more like hardware than software . Flash memory blurs the distinction between ROM and RAM , as it retains its data when turned off but is also rewritable . It is typically much slower than conventional ROM and RAM however , so its use is restricted to applications where high speed is unnecessary .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "RAM cache memory is slower than what?", "id": "56fdfa03761e401900d28c83", "answers": [{"text": "registers", "answer_start": 99}], "is_impossible": false}], "context": "In more sophisticated computers there may be one or more RAM cache memories, which are slower than registers but faster than main memory. Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically, often without the need for any intervention on the programmer's part.", "allenNER": {"words": "In more sophisticated computers there may be one or more RAM cache memories , which are slower than registers but faster than main memory . Generally computers with this sort of cache are designed to move frequently needed data into the cache automatically , often without the need for any intervention on the programmer 's part .", "tags": "0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Devices that give input or output to a computer are called what?", "id": "56fdfa85761e401900d28c85", "answers": [{"text": "peripherals", "answer_start": 147}], "is_impossible": false}, {"question": "A mouse is what type of peripheral device?", "id": "56fdfa85761e401900d28c86", "answers": [{"text": "input", "answer_start": 212}], "is_impossible": false}, {"question": "A printer is what type of peripheral device?", "id": "56fdfa85761e401900d28c87", "answers": [{"text": "output", "answer_start": 259}], "is_impossible": false}, {"question": "Hard disk drives are what type of peripheral device?", "id": "56fdfa85761e401900d28c88", "answers": [{"text": "input and output", "answer_start": 382}], "is_impossible": false}, {"question": "A keyboard is what type of peripheral device?", "id": "56fdfa85761e401900d28c89", "answers": [{"text": "input", "answer_start": 212}], "is_impossible": false}], "context": "I/O is the means by which a computer exchanges information with the outside world. Devices that provide input or output to the computer are called peripherals. On a typical personal computer, peripherals include input devices like the keyboard and mouse, and output devices such as the display and printer. Hard disk drives, floppy disk drives and optical disc drives serve as both input and output devices. Computer networking is another form of I/O.", "allenNER": {"words": "I / O is the means by which a computer exchanges information with the outside world . Devices that provide input or output to the computer are called peripherals . On a typical personal computer , peripherals include input devices like the keyboard and mouse , and output devices such as the display and printer . Hard disk drives , floppy disk drives and optical disc drives serve as both input and output devices . Computer networking is another form of I / O.", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "In computer terms, when a computer is switching rapidly between running each program in turn, is called what?", "id": "56fdfad119033b140034ce1f", "answers": [{"text": "multitasking", "answer_start": 209}], "is_impossible": false}], "context": "While a computer may be viewed as running one gigantic program stored in its main memory, in some systems it is necessary to give the appearance of running several programs simultaneously. This is achieved by multitasking i.e. having the computer switch rapidly between running each program in turn.", "allenNER": {"words": "While a computer may be viewed as running one gigantic program stored in its main memory , in some systems it is necessary to give the appearance of running several programs simultaneously . This is achieved by multitasking i.e. having the computer switch rapidly between running each program in turn .", "tags": "0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A method of multitasking that takes a \"slice\" of time in turn is called what?", "id": "56fdfb9219033b140034ce21", "answers": [{"text": "\"time-sharing\"", "answer_start": 757}], "is_impossible": false}, {"question": "A signal that stops a compute executing instructions is called what?", "id": "56fdfb9219033b140034ce22", "answers": [{"text": "an interrupt,", "answer_start": 64}], "is_impossible": false}], "context": "One means by which this is done is with a special signal called an interrupt, which can periodically cause the computer to stop executing instructions where it was and do something else instead. By remembering where it was executing prior to the interrupt, the computer can return to that task later. If several programs are running \"at the same time\". then the interrupt generator might be causing several hundred interrupts per second, causing a program switch each time. Since modern computers typically execute instructions several orders of magnitude faster than human perception, it may appear that many programs are running at the same time even though only one is ever executing in any given instant. This method of multitasking is sometimes termed \"time-sharing\" since each program is allocated a \"slice\" of time in turn.", "allenNER": {"words": "One means by which this is done is with a special signal called an interrupt , which can periodically cause the computer to stop executing instructions where it was and do something else instead . By remembering where it was executing prior to the interrupt , the computer can return to that task later . If several programs are running \" at the same time \" . then the interrupt generator might be causing several hundred interrupts per second , causing a program switch each time . Since modern computers typically execute instructions several orders of magnitude faster than human perception , it may appear that many programs are running at the same time even though only one is ever executing in any given instant . This method of multitasking is sometimes termed \" time - sharing \" since each program is allocated a \" slice \" of time in turn .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Multitasking would seemingly cause a computer to run in what fashion?", "id": "56fdfbee19033b140034ce25", "answers": [{"text": "more slowly,", "answer_start": 97}], "is_impossible": false}, {"question": "What do a lot of programs spend time waiting for?", "id": "56fdfbee19033b140034ce26", "answers": [{"text": "input/output devices", "answer_start": 232}], "is_impossible": false}], "context": "Seemingly, multitasking would cause a computer that is switching between several programs to run more slowly, in direct proportion to the number of programs it is running, but most programs spend much of their time waiting for slow input/output devices to complete their tasks. If a program is waiting for the user to click on the mouse or press a key on the keyboard, then it will not take a \"time slice\" until the event it is waiting for has occurred. This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss.", "allenNER": {"words": "Seemingly , multitasking would cause a computer that is switching between several programs to run more slowly , in direct proportion to the number of programs it is running , but most programs spend much of their time waiting for slow input / output devices to complete their tasks . If a program is waiting for the user to click on the mouse or press a key on the keyboard , then it will not take a \" time slice \" until the event it is waiting for has occurred . This frees up time for other programs to execute so that many programs may be run simultaneously without unacceptable speed loss .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Multiprocessor and multi-core computers have multiples of what?", "id": "56fdfc2c761e401900d28c8f", "answers": [{"text": "CPUs", "answer_start": 268}], "is_impossible": false}], "context": "Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration, a technique once employed only in large and powerful machines such as supercomputers, mainframe computers and servers. Multiprocessor and multi-core (multiple CPUs on a single integrated circuit) personal and laptop computers are now widely available, and are being increasingly used in lower-end markets as a result.", "allenNER": {"words": "Some computers are designed to distribute their work across several CPUs in a multiprocessing configuration , a technique once employed only in large and powerful machines such as supercomputers , mainframe computers and servers . Multiprocessor and multi - core ( multiple CPUs on a single integrated circuit ) personal and laptop computers are now widely available , and are being increasingly used in lower - end markets as a result .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "How many CPUs do supercomputers typically possess?", "id": "56fdfd72761e401900d28c91", "answers": [{"text": "thousands", "answer_start": 192}], "is_impossible": false}, {"question": "What is the name of a computer that has many CPUs and much more powerful?", "id": "56fdfd72761e401900d28c92", "answers": [{"text": "Supercomputers", "answer_start": 0}], "is_impossible": false}], "context": "Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored-program architecture and from general purpose computers. They often feature thousands of CPUs, customized high-speed interconnects, and specialized computing hardware. Such designs tend to be useful only for specialized tasks due to the large scale of program organization required to successfully utilize most of the available resources at once. Supercomputers usually see usage in large-scale simulation, graphics rendering, and cryptography applications, as well as with other so-called \"embarrassingly parallel\" tasks.", "allenNER": {"words": "Supercomputers in particular often have highly unique architectures that differ significantly from the basic stored - program architecture and from general purpose computers . They often feature thousands of CPUs , customized high - speed interconnects , and specialized computing hardware . Such designs tend to be useful only for specialized tasks due to the large scale of program organization required to successfully utilize most of the available resources at once . Supercomputers usually see usage in large - scale simulation , graphics rendering , and cryptography applications , as well as with other so - called \" embarrassingly parallel \" tasks .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What system of the U.S. military's was the first large-scale system to coordinate information between several locations?", "id": "56fe00a519033b140034ce29", "answers": [{"text": "SAGE system", "answer_start": 115}], "is_impossible": false}, {"question": "When were computers first used to coordinate information between many locations?", "id": "56fe00a519033b140034ce2a", "answers": [{"text": "the 1950s", "answer_start": 84}], "is_impossible": false}], "context": "Computers have been used to coordinate information between multiple locations since the 1950s. The U.S. military's SAGE system was the first large-scale example of such a system, which led to a number of special-purpose commercial systems such as Sabre.", "allenNER": {"words": "Computers have been used to coordinate information between multiple locations since the 1950s . The U.S. military 's SAGE system was the first large - scale example of such a system , which led to a number of special - purpose commercial systems such as Sabre .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "ARPA is now known as what?", "id": "56fe00e019033b140034ce2d", "answers": [{"text": "DARPA)", "answer_start": 198}], "is_impossible": false}, {"question": "Who funded the linking of computers around the US in the 1970s?", "id": "56fe00e019033b140034ce2e", "answers": [{"text": "ARPA", "answer_start": 188}], "is_impossible": false}], "context": "In the 1970s, computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology. The effort was funded by ARPA (now DARPA), and the computer network that resulted was called the ARPANET. The technologies that made the Arpanet possible spread and evolved.", "allenNER": {"words": "In the 1970s , computer engineers at research institutions throughout the United States began to link their computers together using telecommunications technology . The effort was funded by ARPA ( now DARPA ) , and the computer network that resulted was called the ARPANET . The technologies that made the Arpanet possible spread and evolved .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The network spread to be known as what today?", "id": "56fe0112761e401900d28c95", "answers": [{"text": "the Internet.", "answer_start": 90}], "is_impossible": false}], "context": "In time, the network spread beyond academic and military institutions and became known as the Internet. The emergence of networking involved a redefinition of the nature and boundaries of the computer. Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network, such as peripheral devices, stored information, and the like, as extensions of the resources of an individual computer. Initially these facilities were available primarily to people working in high-tech environments, but in the 1990s the spread of applications like e-mail and the World Wide Web, combined with the development of cheap, fast networking technologies like Ethernet and ADSL saw computer networking become almost ubiquitous. In fact, the number of computers that are networked is growing phenomenally. A very large proportion of personal computers regularly connect to the Internet to communicate and receive information. \"Wireless\" networking, often utilizing mobile phone networks, has meant networking is becoming increasingly ubiquitous even in mobile computing environments.", "allenNER": {"words": "In time , the network spread beyond academic and military institutions and became known as the Internet . The emergence of networking involved a redefinition of the nature and boundaries of the computer . Computer operating systems and applications were modified to include the ability to define and access the resources of other computers on the network , such as peripheral devices , stored information , and the like , as extensions of the resources of an individual computer . Initially these facilities were available primarily to people working in high - tech environments , but in the 1990s the spread of applications like e - mail and the World Wide Web , combined with the development of cheap , fast networking technologies like Ethernet and ADSL saw computer networking become almost ubiquitous . In fact , the number of computers that are networked is growing phenomenally . A very large proportion of personal computers regularly connect to the Internet to communicate and receive information . \" Wireless \" networking , often utilizing mobile phone networks , has meant networking is becoming increasingly ubiquitous even in mobile computing environments .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "The ability to store and execute lists of instructions are called what?", "id": "56fe016d761e401900d28c97", "answers": [{"text": "programs", "answer_start": 62}], "is_impossible": false}, {"question": "The mathematical statement of computers versatility is known as what?", "id": "56fe016d761e401900d28c98", "answers": [{"text": "The Church\u2013Turing thesis", "answer_start": 146}], "is_impossible": false}], "context": "The ability to store and execute lists of instructions called programs makes computers extremely versatile, distinguishing them from calculators. The Church\u2013Turing thesis is a mathematical statement of this versatility: any computer with a minimum capability (being Turing-complete) is, in principle, capable of performing the same tasks that any other computer can perform. Therefore, any type of computer (netbook, supercomputer, cellular automaton, etc.) is able to perform the same computational tasks, given enough time and storage capacity.", "allenNER": {"words": "The ability to store and execute lists of instructions called programs makes computers extremely versatile , distinguishing them from calculators . The Church \u2013 Turing thesis is a mathematical statement of this versatility : any computer with a minimum capability ( being Turing - complete ) is , in principle , capable of performing the same tasks that any other computer can perform . Therefore , any type of computer ( netbook , supercomputer , cellular automaton , etc . ) is able to perform the same computational tasks , given enough time and storage capacity .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "All devices that can process information can qualify being called what?", "id": "56fe01af19033b140034ce31", "answers": [{"text": "a computer", "answer_start": 513}], "is_impossible": false}], "context": "A computer does not need to be electronic, nor even have a processor, nor RAM, nor even a hard disk. While popular usage of the word \"computer\" is synonymous with a personal electronic computer, the modern definition of a computer is literally: \"A device that computes, especially a programmable [usually] electronic machine that performs high-speed mathematical or logical operations or that assembles, stores, correlates, or otherwise processes information.\" Any device which processes information qualifies as a computer, especially if the processing is purposeful.[citation needed]", "allenNER": {"words": "A computer does not need to be electronic , nor even have a processor , nor RAM , nor even a hard disk . While popular usage of the word \" computer \" is synonymous with a personal electronic computer , the modern definition of a computer is literally : \" A device that computes , especially a programmable [ usually ] electronic machine that performs high - speed mathematical or logical operations or that assembles , stores , correlates , or otherwise processes information . \" Any device which processes information qualifies as a computer , especially if the processing is purposeful.[citation needed ]", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Vacuum tubes in early computers were replaced by what?", "id": "56fe022c19033b140034ce33", "answers": [{"text": "transistors", "answer_start": 94}], "is_impossible": false}, {"question": "Transistors are typically made up of what today?", "id": "56fe022c19033b140034ce34", "answers": [{"text": "photolithographed semiconductors", "answer_start": 422}], "is_impossible": false}, {"question": "A computer that is made using pool balls is known as what?", "id": "56fe022c19033b140034ce35", "answers": [{"text": "billiard ball computer)", "answer_start": 282}], "is_impossible": false}], "context": "Historically, computers evolved from mechanical computers and eventually from vacuum tubes to transistors. However, conceptually computational systems as flexible as a personal computer can be built out of almost anything. For example, a computer can be made out of billiard balls (billiard ball computer); an often quoted example.[citation needed] More realistically, modern computers are made out of transistors made of photolithographed semiconductors.", "allenNER": {"words": "Historically , computers evolved from mechanical computers and eventually from vacuum tubes to transistors . However , conceptually computational systems as flexible as a personal computer can be built out of almost anything . For example , a computer can be made out of billiard balls ( billiard ball computer ) ; an often quoted example.[citation needed ] More realistically , modern computers are made out of transistors made of photolithographed semiconductors .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "What type of computer can break encryption algorithms quickly?", "id": "56fe0329761e401900d28c9b", "answers": [{"text": "quantum computers", "answer_start": 433}], "is_impossible": false}, {"question": "By what method do quantum computers solve encryption algorithms quickly?", "id": "56fe0329761e401900d28c9c", "answers": [{"text": "quantum factoring", "answer_start": 511}], "is_impossible": false}], "context": "There is active research to make computers out of many promising new types of technology, such as optical computers, DNA computers, neural computers, and quantum computers. Most computers are universal, and are able to calculate any computable function, and are limited only by their memory capacity and operating speed. However different designs of computers can give very different performance for particular problems; for example quantum computers can potentially break some modern encryption algorithms (by quantum factoring) very quickly.", "allenNER": {"words": "There is active research to make computers out of many promising new types of technology , such as optical computers , DNA computers , neural computers , and quantum computers . Most computers are universal , and are able to calculate any computable function , and are limited only by their memory capacity and operating speed . However different designs of computers can give very different performance for particular problems ; for example quantum computers can potentially break some modern encryption algorithms ( by quantum factoring ) very quickly .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Computer programs that can learn are studied in what field?", "id": "56fe034c19033b140034ce39", "answers": [{"text": "artificial intelligence", "answer_start": 249}], "is_impossible": false}], "context": "A computer will solve problems in exactly the way it is programmed to, without regard to efficiency, alternative solutions, possible shortcuts, or possible errors in the code. Computer programs that learn and adapt are part of the emerging field of artificial intelligence and machine learning.", "allenNER": {"words": "A computer will solve problems in exactly the way it is programmed to , without regard to efficiency , alternative solutions , possible shortcuts , or possible errors in the code . Computer programs that learn and adapt are part of the emerging field of artificial intelligence and machine learning .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Parts of a computer that are real objects are collectively known as what?", "id": "56fe037c19033b140034ce3b", "answers": [{"text": "hardware", "answer_start": 9}], "is_impossible": false}], "context": "The term hardware covers all of those parts of a computer that are tangible objects. Circuits, displays, power supplies, cables, keyboards, printers and mice are all hardware.", "allenNER": {"words": "The term hardware covers all of those parts of a computer that are tangible objects . Circuits , displays , power supplies , cables , keyboards , printers and mice are all hardware .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Parts of a computer that are not material objects are collectively known as what?", "id": "56fe03d5761e401900d28c9f", "answers": [{"text": "Software", "answer_start": 0}], "is_impossible": false}, {"question": "Software stored in hardware that cannot be changed easily is called what?", "id": "56fe03d5761e401900d28ca0", "answers": [{"text": "firmware", "answer_start": 251}], "is_impossible": false}, {"question": "What type of \"ware\" is a BIOS ROM in a PC?", "id": "56fe03d5761e401900d28ca1", "answers": [{"text": "software", "answer_start": 121}], "is_impossible": false}], "context": "Software refers to parts of the computer which do not have a material form, such as programs, data, protocols, etc. When software is stored in hardware that cannot easily be modified (such as BIOS ROM in an IBM PC compatible), it is sometimes called \"firmware\".", "allenNER": {"words": "Software refers to parts of the computer which do not have a material form , such as programs , data , protocols , etc . When software is stored in hardware that can not easily be modified ( such as BIOS ROM in an IBM PC compatible ) , it is sometimes called \" firmware \" .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "A BIOS chip is located where in a computer?", "id": "56fe0408761e401900d28ca5", "answers": [{"text": "the motherboard", "answer_start": 155}], "is_impossible": false}, {"question": "What type of software is stored in a BIOS chip?", "id": "56fe0408761e401900d28ca6", "answers": [{"text": "BIOS set up", "answer_start": 183}], "is_impossible": false}], "context": "Firmware is the technology which has the combination of both hardware and software such as BIOS chip inside a computer. This chip (hardware) is located on the motherboard and has the BIOS set up (software) stored in it.", "allenNER": {"words": "Firmware is the technology which has the combination of both hardware and software such as BIOS chip inside a computer . This chip ( hardware ) is located on the motherboard and has the BIOS set up ( software ) stored in it .", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}, {"qas": [{"question": "Processing data from input and output devices is typically done by what?", "id": "56fe044419033b140034ce3d", "answers": [{"text": "CPU", "answer_start": 230}], "is_impossible": false}, {"question": "Where is the data from input devices sent to after being processed?", "id": "56fe044419033b140034ce3e", "answers": [{"text": "output devices", "answer_start": 112}], "is_impossible": false}], "context": "When unprocessed data is sent to the computer with the help of input devices, the data is processed and sent to output devices. The input devices may be hand-operated or automated. The act of processing is mainly regulated by the CPU. Some examples of hand-operated input devices are:", "allenNER": {"words": "When unprocessed data is sent to the computer with the help of input devices , the data is processed and sent to output devices . The input devices may be hand - operated or automated . The act of processing is mainly regulated by the CPU . Some examples of hand - operated input devices are :", "tags": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"}}]}, "version": ["v2.0"]}